var searchIndex = {};
searchIndex["vkrs"] = {"doc":"Vkontakte API Rust client library","items":[[0,"api","vkrs","",null,null],[3,"Collection","vkrs::api","",null,null],[12,"count","","",0,null],[12,"items","","",0,null],[3,"RichCollection","","",null,null],[12,"count","","",1,null],[12,"items","","",1,null],[12,"profiles","","",1,null],[12,"groups","","",1,null],[3,"ApiError","","",null,null],[12,"error_code","","",2,null],[12,"error_msg","","",2,null],[12,"request_params","","",2,null],[3,"KeyVal","","",null,null],[12,"key","","",3,null],[12,"value","","",3,null],[3,"LikesCount","","",null,null],[12,"user_likes","","",4,null],[12,"count","","",4,null],[3,"Profile","","",null,null],[3,"Group","","",null,null],[3,"AlbumId","","",null,null],[12,"album_id","","",5,null],[3,"Comment","","",null,null],[12,"id","","",6,null],[12,"from_id","","",6,null],[12,"date","","",6,null],[12,"text","","",6,null],[12,"likes","","",6,null],[3,"FullId","","",null,null],[12,"0","","",7,null],[12,"1","","",7,null],[3,"Client","","",null,null],[3,"ApiResult","","",null,null],[12,"0","","",8,null],[3,"Attachment","","",null,null],[12,"kind","","",9,null],[12,"owner_id","","",9,null],[12,"media_id","","",9,null],[4,"Error","","",null,null],[13,"Api","","",10,null],[13,"Http","","",10,null],[13,"Json","","",10,null],[4,"ErrorCode","","",null,null],[13,"General","","",11,null],[13,"Database","","",11,null],[13,"Unauthorized","","",11,null],[13,"Signature","","",11,null],[13,"Request","","",11,null],[13,"ScriptCompileError","","",11,null],[13,"ScriptRuntimeError","","",11,null],[13,"MethodAccessDenied","","",11,null],[13,"Banned","","",11,null],[13,"Blocked","","",11,null],[13,"GoodsNotFound","","",11,null],[13,"GoodsUnvailable","","",11,null],[13,"UserNotFound","","",11,null],[13,"RequiredParameterMissing","","",11,null],[13,"InvalidAlbumId","","",11,null],[13,"InvalidServer","","",11,null],[13,"InvalidHash","","",11,null],[13,"InvalidPhotoId","","",11,null],[13,"InvalidAudio","","",11,null],[13,"InvalidPhoto","","",11,null],[13,"UserMenuAccessDenied","","",11,null],[13,"AccessDenied","","",11,null],[13,"AccessToWallPostDenied","","",11,null],[13,"PostAddAccessDenied","","",11,null],[13,"AdsPostWasRecentlyAdded","","",11,null],[13,"TooManyRecipients","","",11,null],[13,"HyperlinksForbidden","","",11,null],[13,"UserDisabledTrackBroadcast","","",11,null],[13,"CopyrightedObjectRemoved","","",11,null],[13,"InvalidFilename","","",11,null],[13,"SizeLimitReached","","",11,null],[13,"VideoAlreadyAdded","","",11,null],[13,"VideoCommentsClosed","","",11,null],[13,"App","","",11,null],[13,"Unknown","","",11,null],[4,"Privacy","","",null,null],[13,"All","","",12,null],[13,"Friends","","",12,null],[13,"FriendsOfFriends","","",12,null],[13,"FriendsOfFriendsOnly","","",12,null],[13,"Nobody","","",12,null],[13,"OnlyMe","","",12,null],[13,"List","","",12,null],[13,"OnlyList","","",12,null],[13,"User","","",12,null],[13,"OnlyUser","","",12,null],[4,"Sort","","",null,null],[13,"DateAdded","","",13,null],[13,"Length","","",13,null],[13,"Popularity","","",13,null],[4,"ReportReason","","",null,null],[13,"Spam","","",14,null],[13,"ChildPorn","","",14,null],[13,"Extremism","","",14,null],[13,"Violence","","",14,null],[13,"Drugs","","",14,null],[13,"AdultOnly","","",14,null],[13,"Offence","","",14,null],[4,"SortOrder","","",null,null],[13,"Asc","","",15,null],[13,"Desc","","",15,null],[4,"AttachmentKind","","",null,null],[13,"Photo","","",16,null],[13,"Video","","",16,null],[13,"Audio","","",16,null],[13,"Document","","",16,null],[6,"OwnerId","","",null,null],[6,"Id","","",null,null],[6,"Timestamp","","",null,null],[6,"Duration","","",null,null],[6,"Bool","","",null,null],[6,"Result","","",null,null],[17,"VK_DOMAIN","","",null,null],[17,"VK_PATH","","",null,null],[8,"Request","","Trait for things that can be posted to VK API directly",null,null],[16,"Response","","",17,null],[10,"method_name","","",17,{"inputs":[],"output":{"name":"str"}}],[10,"to_query_string","","",17,null],[11,"permissions","","",17,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_url","","",17,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",0,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"fullid"}}],[11,"fmt","","",7,null],[11,"from","","",7,null],[11,"into","","",7,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"from","","",10,{"inputs":[{"name":"apierror"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"httperror"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"jsonerror"}],"output":{"name":"error"}}],[11,"from","","",10,{"inputs":[{"name":"urlerror"}],"output":{"name":"error"}}],[11,"auth","","",20,null],[11,"new","","",20,{"inputs":[],"output":{"name":"client"}}],[11,"get","","",20,null],[11,"fmt","","",8,null],[11,"deref","","",8,null],[11,"deserialize","","",8,{"inputs":[{"name":"d"}],"output":{"name":"stdresult"}}],[11,"into","","",3,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"from","","",11,{"inputs":[{"name":"u32"}],"output":{"name":"errorcode"}}],[11,"into","","",11,null],[11,"fmt","","",11,null],[11,"deserialize","","",11,{"inputs":[{"name":"d"}],"output":{"name":"stdresult"}}],[11,"description","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"as_ref","","",13,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"default","","",14,{"inputs":[],"output":{"name":"reportreason"}}],[11,"as_ref","","",14,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"fmt","","",15,null],[11,"as_ref","","",15,null],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",15,{"inputs":[],"output":{"name":"sortorder"}}],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"fmt","","",16,null],[11,"as_ref","","",16,null],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",16,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[0,"auth","vkrs","",null,null],[4,"OAuthError","vkrs::auth","Errors that can occur during authorization.",null,null],[13,"Io","","IO error.",21,null],[13,"Url","","URL error.",21,null],[13,"Hyper","","Hyper error.",21,null],[13,"Json","","JSON error.",21,null],[13,"Parse","","Response parse error.",21,null],[13,"OAuth2","","OAuth 2.0 error.",21,null],[3,"AccessTokenLifetime","","",null,null],[3,"AccessToken","","",null,null],[12,"user_id","","",22,null],[12,"email","","",22,null],[3,"OAuth","","",null,null],[3,"Auth","","",null,null],[3,"Permissions","","",null,null],[4,"Permission","","",null,null],[13,"Notify","","",23,null],[13,"Friends","","",23,null],[13,"Photos","","",23,null],[13,"Audio","","",23,null],[13,"Video","","",23,null],[13,"Docs","","",23,null],[13,"Notes","","",23,null],[13,"Pages","","",23,null],[13,"Menu","","",23,null],[13,"Status","","",23,null],[13,"Offers","","",23,null],[13,"Questions","","",23,null],[13,"Wall","","",23,null],[13,"Groups","","",23,null],[13,"Messages","","",23,null],[13,"Email","","",23,null],[13,"Notifications","","",23,null],[13,"Stats","","",23,null],[13,"Ads","","",23,null],[13,"Market","","",23,null],[13,"Offline","","",23,null],[13,"NoHttps","","",23,null],[7,"OAUTH_DEFAULT_REDIRECT_URI","","",null,null],[11,"fmt","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"deserialize","","",24,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",24,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"fmt","","",22,null],[11,"from_response","","",24,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"from_response","","",22,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"expired","","",24,null],[11,"access_token","","",22,null],[11,"scope","","",22,null],[11,"lifetime","","",22,null],[11,"expired","","",22,null],[11,"new","","",25,{"inputs":[{"name":"httpclient"},{"name":"string"},{"name":"string"}],"output":{"name":"oauth"}}],[11,"auth_uri","","",25,null],[11,"auth_uri_for","","",25,null],[11,"request_token","","",25,null],[11,"auth_uri","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"token_uri","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"credentials_in_body","","",26,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"clone","","",23,null],[11,"variants","","",23,null],[11,"mask","","",23,null],[11,"mask_all","","",23,{"inputs":[],"output":{"name":"i32"}}],[11,"to_str","","",23,null],[11,"from_str","","",23,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"default","","",27,{"inputs":[],"output":{"name":"permissions"}}],[11,"new","","",27,{"inputs":[{"name":"i32"}],"output":{"name":"permissions"}}],[11,"deserialize","","",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"from_str","","",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from","","",27,{"inputs":[{"name":"permission"}],"output":{"name":"permissions"}}],[11,"from","","",27,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"into","","",27,null],[11,"into","","",27,null],[11,"into","","",27,null],[0,"audio","vkrs","",null,null],[3,"Audio","vkrs::audio","",null,null],[12,"id","","",28,null],[12,"owner_id","","",28,null],[12,"artist","","",28,null],[12,"title","","",28,null],[12,"date","","",28,null],[12,"url","","",28,null],[12,"lyrics_id","","",28,null],[12,"album_id","","",28,null],[12,"genre_id","","",28,null],[12,"duration","","",28,null],[12,"no_search","","",28,null],[3,"Lyrics","","",null,null],[12,"lyrics_id","","",29,null],[12,"text","","",29,null],[3,"Album","","",null,null],[12,"id","","",30,null],[12,"owner_id","","",30,null],[12,"title","","",30,null],[3,"UploadUrl","","",null,null],[12,"upload_url","","",31,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\naudio.get\n&quot;&gt;\naudio.get\n&lt;/a&gt; API request.",null,null],[3,"Search","","The &lt;a href=&quot;https://vk.com/dev/\naudio.search\n&quot;&gt;\naudio.search\n&lt;/a&gt; API request.",null,null],[3,"GetUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getUploadServer\n&quot;&gt;\naudio.getUploadServer\n&lt;/a&gt; API request.",null,null],[3,"Save","","The &lt;a href=&quot;https://vk.com/dev/\naudio.save\n&quot;&gt;\naudio.save\n&lt;/a&gt; API request.",null,null],[3,"Add","","The &lt;a href=&quot;https://vk.com/dev/\naudio.add\n&quot;&gt;\naudio.add\n&lt;/a&gt; API request.",null,null],[3,"Delete","","The &lt;a href=&quot;https://vk.com/dev/\naudio.delete\n&quot;&gt;\naudio.delete\n&lt;/a&gt; API request.",null,null],[3,"Edit","","The &lt;a href=&quot;https://vk.com/dev/\naudio.edit\n&quot;&gt;\naudio.edit\n&lt;/a&gt; API request.",null,null],[3,"Reorder","","The &lt;a href=&quot;https://vk.com/dev/\naudio.reorder\n&quot;&gt;\naudio.reorder\n&lt;/a&gt; API request.",null,null],[3,"Restore","","The &lt;a href=&quot;https://vk.com/dev/\naudio.restore\n&quot;&gt;\naudio.restore\n&lt;/a&gt; API request.",null,null],[3,"GetById","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getById\n&quot;&gt;\naudio.getById\n&lt;/a&gt; API request.",null,null],[3,"GetLyrics","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getLyrics\n&quot;&gt;\naudio.getLyrics\n&lt;/a&gt; API request.",null,null],[3,"GetCount","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getCount\n&quot;&gt;\naudio.getCount\n&lt;/a&gt; API request.",null,null],[3,"GetAlbums","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getAlbums\n&quot;&gt;\naudio.getAlbums\n&lt;/a&gt; API request.",null,null],[3,"AddAlbum","","The &lt;a href=&quot;https://vk.com/dev/\naudio.addAlbum\n&quot;&gt;\naudio.addAlbum\n&lt;/a&gt; API request.",null,null],[3,"EditAlbum","","The &lt;a href=&quot;https://vk.com/dev/\naudio.editAlbum\n&quot;&gt;\naudio.editAlbum\n&lt;/a&gt; API request.",null,null],[3,"DeleteAlbum","","The &lt;a href=&quot;https://vk.com/dev/\naudio.deleteAlbum\n&quot;&gt;\naudio.deleteAlbum\n&lt;/a&gt; API request.",null,null],[3,"MoveToAlbum","","The &lt;a href=&quot;https://vk.com/dev/\naudio.moveToAlbum\n&quot;&gt;\naudio.moveToAlbum\n&lt;/a&gt; API request.",null,null],[3,"SetBroadcast","","The &lt;a href=&quot;https://vk.com/dev/\naudio.setBroadcast\n&quot;&gt;\naudio.setBroadcast\n&lt;/a&gt; API request.",null,null],[3,"GetFriendsBroadcastList","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getBroadcastList\n&quot;&gt;\naudio.getBroadcastList\n&lt;/a&gt; API request.",null,null],[3,"GetGroupsBroadcastList","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getBroadcastList\n&quot;&gt;\naudio.getBroadcastList\n&lt;/a&gt; API request.",null,null],[3,"GetPopular","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getPopular\n&quot;&gt;\naudio.getPopular\n&lt;/a&gt; API request.",null,null],[3,"GetRecommendations","","The &lt;a href=&quot;https://vk.com/dev/\naudio.getRecommendations\n&quot;&gt;\naudio.getRecommendations\n&lt;/a&gt; API request.",null,null],[4,"Genre","","",null,null],[13,"Rock","","",32,null],[13,"Pop","","",32,null],[13,"RapHipHop","","",32,null],[13,"EasyListen","","",32,null],[13,"DanceHouse","","",32,null],[13,"Instrumental","","",32,null],[13,"Metal","","",32,null],[13,"Alternative","","",32,null],[13,"Dubstep","","",32,null],[13,"JazzBlues","","",32,null],[13,"DrumBass","","",32,null],[13,"Trance","","",32,null],[13,"Chanson","","",32,null],[13,"Ethnic","","",32,null],[13,"AcousticVocal","","",32,null],[13,"Reggae","","",32,null],[13,"Classical","","",32,null],[13,"IndiePop","","",32,null],[13,"Speech","","",32,null],[13,"ElectropopDisco","","",32,null],[13,"Other","","",32,null],[13,"Unknown","","",32,null],[4,"Filter","","",null,null],[13,"All","","",33,null],[13,"Friends","","",33,null],[13,"Groups","","",33,null],[11,"clone","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"fmt","","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"method_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",34,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",34,null],[11,"new","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",34,null],[11,"album_id","","",34,null],[11,"audio_ids","","",34,null],[11,"offset","","",34,null],[11,"count","","",34,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"method_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",35,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",35,null],[11,"new","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"auto_complete","","",35,null],[11,"lyrics","","",35,null],[11,"performer_only","","",35,null],[11,"sort","","",35,null],[11,"search_own","","",35,null],[11,"offset","","",35,null],[11,"count","","",35,null],[11,"q","","",35,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"clone","","",36,null],[11,"method_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",36,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",36,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[11,"method_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",37,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",37,null],[11,"new","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"server","","",37,null],[11,"audio","","",37,null],[11,"hash","","",37,null],[11,"artist","","",37,null],[11,"title","","",37,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"clone","","",38,null],[11,"method_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",38,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",38,null],[11,"new","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"audio_id","","",38,null],[11,"owner_id","","",38,null],[11,"group_id","","",38,null],[11,"album_id","","",38,null],[11,"fmt","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"clone","","",39,null],[11,"method_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",39,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",39,null],[11,"new","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"audio_id","","",39,null],[11,"owner_id","","",39,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"clone","","",40,null],[11,"method_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",40,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",40,null],[11,"new","","",40,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",40,null],[11,"audio_id","","",40,null],[11,"genre_id","","",40,null],[11,"no_search","","",40,null],[11,"artist","","",40,null],[11,"title","","",40,null],[11,"text","","",40,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"method_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",41,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",41,null],[11,"new","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"audio_id","","",41,null],[11,"owner_id","","",41,null],[11,"before","","",41,null],[11,"after","","",41,null],[11,"fmt","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"clone","","",42,null],[11,"method_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",42,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",42,null],[11,"new","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"audio_id","","",42,null],[11,"owner_id","","",42,null],[11,"fmt","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"clone","","",43,null],[11,"method_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",43,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",43,null],[11,"new","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"audios","","",43,null],[11,"fmt","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"clone","","",44,null],[11,"method_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",44,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",44,null],[11,"new","","",44,{"inputs":[],"output":{"name":"self"}}],[11,"lyrics_id","","",44,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"clone","","",45,null],[11,"method_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",45,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",45,null],[11,"new","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",45,null],[11,"fmt","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"clone","","",46,null],[11,"method_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",46,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",46,null],[11,"new","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",46,null],[11,"offset","","",46,null],[11,"count","","",46,null],[11,"fmt","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"clone","","",47,null],[11,"method_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",47,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",47,null],[11,"new","","",47,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",47,null],[11,"title","","",47,null],[11,"fmt","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"clone","","",48,null],[11,"method_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",48,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",48,null],[11,"new","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",48,null],[11,"album_id","","",48,null],[11,"title","","",48,null],[11,"fmt","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"clone","","",49,null],[11,"method_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",49,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",49,null],[11,"new","","",49,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",49,null],[11,"album_id","","",49,null],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"clone","","",50,null],[11,"method_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",50,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",50,null],[11,"new","","",50,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",50,null],[11,"album_id","","",50,null],[11,"audio_ids","","",50,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"clone","","",51,null],[11,"method_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",51,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",51,null],[11,"new","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"audio","","",51,null],[11,"target_ids","","",51,null],[11,"fmt","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"clone","","",52,null],[11,"method_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",52,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",52,null],[11,"new","","",52,{"inputs":[],"output":{"name":"self"}}],[11,"active","","",52,null],[11,"fmt","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"clone","","",53,null],[11,"method_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",53,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",53,null],[11,"new","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"active","","",53,null],[11,"fmt","","",54,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"clone","","",54,null],[11,"method_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",54,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",54,null],[11,"new","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"only_eng","","",54,null],[11,"genre_id","","",54,null],[11,"offset","","",54,null],[11,"count","","",54,null],[11,"fmt","","",55,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"clone","","",55,null],[11,"method_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",55,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",55,null],[11,"new","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"target_audio","","",55,null],[11,"user_id","","",55,null],[11,"offset","","",55,null],[11,"count","","",55,null],[11,"shuffle","","",55,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"deserialize","","",32,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",32,null],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"fmt","","",33,null],[11,"as_ref","","",33,null],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",33,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"gifts","vkrs","",null,null],[3,"GiftItem","vkrs::gifts","",null,null],[12,"id","","",56,null],[12,"from_id","","",56,null],[12,"message","","",56,null],[12,"date","","",56,null],[12,"gift","","",56,null],[12,"privacy","","",56,null],[3,"Gift","","",null,null],[12,"id","","",57,null],[12,"thumb_256","","",57,null],[12,"thumb_96","","",57,null],[12,"thumb_48","","",57,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\ngifts.get\n&quot;&gt;\ngifts.get\n&lt;/a&gt; API request.",null,null],[4,"GiftPrivacy","","",null,null],[13,"Pubclic","","",58,null],[13,"SenderNameOnly","","",58,null],[13,"Private","","",58,null],[11,"clone","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"fmt","","",56,null],[11,"clone","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"fmt","","",57,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"eq","","",58,null],[11,"deserialize","","",58,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"clone","","",59,null],[11,"method_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",59,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",59,null],[11,"new","","",59,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",59,null],[11,"count","","",59,null],[11,"offset","","",59,null],[0,"photos","vkrs","",null,null],[3,"CreateAlbum","vkrs::photos","The &lt;a href=&quot;https://vk.com/dev/\nphotos.createAlbum\n&quot;&gt;\nphotos.createAlbum\n&lt;/a&gt; API request.",null,null],[3,"EditAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.editAlbum\n&quot;&gt;\nphotos.editAlbum\n&lt;/a&gt; API request.",null,null],[3,"GetAlbums","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getAlbums\n&quot;&gt;\nphotos.getAlbums\n&lt;/a&gt; API request.",null,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.get\n&quot;&gt;\nphotos.get\n&lt;/a&gt; API request.",null,null],[3,"GetAlbumsCount","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getAlbumsCount\n&quot;&gt;\nphotos.getAlbumsCount\n&lt;/a&gt; API request.",null,null],[3,"GetById","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getById\n&quot;&gt;\nphotos.getById\n&lt;/a&gt; API request.",null,null],[3,"GetUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getUploadServer\n&quot;&gt;\nphotos.getUploadServer\n&lt;/a&gt; API request.",null,null],[3,"GetOwnerPhotoUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getOwnerPhotoUploadServer\n&quot;&gt;\nphotos.getOwnerPhotoUploadServer\n&lt;/a&gt; API request.",null,null],[3,"GetChatUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getChatUploadServer\n&quot;&gt;\nphotos.getChatUploadServer\n&lt;/a&gt; API request.",null,null],[3,"GetMarketUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getMarketUploadServer\n&quot;&gt;\nphotos.getMarketUploadServer\n&lt;/a&gt; API request.",null,null],[3,"GetMarketAlbumUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getMarketAlbumUploadServer\n&quot;&gt;\nphotos.getMarketAlbumUploadServer\n&lt;/a&gt; API request.",null,null],[3,"GetWallUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getWallUploadServer\n&quot;&gt;\nphotos.getWallUploadServer\n&lt;/a&gt; API request.",null,null],[3,"GetMessagesUploadServer","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getMessagesUploadServer\n&quot;&gt;\nphotos.getMessagesUploadServer\n&lt;/a&gt; API request.",null,null],[3,"SaveMarketPhoto","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.saveMarketPhoto\n&quot;&gt;\nphotos.saveMarketPhoto\n&lt;/a&gt; API request.",null,null],[3,"SaveMarketAlbumPhoto","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.saveMarketAlbumPhoto\n&quot;&gt;\nphotos.saveMarketAlbumPhoto\n&lt;/a&gt; API request.",null,null],[3,"SaveOwnerPhoto","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.saveOwnerPhoto\n&quot;&gt;\nphotos.saveOwnerPhoto\n&lt;/a&gt; API request.",null,null],[3,"SaveWallPhoto","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.saveWallPhoto\n&quot;&gt;\nphotos.saveWallPhoto\n&lt;/a&gt; API request.",null,null],[3,"SaveMessagesPhoto","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.saveMessagesPhoto\n&quot;&gt;\nphotos.saveMessagesPhoto\n&lt;/a&gt; API request.",null,null],[3,"Report","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.report\n&quot;&gt;\nphotos.report\n&lt;/a&gt; API request.",null,null],[3,"ReportComment","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.reportComment\n&quot;&gt;\nphotos.reportComment\n&lt;/a&gt; API request.",null,null],[3,"Search","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.search\n&quot;&gt;\nphotos.search\n&lt;/a&gt; API request.",null,null],[3,"Save","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.save\n&quot;&gt;\nphotos.save\n&lt;/a&gt; API request.",null,null],[3,"Copy","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.copy\n&quot;&gt;\nphotos.copy\n&lt;/a&gt; API request.",null,null],[3,"Edit","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.edit\n&quot;&gt;\nphotos.edit\n&lt;/a&gt; API request.",null,null],[3,"Move","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.move\n&quot;&gt;\nphotos.move\n&lt;/a&gt; API request.",null,null],[3,"MakeCover","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.makeCover\n&quot;&gt;\nphotos.makeCover\n&lt;/a&gt; API request.",null,null],[3,"ReorderAlbums","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.reorderAlbums\n&quot;&gt;\nphotos.reorderAlbums\n&lt;/a&gt; API request.",null,null],[3,"ReorderPhotos","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.reorderPhotos\n&quot;&gt;\nphotos.reorderPhotos\n&lt;/a&gt; API request.",null,null],[3,"GetAll","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getAll\n&quot;&gt;\nphotos.getAll\n&lt;/a&gt; API request.",null,null],[3,"GetUserPhotos","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getUserPhotos\n&quot;&gt;\nphotos.getUserPhotos\n&lt;/a&gt; API request.",null,null],[3,"DeleteAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.deleteAlbum\n&quot;&gt;\nphotos.deleteAlbum\n&lt;/a&gt; API request.",null,null],[3,"Delete","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.delete\n&quot;&gt;\nphotos.delete\n&lt;/a&gt; API request.",null,null],[3,"ConfirmTag","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.confirmTag\n&quot;&gt;\nphotos.confirmTag\n&lt;/a&gt; API request.",null,null],[3,"GetComments","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getComments\n&quot;&gt;\nphotos.getComments\n&lt;/a&gt; API request.",null,null],[3,"GetAllComments","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getAllComments\n&quot;&gt;\nphotos.getAllComments\n&lt;/a&gt; API request.",null,null],[3,"CreateComment","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.createComment\n&quot;&gt;\nphotos.createComment\n&lt;/a&gt; API request.",null,null],[3,"DeleteComment","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.deleteComment\n&quot;&gt;\nphotos.deleteComment\n&lt;/a&gt; API request.",null,null],[3,"Restore","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.restore\n&quot;&gt;\nphotos.restore\n&lt;/a&gt; API request.",null,null],[3,"RestoreComment","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.restoreComment\n&quot;&gt;\nphotos.restoreComment\n&lt;/a&gt; API request.",null,null],[3,"EditComment","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.editComment\n&quot;&gt;\nphotos.editComment\n&lt;/a&gt; API request.",null,null],[3,"GetTags","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getTags\n&quot;&gt;\nphotos.getTags\n&lt;/a&gt; API request.",null,null],[3,"PutTag","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.putTag\n&quot;&gt;\nvideo.putTag\n&lt;/a&gt; API request.",null,null],[3,"RemoveTag","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.removeTag\n&quot;&gt;\nphotos.removeTag\n&lt;/a&gt; API request.",null,null],[3,"GetNewTags","","The &lt;a href=&quot;https://vk.com/dev/\nphotos.getNewTags\n&quot;&gt;\nphotos.getNewTags\n&lt;/a&gt; API request.",null,null],[3,"Photo","","",null,null],[12,"id","","",60,null],[12,"album_id","","",60,null],[12,"owner_id","","",60,null],[12,"user_id","","",60,null],[12,"width","","",60,null],[12,"height","","",60,null],[12,"text","","",60,null],[12,"date","","",60,null],[12,"sizes","","",60,null],[12,"placer_id","","",60,null],[12,"tag_id","","",60,null],[12,"tag_created","","",60,null],[3,"Album","","",null,null],[12,"id","","",61,null],[12,"thumb_id","","",61,null],[12,"owner_id","","",61,null],[12,"title","","",61,null],[12,"description","","",61,null],[12,"created","","",61,null],[12,"updated","","",61,null],[12,"privacy","","",61,null],[12,"comment_privacy","","",61,null],[12,"size","","",61,null],[12,"thumb_is_last","","",61,null],[12,"can_upload","","",61,null],[12,"sizes","","",61,null],[12,"thumb_src","","",61,null],[12,"kind","","",61,null],[3,"Thumb","","",null,null],[12,"src","","",62,null],[12,"width","","",62,null],[12,"height","","",62,null],[12,"kind","","",62,null],[3,"UploadServer","","",null,null],[12,"upload_url","","",63,null],[12,"album_id","","",63,null],[12,"user_id","","",63,null],[3,"UploadUrl","","",null,null],[12,"upload_url","","",64,null],[3,"SavedPhoto","","",null,null],[12,"hash","","",65,null],[12,"src","","",65,null],[12,"src_big","","",65,null],[12,"src_small","","",65,null],[3,"Tag","","",null,null],[4,"ThumbKind","","",null,null],[13,"Prop75","","",66,null],[13,"Prop130","","",66,null],[13,"Prop604","","",66,null],[13,"Adapt130","","",66,null],[13,"Adapt200","","",66,null],[13,"Adapt320","","",66,null],[13,"Prop807","","",66,null],[13,"Prop1280x1024","","",66,null],[13,"Prop2560x2048","","",66,null],[4,"Sort","","",null,null],[13,"DateAdded","","",67,null],[13,"Popularity","","",67,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"method_name","","",68,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",68,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",68,null],[11,"new","","",68,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",68,null],[11,"upload_by_admins_only","","",68,null],[11,"comments_disabled","","",68,null],[11,"title","","",68,null],[11,"description","","",68,null],[11,"privacy_view","","",68,null],[11,"privacy_comment","","",68,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"method_name","","",69,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",69,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",69,null],[11,"new","","",69,{"inputs":[],"output":{"name":"self"}}],[11,"album_id","","",69,null],[11,"owner_id","","",69,null],[11,"upload_by_admins_only","","",69,null],[11,"comments_disabled","","",69,null],[11,"title","","",69,null],[11,"description","","",69,null],[11,"privacy_view","","",69,null],[11,"privacy_comment","","",69,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",70,null],[11,"method_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",70,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",70,null],[11,"new","","",70,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",70,null],[11,"need_system","","",70,null],[11,"need_covers","","",70,null],[11,"photo_sizes","","",70,null],[11,"offset","","",70,null],[11,"count","","",70,null],[11,"album_ids","","",70,null],[11,"fmt","","",71,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"method_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",71,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",71,null],[11,"new","","",71,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",71,null],[11,"album_id","","",71,null],[11,"rev","","",71,null],[11,"extended","","",71,null],[11,"feed","","",71,null],[11,"offset","","",71,null],[11,"count","","",71,null],[11,"photo_ids","","",71,null],[11,"feed_type","","",71,null],[11,"fmt","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"clone","","",72,null],[11,"method_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",72,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",72,null],[11,"new","","",72,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",72,null],[11,"group_id","","",72,null],[11,"fmt","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"clone","","",73,null],[11,"method_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",73,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",73,null],[11,"new","","",73,{"inputs":[],"output":{"name":"self"}}],[11,"extended","","",73,null],[11,"photos","","",73,null],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"method_name","","",74,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",74,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",74,null],[11,"new","","",74,{"inputs":[],"output":{"name":"self"}}],[11,"album_id","","",74,null],[11,"group_id","","",74,null],[11,"fmt","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"clone","","",75,null],[11,"method_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",75,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",75,null],[11,"new","","",75,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",75,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"method_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",76,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",76,null],[11,"new","","",76,{"inputs":[],"output":{"name":"self"}}],[11,"chat_id","","",76,null],[11,"crop_x","","",76,null],[11,"crop_y","","",76,null],[11,"crop_width","","",76,null],[11,"fmt","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"method_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",77,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",77,null],[11,"new","","",77,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",77,null],[11,"main_photo","","",77,null],[11,"crop_x","","",77,null],[11,"crop_y","","",77,null],[11,"crop_width","","",77,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"method_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",78,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",78,null],[11,"new","","",78,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",78,null],[11,"fmt","","",79,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"method_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",79,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",79,null],[11,"new","","",79,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",79,null],[11,"fmt","","",80,null],[11,"eq","","",80,null],[11,"clone","","",80,null],[11,"method_name","","",80,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",80,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",80,null],[11,"fmt","","",81,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"clone","","",81,null],[11,"method_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",81,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",81,null],[11,"new","","",81,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",81,null],[11,"server","","",81,null],[11,"photo","","",81,null],[11,"hash","","",81,null],[11,"crop_data","","",81,null],[11,"crop_hash","","",81,null],[11,"fmt","","",82,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"method_name","","",82,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",82,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",82,null],[11,"new","","",82,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",82,null],[11,"server","","",82,null],[11,"photo","","",82,null],[11,"hash","","",82,null],[11,"fmt","","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"method_name","","",83,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",83,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",83,null],[11,"new","","",83,{"inputs":[],"output":{"name":"self"}}],[11,"server","","",83,null],[11,"photo","","",83,null],[11,"hash","","",83,null],[11,"fmt","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"clone","","",84,null],[11,"method_name","","",84,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",84,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",84,null],[11,"new","","",84,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",84,null],[11,"group_id","","",84,null],[11,"server","","",84,null],[11,"photo","","",84,null],[11,"hash","","",84,null],[11,"fmt","","",85,null],[11,"eq","","",85,null],[11,"ne","","",85,null],[11,"clone","","",85,null],[11,"method_name","","",85,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",85,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",85,null],[11,"new","","",85,{"inputs":[],"output":{"name":"self"}}],[11,"photo","","",85,null],[11,"fmt","","",86,null],[11,"eq","","",86,null],[11,"ne","","",86,null],[11,"clone","","",86,null],[11,"method_name","","",86,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",86,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",86,null],[11,"new","","",86,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",86,null],[11,"photo_id","","",86,null],[11,"reason","","",86,null],[11,"fmt","","",87,null],[11,"eq","","",87,null],[11,"ne","","",87,null],[11,"clone","","",87,null],[11,"method_name","","",87,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",87,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",87,null],[11,"new","","",87,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",87,null],[11,"comment_id","","",87,null],[11,"reason","","",87,null],[11,"fmt","","",88,null],[11,"eq","","",88,null],[11,"ne","","",88,null],[11,"clone","","",88,null],[11,"method_name","","",88,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",88,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",88,null],[11,"new","","",88,{"inputs":[],"output":{"name":"self"}}],[11,"lat","","",88,null],[11,"long","","",88,null],[11,"start_time","","",88,null],[11,"end_time","","",88,null],[11,"sort","","",88,null],[11,"offset","","",88,null],[11,"count","","",88,null],[11,"radius","","",88,null],[11,"q","","",88,null],[11,"fmt","","",89,null],[11,"eq","","",89,null],[11,"ne","","",89,null],[11,"clone","","",89,null],[11,"method_name","","",89,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",89,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",89,null],[11,"new","","",89,{"inputs":[],"output":{"name":"self"}}],[11,"server","","",89,null],[11,"album_id","","",89,null],[11,"group_id","","",89,null],[11,"latitude","","",89,null],[11,"longitude","","",89,null],[11,"photos_list","","",89,null],[11,"hash","","",89,null],[11,"caption","","",89,null],[11,"fmt","","",90,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"clone","","",90,null],[11,"method_name","","",90,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",90,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",90,null],[11,"new","","",90,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",90,null],[11,"photo_id","","",90,null],[11,"access_key","","",90,null],[11,"fmt","","",91,null],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"clone","","",91,null],[11,"method_name","","",91,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",91,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",91,null],[11,"new","","",91,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",91,null],[11,"photo_id","","",91,null],[11,"latitude","","",91,null],[11,"longitude","","",91,null],[11,"delete_place","","",91,null],[11,"caption","","",91,null],[11,"place_str","","",91,null],[11,"foursquare_id","","",91,null],[11,"fmt","","",92,null],[11,"eq","","",92,null],[11,"ne","","",92,null],[11,"clone","","",92,null],[11,"method_name","","",92,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",92,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",92,null],[11,"new","","",92,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",92,null],[11,"photo_id","","",92,null],[11,"target_album_id","","",92,null],[11,"fmt","","",93,null],[11,"eq","","",93,null],[11,"ne","","",93,null],[11,"clone","","",93,null],[11,"method_name","","",93,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",93,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",93,null],[11,"new","","",93,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",93,null],[11,"photo_id","","",93,null],[11,"album_id","","",93,null],[11,"fmt","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"clone","","",94,null],[11,"method_name","","",94,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",94,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",94,null],[11,"new","","",94,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",94,null],[11,"album_id","","",94,null],[11,"before","","",94,null],[11,"after","","",94,null],[11,"fmt","","",95,null],[11,"eq","","",95,null],[11,"ne","","",95,null],[11,"clone","","",95,null],[11,"method_name","","",95,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",95,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",95,null],[11,"new","","",95,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",95,null],[11,"photo_id","","",95,null],[11,"before","","",95,null],[11,"after","","",95,null],[11,"fmt","","",96,null],[11,"eq","","",96,null],[11,"ne","","",96,null],[11,"clone","","",96,null],[11,"method_name","","",96,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",96,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",96,null],[11,"new","","",96,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",96,null],[11,"extended","","",96,null],[11,"offset","","",96,null],[11,"count","","",96,null],[11,"no_service_albums","","",96,null],[11,"need_hidden","","",96,null],[11,"skip_hidden","","",96,null],[11,"fmt","","",97,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"clone","","",97,null],[11,"method_name","","",97,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",97,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",97,null],[11,"new","","",97,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",97,null],[11,"extended","","",97,null],[11,"offset","","",97,null],[11,"count","","",97,null],[11,"sort","","",97,null],[11,"fmt","","",98,null],[11,"eq","","",98,null],[11,"ne","","",98,null],[11,"clone","","",98,null],[11,"method_name","","",98,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",98,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",98,null],[11,"new","","",98,{"inputs":[],"output":{"name":"self"}}],[11,"album_id","","",98,null],[11,"group_id","","",98,null],[11,"fmt","","",99,null],[11,"eq","","",99,null],[11,"ne","","",99,null],[11,"clone","","",99,null],[11,"method_name","","",99,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",99,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",99,null],[11,"new","","",99,{"inputs":[],"output":{"name":"self"}}],[11,"photo_id","","",99,null],[11,"owner_id","","",99,null],[11,"fmt","","",100,null],[11,"eq","","",100,null],[11,"ne","","",100,null],[11,"clone","","",100,null],[11,"method_name","","",100,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",100,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",100,null],[11,"new","","",100,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",100,null],[11,"photo_id","","",100,null],[11,"tag_id","","",100,null],[11,"fmt","","",101,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"clone","","",101,null],[11,"method_name","","",101,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",101,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",101,null],[11,"new","","",101,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",101,null],[11,"photo_id","","",101,null],[11,"need_likes","","",101,null],[11,"start_comment_id","","",101,null],[11,"offset","","",101,null],[11,"count","","",101,null],[11,"sort","","",101,null],[11,"access_key","","",101,null],[11,"fmt","","",102,null],[11,"eq","","",102,null],[11,"ne","","",102,null],[11,"clone","","",102,null],[11,"method_name","","",102,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",102,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",102,null],[11,"new","","",102,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",102,null],[11,"album_id","","",102,null],[11,"need_likes","","",102,null],[11,"offset","","",102,null],[11,"count","","",102,null],[11,"fmt","","",103,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"clone","","",103,null],[11,"method_name","","",103,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",103,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",103,null],[11,"new","","",103,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",103,null],[11,"photo_id","","",103,null],[11,"from_group","","",103,null],[11,"reply_to_comment","","",103,null],[11,"sticker_id","","",103,null],[11,"guid","","",103,null],[11,"message","","",103,null],[11,"attachments","","",103,null],[11,"access_key","","",103,null],[11,"fmt","","",104,null],[11,"eq","","",104,null],[11,"ne","","",104,null],[11,"clone","","",104,null],[11,"method_name","","",104,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",104,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",104,null],[11,"new","","",104,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",104,null],[11,"comment_id","","",104,null],[11,"fmt","","",105,null],[11,"eq","","",105,null],[11,"ne","","",105,null],[11,"clone","","",105,null],[11,"method_name","","",105,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",105,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",105,null],[11,"new","","",105,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",105,null],[11,"photo_id","","",105,null],[11,"fmt","","",106,null],[11,"eq","","",106,null],[11,"ne","","",106,null],[11,"clone","","",106,null],[11,"method_name","","",106,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",106,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",106,null],[11,"new","","",106,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",106,null],[11,"comment_id","","",106,null],[11,"fmt","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"clone","","",107,null],[11,"method_name","","",107,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",107,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",107,null],[11,"new","","",107,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",107,null],[11,"comment_id","","",107,null],[11,"message","","",107,null],[11,"attachments","","",107,null],[11,"fmt","","",108,null],[11,"eq","","",108,null],[11,"ne","","",108,null],[11,"clone","","",108,null],[11,"method_name","","",108,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",108,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",108,null],[11,"new","","",108,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",108,null],[11,"photo_id","","",108,null],[11,"access_key","","",108,null],[11,"fmt","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"clone","","",109,null],[11,"method_name","","",109,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",109,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",109,null],[11,"new","","",109,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",109,null],[11,"user_id","","",109,null],[11,"photo_id","","",109,null],[11,"x","","",109,null],[11,"y","","",109,null],[11,"x2","","",109,null],[11,"y2","","",109,null],[11,"fmt","","",110,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"method_name","","",110,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",110,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",110,null],[11,"new","","",110,{"inputs":[],"output":{"name":"self"}}],[11,"tag_id","","",110,null],[11,"owner_id","","",110,null],[11,"photo_id","","",110,null],[11,"fmt","","",111,null],[11,"eq","","",111,null],[11,"ne","","",111,null],[11,"clone","","",111,null],[11,"method_name","","",111,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",111,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",111,null],[11,"new","","",111,{"inputs":[],"output":{"name":"self"}}],[11,"offset","","",111,null],[11,"count","","",111,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"fmt","","",60,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"fmt","","",61,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"fmt","","",62,null],[11,"eq","","",66,null],[11,"fmt","","",66,null],[11,"deserialize","","",66,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"fmt","","",63,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"fmt","","",64,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"fmt","","",112,null],[11,"fmt","","",67,null],[11,"eq","","",67,null],[11,"clone","","",67,null],[11,"default","","",67,{"inputs":[],"output":{"name":"sort"}}],[11,"as_ref","","",67,null],[0,"video","vkrs","",null,null],[3,"Video","vkrs::video","",null,null],[12,"id","","",113,null],[12,"owner_id","","",113,null],[12,"album_id","","",113,null],[12,"user_id","","",113,null],[12,"title","","",113,null],[12,"duration","","",113,null],[12,"description","","",113,null],[12,"date","","",113,null],[12,"views","","",113,null],[12,"comments","","",113,null],[12,"photo_130","","",113,null],[12,"photo_320","","",113,null],[12,"photo_640","","",113,null],[12,"photo_800","","",113,null],[12,"adding_date","","",113,null],[12,"player","","",113,null],[12,"can_add","","",113,null],[12,"can_edit","","",113,null],[12,"can_report","","",113,null],[12,"can_comment","","",113,null],[12,"converting","","",113,null],[12,"repeat","","",113,null],[12,"files","","",113,null],[12,"likes","","",113,null],[12,"placer_id","","",113,null],[12,"tag_created","","",113,null],[12,"tag_id","","",113,null],[3,"VideoFiles","","",null,null],[12,"mp4_240","","",114,null],[12,"mp4_360","","",114,null],[12,"mp4_480","","",114,null],[12,"mp4_720","","",114,null],[12,"external","","",114,null],[3,"SavedVideo","","",null,null],[12,"upload_url","","",115,null],[12,"vid","","",115,null],[12,"owner_id","","",115,null],[12,"name","","",115,null],[12,"description","","",115,null],[12,"access_key","","",115,null],[3,"Album","","",null,null],[12,"id","","",116,null],[12,"owner_id","","",116,null],[12,"title","","",116,null],[12,"count","","",116,null],[12,"updated_time","","",116,null],[12,"photo_130","","",116,null],[12,"photo_160","","",116,null],[12,"photo_320","","",116,null],[12,"photo_640","","",116,null],[12,"photo_800","","",116,null],[12,"is_system","","",116,null],[12,"can_comment","","",116,null],[12,"can_repost","","",116,null],[3,"Tag","","",null,null],[3,"Page","","",null,null],[3,"CatalogBlock","","",null,null],[3,"CatalogItem","","",null,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.get\n&quot;&gt;\nvideo.get\n&lt;/a&gt; API request.",null,null],[3,"Search","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.search\n&quot;&gt;\nvideo.search\n&lt;/a&gt; API request.",null,null],[3,"Edit","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.edit\n&quot;&gt;\nvideo.edit\n&lt;/a&gt; API request.",null,null],[3,"Add","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.add\n&quot;&gt;\nvideo.add\n&lt;/a&gt; API request.",null,null],[3,"Save","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.save\n&quot;&gt;\nvideo.save\n&lt;/a&gt; API request.",null,null],[3,"Delete","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.delete\n&quot;&gt;\nvideo.delete\n&lt;/a&gt; API request.",null,null],[3,"Restore","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.restore\n&quot;&gt;\nvideo.restore\n&lt;/a&gt; API request.",null,null],[3,"GetUserVideos","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getUserVideos\n&quot;&gt;\nvideo.getUserVideos\n&lt;/a&gt; API request.",null,null],[3,"GetAlbums","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getAlbums\n&quot;&gt;\nvideo.getAlbums\n&lt;/a&gt; API request.",null,null],[3,"GetAlbumById","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getAlbumById\n&quot;&gt;\nvideo.getAlbumById\n&lt;/a&gt; API request.",null,null],[3,"AddAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.addAlbum\n&quot;&gt;\nvideo.addAlbum\n&lt;/a&gt; API request.",null,null],[3,"EditAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.editAlbum\n&quot;&gt;\nvideo.editAlbum\n&lt;/a&gt; API request.",null,null],[3,"DeleteAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.deleteAlbum\n&quot;&gt;\nvideo.deleteAlbum\n&lt;/a&gt; API request.",null,null],[3,"ReorderAlbums","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.reorderAlbums\n&quot;&gt;\nvideo.reorderAlbums\n&lt;/a&gt; API request.",null,null],[3,"ReorderVideos","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.reorderVideos\n&quot;&gt;\nvideo.reorderVideos\n&lt;/a&gt; API request.",null,null],[3,"AddToAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.addToAlbum\n&quot;&gt;\nvideo.addToAlbum\n&lt;/a&gt; API request.",null,null],[3,"RemoveFromAlbum","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.removeFromAlbum\n&quot;&gt;\nvideo.removeFromAlbum\n&lt;/a&gt; API request.",null,null],[3,"GetAlbumsByVideo","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getAlbumsByVideo\n&quot;&gt;\nvideo.getAlbumsByVideo\n&lt;/a&gt; API request.",null,null],[3,"GetComments","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getComments\n&quot;&gt;\nvideo.getComments\n&lt;/a&gt; API request.",null,null],[3,"CreateComment","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.createComment\n&quot;&gt;\nvideo.createComment\n&lt;/a&gt; API request.",null,null],[3,"DeleteComment","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.deleteComment\n&quot;&gt;\nvideo.deleteComment\n&lt;/a&gt; API request.",null,null],[3,"RestoreComment","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.restoreComment\n&quot;&gt;\nvideo.restoreComment\n&lt;/a&gt; API request.",null,null],[3,"EditComment","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.editComment\n&quot;&gt;\nvideo.editComment\n&lt;/a&gt; API request.",null,null],[3,"GetTags","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getTags\n&quot;&gt;\nvideo.getTags\n&lt;/a&gt; API request.",null,null],[3,"PutTag","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.putTag\n&quot;&gt;\nvideo.putTag\n&lt;/a&gt; API request.",null,null],[3,"RemoveTag","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.removeTag\n&quot;&gt;\nvideo.removeTag\n&lt;/a&gt; API request.",null,null],[3,"GetNewTags","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getNewTags\n&quot;&gt;\nvideo.getNewTags\n&lt;/a&gt; API request.",null,null],[3,"Report","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.report\n&quot;&gt;\nvideo.report\n&lt;/a&gt; API request.",null,null],[3,"ReportComment","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.reportComment\n&quot;&gt;\nvideo.reportComment\n&lt;/a&gt; API request.",null,null],[3,"GetCatalog","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getCatalog\n&quot;&gt;\nvideo.getCatalog\n&lt;/a&gt; API request.",null,null],[3,"GetCatalogSection","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.getCatalogSection\n&quot;&gt;\nvideo.getCatalogSection\n&lt;/a&gt; API request.",null,null],[3,"HideCatalogSection","","The &lt;a href=&quot;https://vk.com/dev/\nvideo.hideCatalogSection\n&quot;&gt;\nvideo.hideCatalogSection\n&lt;/a&gt; API request.",null,null],[4,"CatalogBlockKind","","",null,null],[13,"Channel","","",117,null],[13,"Category","","",117,null],[4,"CatalogItemKind","","",null,null],[13,"Video","","",118,null],[13,"Album","","",118,null],[4,"Privacy","","",null,null],[13,"All","","",119,null],[13,"Friends","","",119,null],[13,"FriendsOfFriends","","",119,null],[13,"OnlyMe","","",119,null],[4,"Filter","","",null,null],[13,"YouTube","","",120,null],[13,"Vimeo","","",120,null],[13,"Short","","",120,null],[13,"Long","","",120,null],[11,"eq","","",113,null],[11,"ne","","",113,null],[11,"clone","","",113,null],[11,"fmt","","",113,null],[11,"eq","","",114,null],[11,"ne","","",114,null],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"clone","","",115,null],[11,"fmt","","",115,null],[11,"eq","","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"clone","","",121,null],[11,"fmt","","",121,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"clone","","",122,null],[11,"fmt","","",122,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"clone","","",123,null],[11,"fmt","","",123,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"fmt","","",124,null],[11,"clone","","",117,null],[11,"eq","","",117,null],[11,"fmt","","",117,null],[11,"as_ref","","",117,null],[11,"from_str","","",117,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",117,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",118,null],[11,"eq","","",118,null],[11,"fmt","","",118,null],[11,"as_ref","","",118,null],[11,"from_str","","",118,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",118,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",125,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"clone","","",125,null],[11,"method_name","","",125,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",125,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",125,null],[11,"new","","",125,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",125,null],[11,"album_id","","",125,null],[11,"offset","","",125,null],[11,"count","","",125,null],[11,"videos","","",125,null],[11,"fmt","","",126,null],[11,"eq","","",126,null],[11,"ne","","",126,null],[11,"clone","","",126,null],[11,"method_name","","",126,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",126,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",126,null],[11,"new","","",126,{"inputs":[],"output":{"name":"self"}}],[11,"sort","","",126,null],[11,"hd","","",126,null],[11,"adult","","",126,null],[11,"search_own","","",126,null],[11,"longer","","",126,null],[11,"shorter","","",126,null],[11,"offset","","",126,null],[11,"count","","",126,null],[11,"filters","","",126,null],[11,"q","","",126,null],[11,"fmt","","",127,null],[11,"eq","","",127,null],[11,"ne","","",127,null],[11,"clone","","",127,null],[11,"method_name","","",127,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",127,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",127,null],[11,"new","","",127,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",127,null],[11,"video_id","","",127,null],[11,"no_comments","","",127,null],[11,"repeat","","",127,null],[11,"name","","",127,null],[11,"desc","","",127,null],[11,"privacy_view","","",127,null],[11,"privacy_comment","","",127,null],[11,"fmt","","",128,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"clone","","",128,null],[11,"method_name","","",128,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",128,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",128,null],[11,"new","","",128,{"inputs":[],"output":{"name":"self"}}],[11,"target_id","","",128,null],[11,"video_id","","",128,null],[11,"owner_id","","",128,null],[11,"fmt","","",129,null],[11,"eq","","",129,null],[11,"ne","","",129,null],[11,"clone","","",129,null],[11,"method_name","","",129,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",129,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",129,null],[11,"new","","",129,{"inputs":[],"output":{"name":"self"}}],[11,"is_private","","",129,null],[11,"wallpost","","",129,null],[11,"group_id","","",129,null],[11,"album_id","","",129,null],[11,"no_comments","","",129,null],[11,"repeat","","",129,null],[11,"name","","",129,null],[11,"description","","",129,null],[11,"link","","",129,null],[11,"privacy_view","","",129,null],[11,"privacy_comment","","",129,null],[11,"fmt","","",130,null],[11,"eq","","",130,null],[11,"ne","","",130,null],[11,"clone","","",130,null],[11,"method_name","","",130,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",130,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",130,null],[11,"new","","",130,{"inputs":[],"output":{"name":"self"}}],[11,"video_id","","",130,null],[11,"owner_id","","",130,null],[11,"target_id","","",130,null],[11,"fmt","","",131,null],[11,"eq","","",131,null],[11,"ne","","",131,null],[11,"clone","","",131,null],[11,"method_name","","",131,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",131,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",131,null],[11,"new","","",131,{"inputs":[],"output":{"name":"self"}}],[11,"video_id","","",131,null],[11,"owner_id","","",131,null],[11,"fmt","","",132,null],[11,"eq","","",132,null],[11,"ne","","",132,null],[11,"clone","","",132,null],[11,"method_name","","",132,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",132,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",132,null],[11,"new","","",132,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",132,null],[11,"offset","","",132,null],[11,"count","","",132,null],[11,"fmt","","",133,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"clone","","",133,null],[11,"method_name","","",133,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",133,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",133,null],[11,"new","","",133,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",133,null],[11,"offset","","",133,null],[11,"count","","",133,null],[11,"need_system","","",133,null],[11,"extended","","",133,null],[11,"fmt","","",134,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"clone","","",134,null],[11,"method_name","","",134,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",134,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",134,null],[11,"new","","",134,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",134,null],[11,"album_id","","",134,null],[11,"fmt","","",135,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"clone","","",135,null],[11,"method_name","","",135,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",135,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",135,null],[11,"new","","",135,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",135,null],[11,"privacy","","",135,null],[11,"title","","",135,null],[11,"fmt","","",136,null],[11,"eq","","",136,null],[11,"ne","","",136,null],[11,"clone","","",136,null],[11,"method_name","","",136,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",136,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",136,null],[11,"new","","",136,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",136,null],[11,"album_id","","",136,null],[11,"privacy","","",136,null],[11,"title","","",136,null],[11,"fmt","","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"clone","","",137,null],[11,"method_name","","",137,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",137,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",137,null],[11,"new","","",137,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",137,null],[11,"album_id","","",137,null],[11,"fmt","","",138,null],[11,"eq","","",138,null],[11,"ne","","",138,null],[11,"clone","","",138,null],[11,"method_name","","",138,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",138,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",138,null],[11,"new","","",138,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",138,null],[11,"album_id","","",138,null],[11,"before","","",138,null],[11,"after","","",138,null],[11,"fmt","","",139,null],[11,"eq","","",139,null],[11,"ne","","",139,null],[11,"clone","","",139,null],[11,"method_name","","",139,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",139,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",139,null],[11,"new","","",139,{"inputs":[],"output":{"name":"self"}}],[11,"target_id","","",139,null],[11,"album_id","","",139,null],[11,"owner_id","","",139,null],[11,"video_id","","",139,null],[11,"before_owner_id","","",139,null],[11,"before_video_id","","",139,null],[11,"after_owner_id","","",139,null],[11,"after_video_id","","",139,null],[11,"fmt","","",140,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"method_name","","",140,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",140,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",140,null],[11,"new","","",140,{"inputs":[],"output":{"name":"self"}}],[11,"target_id","","",140,null],[11,"album_id","","",140,null],[11,"owner_id","","",140,null],[11,"video_id","","",140,null],[11,"album_ids","","",140,null],[11,"fmt","","",141,null],[11,"eq","","",141,null],[11,"ne","","",141,null],[11,"clone","","",141,null],[11,"method_name","","",141,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",141,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",141,null],[11,"new","","",141,{"inputs":[],"output":{"name":"self"}}],[11,"target_id","","",141,null],[11,"album_id","","",141,null],[11,"owner_id","","",141,null],[11,"video_id","","",141,null],[11,"album_ids","","",141,null],[11,"fmt","","",142,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"clone","","",142,null],[11,"method_name","","",142,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",142,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",142,null],[11,"new","","",142,{"inputs":[],"output":{"name":"self"}}],[11,"target_id","","",142,null],[11,"owner_id","","",142,null],[11,"video_id","","",142,null],[11,"extended","","",142,null],[11,"fmt","","",143,null],[11,"eq","","",143,null],[11,"ne","","",143,null],[11,"clone","","",143,null],[11,"method_name","","",143,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",143,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",143,null],[11,"new","","",143,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",143,null],[11,"video_id","","",143,null],[11,"need_likes","","",143,null],[11,"start_comment_id","","",143,null],[11,"sort","","",143,null],[11,"offset","","",143,null],[11,"count","","",143,null],[11,"fmt","","",144,null],[11,"eq","","",144,null],[11,"ne","","",144,null],[11,"clone","","",144,null],[11,"method_name","","",144,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",144,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",144,null],[11,"new","","",144,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",144,null],[11,"video_id","","",144,null],[11,"from_group","","",144,null],[11,"reply_to_comment","","",144,null],[11,"sticker_id","","",144,null],[11,"message","","",144,null],[11,"attachments","","",144,null],[11,"fmt","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"clone","","",145,null],[11,"method_name","","",145,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",145,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",145,null],[11,"new","","",145,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",145,null],[11,"comment_id","","",145,null],[11,"fmt","","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"clone","","",146,null],[11,"method_name","","",146,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",146,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",146,null],[11,"new","","",146,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",146,null],[11,"comment_id","","",146,null],[11,"fmt","","",147,null],[11,"eq","","",147,null],[11,"ne","","",147,null],[11,"clone","","",147,null],[11,"method_name","","",147,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",147,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",147,null],[11,"new","","",147,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",147,null],[11,"comment_id","","",147,null],[11,"message","","",147,null],[11,"attachments","","",147,null],[11,"fmt","","",148,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"clone","","",148,null],[11,"method_name","","",148,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",148,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",148,null],[11,"new","","",148,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",148,null],[11,"video_id","","",148,null],[11,"fmt","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"clone","","",149,null],[11,"method_name","","",149,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",149,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",149,null],[11,"new","","",149,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",149,null],[11,"user_id","","",149,null],[11,"video_id","","",149,null],[11,"tagged_name","","",149,null],[11,"fmt","","",150,null],[11,"eq","","",150,null],[11,"ne","","",150,null],[11,"clone","","",150,null],[11,"method_name","","",150,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",150,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",150,null],[11,"new","","",150,{"inputs":[],"output":{"name":"self"}}],[11,"tag_id","","",150,null],[11,"owner_id","","",150,null],[11,"video_id","","",150,null],[11,"fmt","","",151,null],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"clone","","",151,null],[11,"method_name","","",151,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",151,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",151,null],[11,"new","","",151,{"inputs":[],"output":{"name":"self"}}],[11,"offset","","",151,null],[11,"count","","",151,null],[11,"fmt","","",152,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"clone","","",152,null],[11,"method_name","","",152,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",152,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",152,null],[11,"new","","",152,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",152,null],[11,"video_id","","",152,null],[11,"reason","","",152,null],[11,"comment","","",152,null],[11,"search_query","","",152,null],[11,"fmt","","",153,null],[11,"eq","","",153,null],[11,"ne","","",153,null],[11,"clone","","",153,null],[11,"method_name","","",153,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",153,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",153,null],[11,"new","","",153,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",153,null],[11,"comment_id","","",153,null],[11,"reason","","",153,null],[11,"fmt","","",154,null],[11,"eq","","",154,null],[11,"ne","","",154,null],[11,"clone","","",154,null],[11,"method_name","","",154,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",154,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",154,null],[11,"new","","",154,{"inputs":[],"output":{"name":"self"}}],[11,"count","","",154,null],[11,"items_count","","",154,null],[11,"from","","",154,null],[11,"filters","","",154,null],[11,"fmt","","",155,null],[11,"eq","","",155,null],[11,"ne","","",155,null],[11,"clone","","",155,null],[11,"method_name","","",155,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",155,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",155,null],[11,"new","","",155,{"inputs":[],"output":{"name":"self"}}],[11,"section_id","","",155,null],[11,"count","","",155,null],[11,"from","","",155,null],[11,"fmt","","",156,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"clone","","",156,null],[11,"method_name","","",156,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",156,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",156,null],[11,"new","","",156,{"inputs":[],"output":{"name":"self"}}],[11,"section_id","","",156,null],[11,"eq","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"as_ref","","",119,null],[11,"clone","","",120,null],[11,"eq","","",120,null],[11,"fmt","","",120,null],[11,"as_ref","","",120,null],[11,"from_str","","",120,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",120,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"users","vkrs","",null,null],[3,"User","vkrs::users","",null,null],[12,"id","","",157,null],[12,"photo","","",157,null],[12,"name","","",157,null],[12,"name_gen","","",157,null],[12,"status_audio","","",157,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\nusers.get\n&quot;&gt;\nusers.get\n&lt;/a&gt; API request.",null,null],[3,"Search","","The &lt;a href=&quot;https://vk.com/dev/\nusers.search\n&quot;&gt;\nusers.search\n&lt;/a&gt; API request.",null,null],[3,"IsAppUser","","The &lt;a href=&quot;https://vk.com/dev/\nusers.isAppUser\n&quot;&gt;\nusers.isAppUser\n&lt;/a&gt; API request.",null,null],[3,"GetSubscriptions","","The &lt;a href=&quot;https://vk.com/dev/\nusers.getSubscriptions\n&quot;&gt;\nusers.getSubscriptions\n&lt;/a&gt; API request.",null,null],[3,"GetFollowers","","The &lt;a href=&quot;https://vk.com/dev/\nusers.getFollowers\n&quot;&gt;\nusers.getFollowers\n&lt;/a&gt; API request.",null,null],[3,"Report","","The &lt;a href=&quot;https://vk.com/dev/\nusers.report\n&quot;&gt;\nusers.report\n&lt;/a&gt; API request.",null,null],[3,"GetNearby","","The &lt;a href=&quot;https://vk.com/dev/\nusers.getNearby\n&quot;&gt;\nusers.getNearby\n&lt;/a&gt; API request.",null,null],[4,"NameCase","","",null,null],[13,"Nominative","","",158,null],[13,"Genetive","","",158,null],[13,"Dative","","",158,null],[13,"Accusative","","",158,null],[13,"Instrumental","","",158,null],[13,"Ablative","","",158,null],[4,"UserOptionField","","",null,null],[13,"Verified","","",159,null],[13,"Blacklisted","","",159,null],[13,"Sex","","",159,null],[13,"Birthdate","","",159,null],[13,"City","","",159,null],[13,"Country","","",159,null],[13,"HomeTown","","",159,null],[13,"Photo50","","",159,null],[13,"Photo100","","",159,null],[13,"Photo200Orig","","",159,null],[13,"Photo200","","",159,null],[13,"Photo400Orig","","",159,null],[13,"PhotoMax","","",159,null],[13,"PhotoMaxOrig","","",159,null],[13,"Online","","",159,null],[13,"Lists","","",159,null],[13,"Domain","","",159,null],[13,"HasMobile","","",159,null],[13,"Contacts","","",159,null],[13,"Site","","",159,null],[13,"Education","","",159,null],[13,"Universities","","",159,null],[13,"Schools","","",159,null],[13,"Status","","",159,null],[13,"LastSeen","","",159,null],[13,"FollowersCount","","",159,null],[13,"CommonCount","","",159,null],[13,"Counters","","",159,null],[13,"Occupation","","",159,null],[13,"Nickname","","",159,null],[13,"Relatives","","",159,null],[13,"Relation","","",159,null],[13,"Personal","","",159,null],[13,"Connections","","",159,null],[13,"Exports","","",159,null],[13,"WallComments","","",159,null],[13,"Activities","","",159,null],[13,"Interests","","",159,null],[13,"Music","","",159,null],[13,"Movies","","",159,null],[13,"TvShows","","",159,null],[13,"Books","","",159,null],[13,"Games","","",159,null],[13,"About","","",159,null],[13,"Quotes","","",159,null],[13,"CanPost","","",159,null],[13,"CanSeeAllPosts","","",159,null],[13,"CanSeeAudio","","",159,null],[13,"CanWritePrivateMessage","","",159,null],[13,"Timezone","","",159,null],[13,"ScreenName","","",159,null],[4,"Radius","","",null,null],[13,"R300","","",160,null],[13,"R2400","","",160,null],[13,"R18000","","",160,null],[13,"R150000","","",160,null],[4,"Sort","","",null,null],[13,"Rating","","",161,null],[13,"DateRegistered","","",161,null],[4,"Sex","","",null,null],[13,"Any","","",162,null],[13,"Female","","",162,null],[13,"Male","","",162,null],[4,"Status","","",null,null],[13,"Unspecified","","",163,null],[13,"NotMarried","","",163,null],[13,"InRelationship","","",163,null],[13,"Engaged","","",163,null],[13,"Married","","",163,null],[13,"ItsComplicated","","",163,null],[13,"ActiveSearch","","",163,null],[13,"InLove","","",163,null],[4,"ReportKind","","",null,null],[13,"Porn","","",164,null],[13,"Spam","","",164,null],[13,"Insult","","",164,null],[13,"Ads","","",164,null],[11,"clone","","",157,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"fmt","","",157,null],[11,"clone","","",158,null],[11,"eq","","",158,null],[11,"fmt","","",158,null],[11,"as_ref","","",158,null],[11,"from_str","","",158,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",158,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",159,null],[11,"eq","","",159,null],[11,"fmt","","",159,null],[11,"as_ref","","",159,null],[11,"from_str","","",159,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",159,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",165,null],[11,"eq","","",165,null],[11,"ne","","",165,null],[11,"clone","","",165,null],[11,"method_name","","",165,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",165,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",165,null],[11,"new","","",165,{"inputs":[],"output":{"name":"self"}}],[11,"name_case","","",165,null],[11,"user_ids","","",165,null],[11,"fields","","",165,null],[11,"fmt","","",166,null],[11,"eq","","",166,null],[11,"ne","","",166,null],[11,"clone","","",166,null],[11,"method_name","","",166,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",166,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",166,null],[11,"new","","",166,{"inputs":[],"output":{"name":"self"}}],[11,"sort","","",166,null],[11,"city","","",166,null],[11,"country","","",166,null],[11,"university","","",166,null],[11,"university_country","","",166,null],[11,"university_faculty","","",166,null],[11,"university_chair","","",166,null],[11,"university_year","","",166,null],[11,"sex","","",166,null],[11,"status","","",166,null],[11,"age_from","","",166,null],[11,"age_to","","",166,null],[11,"birth_day","","",166,null],[11,"birth_month","","",166,null],[11,"birth_year","","",166,null],[11,"online","","",166,null],[11,"has_photo","","",166,null],[11,"school","","",166,null],[11,"school_country","","",166,null],[11,"school_city","","",166,null],[11,"school_class","","",166,null],[11,"school_year","","",166,null],[11,"group_id","","",166,null],[11,"offset","","",166,null],[11,"count","","",166,null],[11,"q","","",166,null],[11,"hometown","","",166,null],[11,"fields","","",166,null],[11,"religion","","",166,null],[11,"interests","","",166,null],[11,"company","","",166,null],[11,"position","","",166,null],[11,"from_list","","",166,null],[11,"fmt","","",167,null],[11,"eq","","",167,null],[11,"ne","","",167,null],[11,"clone","","",167,null],[11,"method_name","","",167,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",167,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",167,null],[11,"new","","",167,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",167,null],[11,"fmt","","",168,null],[11,"eq","","",168,null],[11,"ne","","",168,null],[11,"clone","","",168,null],[11,"method_name","","",168,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",168,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",168,null],[11,"new","","",168,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",168,null],[11,"offset","","",168,null],[11,"count","","",168,null],[11,"fields","","",168,null],[11,"fmt","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"clone","","",169,null],[11,"method_name","","",169,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",169,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",169,null],[11,"new","","",169,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",169,null],[11,"name_case","","",169,null],[11,"offset","","",169,null],[11,"count","","",169,null],[11,"fields","","",169,null],[11,"fmt","","",170,null],[11,"eq","","",170,null],[11,"ne","","",170,null],[11,"clone","","",170,null],[11,"method_name","","",170,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",170,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",170,null],[11,"new","","",170,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",170,null],[11,"kind","","",170,null],[11,"comment","","",170,null],[11,"fmt","","",171,null],[11,"eq","","",171,null],[11,"ne","","",171,null],[11,"clone","","",171,null],[11,"method_name","","",171,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",171,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",171,null],[11,"new","","",171,{"inputs":[],"output":{"name":"self"}}],[11,"latitude","","",171,null],[11,"longitude","","",171,null],[11,"accuracy","","",171,null],[11,"timeout","","",171,null],[11,"radius","","",171,null],[11,"name_case","","",171,null],[11,"fields","","",171,null],[11,"fmt","","",160,null],[11,"eq","","",160,null],[11,"clone","","",160,null],[11,"cmp","","",160,null],[11,"partial_cmp","","",160,null],[11,"as_ref","","",160,null],[11,"fmt","","",161,null],[11,"eq","","",161,null],[11,"clone","","",161,null],[11,"as_ref","","",161,null],[11,"fmt","","",162,null],[11,"eq","","",162,null],[11,"clone","","",162,null],[11,"as_ref","","",162,null],[11,"deserialize","","",162,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",163,null],[11,"eq","","",163,null],[11,"clone","","",163,null],[11,"as_ref","","",163,null],[11,"deserialize","","",163,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",164,null],[11,"eq","","",164,null],[11,"fmt","","",164,null],[11,"as_ref","","",164,null],[11,"from_str","","",164,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",164,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"stats","vkrs","",null,null],[3,"NaiveDate","vkrs::stats","ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](./index.html#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.",null,null],[3,"Period","","",null,null],[12,"day","","",172,null],[12,"views","","",172,null],[12,"visitors","","",172,null],[12,"reach","","",172,null],[12,"reach_subscribers","","",172,null],[12,"subscribed","","",172,null],[12,"unsubscribed","","",172,null],[12,"sex","","",172,null],[12,"age","","",172,null],[12,"sex_age","","",172,null],[12,"cities","","",172,null],[12,"countries","","",172,null],[3,"DemoSexAge","","",null,null],[3,"Demography","","",null,null],[12,"visitors","","",173,null],[12,"value","","",173,null],[12,"name","","",173,null],[3,"Country","","",null,null],[12,"visitors","","",174,null],[12,"value","","",174,null],[12,"code","","",174,null],[12,"name","","",174,null],[3,"PostReach","","",null,null],[12,"reach_subscribers","","",175,null],[12,"reach_total","","",175,null],[12,"links","","",175,null],[12,"to_group","","",175,null],[12,"join_group","","",175,null],[12,"report","","",175,null],[12,"hide","","",175,null],[12,"unsubscribe","","",175,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\nstats.get\n&quot;&gt;\nstats.get\n&lt;/a&gt; API request.",null,null],[3,"TrackVisitor","","The &lt;a href=&quot;https://vk.com/dev/\nstats.trackVisitor\n&quot;&gt;\nstats.trackVisitor\n&lt;/a&gt; API request.",null,null],[3,"GetPostReach","","The &lt;a href=&quot;https://vk.com/dev/\nstats.getPostReach\n&quot;&gt;\nstats.getPostReach\n&lt;/a&gt; API request.",null,null],[4,"DemoSex","","",null,null],[13,"Male","","",176,null],[13,"Female","","",176,null],[4,"DemoAgeRange","","",null,null],[13,"_12_18","","",177,null],[13,"_18_21","","",177,null],[13,"_21_24","","",177,null],[13,"_24_27","","",177,null],[13,"_27_30","","",177,null],[13,"_30_35","","",177,null],[13,"_35_45","","",177,null],[13,"_45_100","","",177,null],[4,"DemoCity","","",null,null],[13,"CityId","","",178,null],[13,"Other","","",178,null],[11,"clone","","",172,null],[11,"eq","","",172,null],[11,"ne","","",172,null],[11,"fmt","","",172,null],[11,"clone","","",176,null],[11,"eq","","",176,null],[11,"fmt","","",176,null],[11,"as_ref","","",176,null],[11,"from_str","","",176,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",176,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",177,null],[11,"eq","","",177,null],[11,"fmt","","",177,null],[11,"as_ref","","",177,null],[11,"from_str","","",177,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",177,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",179,null],[11,"eq","","",179,null],[11,"ne","","",179,null],[11,"fmt","","",179,null],[11,"from_str","","",179,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",179,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",178,null],[11,"eq","","",178,null],[11,"ne","","",178,null],[11,"fmt","","",178,null],[11,"clone","","",173,null],[11,"eq","","",173,null],[11,"ne","","",173,null],[11,"fmt","","",173,null],[11,"clone","","",174,null],[11,"eq","","",174,null],[11,"ne","","",174,null],[11,"fmt","","",174,null],[11,"clone","","",175,null],[11,"eq","","",175,null],[11,"ne","","",175,null],[11,"fmt","","",175,null],[11,"fmt","","",180,null],[11,"eq","","",180,null],[11,"ne","","",180,null],[11,"clone","","",180,null],[11,"method_name","","",180,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",180,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",180,null],[11,"new","","",180,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",180,null],[11,"app_id","","",180,null],[11,"date_from","","",180,null],[11,"date_to","","",180,null],[11,"fmt","","",181,null],[11,"eq","","",181,null],[11,"clone","","",181,null],[11,"method_name","","",181,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",181,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",181,null],[11,"fmt","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"method_name","","",182,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",182,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",182,null],[11,"new","","",182,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",182,null],[11,"post_id","","",182,null],[0,"status","vkrs","",null,null],[3,"Status","vkrs::status","",null,null],[12,"text","","",183,null],[12,"audio","","",183,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\nstatus.get\n&quot;&gt;\nstatus.get\n&lt;/a&gt; API request.",null,null],[3,"Set","","The &lt;a href=&quot;https://vk.com/dev/\nstatus.set\n&quot;&gt;\nstatus.set\n&lt;/a&gt; API request.",null,null],[11,"clone","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"fmt","","",183,null],[11,"fmt","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"clone","","",184,null],[11,"method_name","","",184,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",184,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",184,null],[11,"new","","",184,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",184,null],[11,"group_id","","",184,null],[11,"fmt","","",185,null],[11,"eq","","",185,null],[11,"ne","","",185,null],[11,"clone","","",185,null],[11,"method_name","","",185,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",185,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",185,null],[11,"new","","",185,{"inputs":[],"output":{"name":"self"}}],[11,"group_id","","",185,null],[11,"text","","",185,null],[0,"wall","vkrs","",null,null],[3,"WallPost","vkrs::wall","",null,null],[3,"CommentsCount","","",null,null],[3,"RepostsCount","","",null,null],[3,"PostSource","","",null,null],[3,"Attachment","","",null,null],[3,"GeoLocation","","",null,null],[3,"RepostInfo","","",null,null],[3,"PostId","","",null,null],[3,"Get","","The &lt;a href=&quot;https://vk.com/dev/\nwall.get\n&quot;&gt;\nwall.get\n&lt;/a&gt; API request.",null,null],[3,"Post","","The &lt;a href=&quot;https://vk.com/dev/\nwall.post\n&quot;&gt;\nwall.post\n&lt;/a&gt; API request.",null,null],[4,"PostType","","",null,null],[13,"Post","","",186,null],[13,"Copy","","",186,null],[13,"Reply","","",186,null],[13,"Postpone","","",186,null],[13,"Suggest","","",186,null],[4,"Filter","","",null,null],[13,"Owner","","",187,null],[13,"Others","","",187,null],[13,"All","","",187,null],[13,"Suggests","","",187,null],[11,"clone","","",188,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"fmt","","",188,null],[11,"clone","","",189,null],[11,"eq","","",189,null],[11,"ne","","",189,null],[11,"fmt","","",189,null],[11,"clone","","",190,null],[11,"eq","","",190,null],[11,"ne","","",190,null],[11,"fmt","","",190,null],[11,"clone","","",186,null],[11,"eq","","",186,null],[11,"fmt","","",186,null],[11,"clone","","",191,null],[11,"eq","","",191,null],[11,"fmt","","",191,null],[11,"clone","","",192,null],[11,"eq","","",192,null],[11,"fmt","","",192,null],[11,"clone","","",193,null],[11,"eq","","",193,null],[11,"fmt","","",193,null],[11,"clone","","",194,null],[11,"eq","","",194,null],[11,"fmt","","",194,null],[11,"clone","","",195,null],[11,"eq","","",195,null],[11,"ne","","",195,null],[11,"fmt","","",195,null],[11,"fmt","","",196,null],[11,"eq","","",196,null],[11,"ne","","",196,null],[11,"clone","","",196,null],[11,"method_name","","",196,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",196,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",196,null],[11,"new","","",196,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",196,null],[11,"filter","","",196,null],[11,"offset","","",196,null],[11,"count","","",196,null],[11,"domain","","",196,null],[11,"fields","","",196,null],[11,"fmt","","",197,null],[11,"eq","","",197,null],[11,"ne","","",197,null],[11,"clone","","",197,null],[11,"method_name","","",197,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",197,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",197,null],[11,"new","","",197,{"inputs":[],"output":{"name":"self"}}],[11,"owner_id","","",197,null],[11,"friend_only","","",197,null],[11,"from_group","","",197,null],[11,"signed","","",197,null],[11,"publish_date","","",197,null],[11,"lat","","",197,null],[11,"long","","",197,null],[11,"place_id","","",197,null],[11,"post_id","","",197,null],[11,"message","","",197,null],[11,"services","","",197,null],[11,"clone","","",187,null],[11,"eq","","",187,null],[11,"fmt","","",187,null],[11,"as_ref","","",187,null],[11,"from_str","","",187,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",187,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"utils","vkrs","",null,null],[3,"LinkInfo","vkrs::utils","",null,null],[12,"status","","",198,null],[12,"link","","",198,null],[3,"ScreenNameInfo","","",null,null],[12,"kind","","",199,null],[12,"object_id","","",199,null],[3,"CheckLink","","The &lt;a href=&quot;https://vk.com/dev/\nutils.checkLink\n&quot;&gt;\nutils.checkLink\n&lt;/a&gt; API request.",null,null],[3,"ResolveScreenName","","The &lt;a href=&quot;https://vk.com/dev/\nutils.resolveScreenName\n&quot;&gt;\nutils.resolveScreenName\n&lt;/a&gt; API request.",null,null],[3,"GetServerTime","","The &lt;a href=&quot;https://vk.com/dev/\nutils.getServerTime\n&quot;&gt;\nutils.getServerTime\n&lt;/a&gt; API request.",null,null],[4,"LinkStatus","","",null,null],[13,"NotBanned","","",200,null],[13,"Banned","","",200,null],[13,"Processing","","",200,null],[11,"clone","","",198,null],[11,"eq","","",198,null],[11,"ne","","",198,null],[11,"fmt","","",198,null],[11,"clone","","",199,null],[11,"eq","","",199,null],[11,"ne","","",199,null],[11,"fmt","","",199,null],[11,"clone","","",200,null],[11,"eq","","",200,null],[11,"fmt","","",200,null],[11,"as_ref","","",200,null],[11,"from_str","","",200,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",200,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",201,null],[11,"eq","","",201,null],[11,"ne","","",201,null],[11,"clone","","",201,null],[11,"method_name","","",201,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",201,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",201,null],[11,"new","","",201,{"inputs":[],"output":{"name":"self"}}],[11,"url","","",201,null],[11,"fmt","","",202,null],[11,"eq","","",202,null],[11,"ne","","",202,null],[11,"clone","","",202,null],[11,"method_name","","",202,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",202,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",202,null],[11,"new","","",202,{"inputs":[],"output":{"name":"self"}}],[11,"screen_name","","",202,null],[11,"fmt","","",203,null],[11,"eq","","",203,null],[11,"clone","","",203,null],[11,"method_name","","",203,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",203,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",203,null],[0,"execute","vkrs","",null,null],[4,"Value","vkrs::execute","Represents a JSON value",null,null],[13,"Null","","Represents a JSON null value",204,null],[13,"Bool","","Represents a JSON Boolean",204,null],[13,"I64","","Represents a JSON signed integer",204,null],[13,"U64","","Represents a JSON unsigned integer",204,null],[13,"F64","","Represents a JSON floating point number",204,null],[13,"String","","Represents a JSON string",204,null],[13,"Array","","Represents a JSON array",204,null],[13,"Object","","Represents a JSON object",204,null],[3,"Execute","","The &lt;a href=&quot;https://vk.com/dev/\nexecute\n&quot;&gt;\nexecute\n&lt;/a&gt; API request.",null,null],[11,"fmt","","",205,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"clone","","",205,null],[11,"method_name","","",205,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",205,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",205,null],[11,"new","","",205,{"inputs":[],"output":{"name":"self"}}],[11,"code","","",205,null],[0,"storage","vkrs","",null,null],[3,"Get","vkrs::storage","The &lt;a href=&quot;https://vk.com/dev/\nstorage.get\n&quot;&gt;\nstorage.get\n&lt;/a&gt; API request.",null,null],[3,"Set","","The &lt;a href=&quot;https://vk.com/dev/\nstorage.set\n&quot;&gt;\nstorage.set\n&lt;/a&gt; API request.",null,null],[3,"GetKeys","","The &lt;a href=&quot;https://vk.com/dev/\nstorage.getKeys\n&quot;&gt;\nstorage.getKeys\n&lt;/a&gt; API request.",null,null],[11,"fmt","","",206,null],[11,"eq","","",206,null],[11,"ne","","",206,null],[11,"clone","","",206,null],[11,"method_name","","",206,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",206,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",206,null],[11,"new","","",206,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",206,null],[11,"global","","",206,null],[11,"key","","",206,null],[11,"keys","","",206,null],[11,"fmt","","",207,null],[11,"eq","","",207,null],[11,"ne","","",207,null],[11,"clone","","",207,null],[11,"method_name","","",207,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",207,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",207,null],[11,"new","","",207,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",207,null],[11,"global","","",207,null],[11,"key","","",207,null],[11,"value","","",207,null],[11,"fmt","","",208,null],[11,"eq","","",208,null],[11,"ne","","",208,null],[11,"clone","","",208,null],[11,"method_name","","",208,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",208,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",208,null],[11,"new","","",208,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",208,null],[11,"global","","",208,null],[11,"offset","","",208,null],[11,"count","","",208,null],[0,"account","vkrs","",null,null],[3,"Counters","vkrs::account","",null,null],[12,"friends","","",209,null],[12,"messages","","",209,null],[12,"photos","","",209,null],[12,"videos","","",209,null],[12,"notes","","",209,null],[12,"gifts","","",209,null],[12,"events","","",209,null],[12,"groups","","",209,null],[12,"sdk","","",209,null],[3,"Contacts","","",null,null],[12,"found","","",210,null],[12,"other","","",210,null],[3,"Contact","","",null,null],[12,"contact","","",211,null],[12,"common_count","","",211,null],[3,"PushSettings","","",null,null],[12,"disabled","","",212,null],[12,"disabled_until","","",212,null],[12,"conversations","","",212,null],[3,"Offer","","",null,null],[12,"id","","",213,null],[12,"title","","",213,null],[12,"instruction","","",213,null],[12,"instruction_html","","",213,null],[12,"short_description","","",213,null],[12,"description","","",213,null],[12,"img","","",213,null],[12,"tag","","",213,null],[12,"price","","",213,null],[3,"Info","","",null,null],[12,"country","","",214,null],[12,"https_required","","",214,null],[12,"own_posts_default","","",214,null],[12,"no_wall_replies","","",214,null],[12,"intro","","",214,null],[12,"lang","","",214,null],[3,"ChangedToken","","",null,null],[12,"token","","",215,null],[12,"secret","","",215,null],[3,"ProfileInfo","","",null,null],[12,"first_name","","",216,null],[12,"last_name","","",216,null],[12,"maiden_name","","",216,null],[12,"sex","","",216,null],[12,"relation","","",216,null],[12,"relation_partner","","",216,null],[12,"relation_pending","","",216,null],[12,"relation_requests","","",216,null],[12,"bdate","","",216,null],[12,"bdate_visibility","","",216,null],[12,"home_town","","",216,null],[12,"country","","",216,null],[12,"city","","",216,null],[12,"name_request","","",216,null],[3,"ChangedProfileInfo","","",null,null],[12,"changed","","",217,null],[12,"name_request","","",217,null],[3,"GeoInfo","","",null,null],[12,"id","","",218,null],[12,"title","","",218,null],[3,"NameChangeRequest","","",null,null],[3,"GetAppPermissions","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getAppPermissions\n&quot;&gt;\naccount.getAppPermissions\n&lt;/a&gt; API request.",null,null],[3,"GetCounters","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getCounters\n&quot;&gt;\naccount.getCounters\n&lt;/a&gt; API request.",null,null],[3,"SetNameInMenu","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setNameInMenu\n&quot;&gt;\naccount.setNameInMenu\n&lt;/a&gt; API request.",null,null],[3,"SetOnline","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setOnline\n&quot;&gt;\naccount.setOnline\n&lt;/a&gt; API request.",null,null],[3,"SetOffline","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setOffline\n&quot;&gt;\naccount.setOffline\n&lt;/a&gt; API request.",null,null],[3,"LookupContacts","","The &lt;a href=&quot;https://vk.com/dev/\naccount.lookupContacts\n&quot;&gt;\naccount.lookupContacts\n&lt;/a&gt; API request.",null,null],[3,"RegisterDevice","","The &lt;a href=&quot;https://vk.com/dev/\naccount.registerDevice\n&quot;&gt;\naccount.registerDevice\n&lt;/a&gt; API request.",null,null],[3,"UnregisterDevice","","The &lt;a href=&quot;https://vk.com/dev/\naccount.unregisterDevice\n&quot;&gt;\naccount.unregisterDevice\n&lt;/a&gt; API request.",null,null],[3,"SetSilenceMode","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setSilenceMode\n&quot;&gt;\naccount.setSilenceMode\n&lt;/a&gt; API request.",null,null],[3,"GetPushSettings","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getPushSettings\n&quot;&gt;\naccount.getPushSettings\n&lt;/a&gt; API request.",null,null],[3,"SetPushSettings","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setPushSettings\n&quot;&gt;\naccount.setPushSettings\n&lt;/a&gt; API request.",null,null],[3,"GetActiveOffers","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getActiveOffers\n&quot;&gt;\naccount.getActiveOffers\n&lt;/a&gt; API request.",null,null],[3,"BanUser","","The &lt;a href=&quot;https://vk.com/dev/\naccount.banUser\n&quot;&gt;\naccount.banUser\n&lt;/a&gt; API request.",null,null],[3,"UnbanUser","","The &lt;a href=&quot;https://vk.com/dev/\naccount.unbanUser\n&quot;&gt;\naccount.unbanUser\n&lt;/a&gt; API request.",null,null],[3,"GetBanned","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getBanned\n&quot;&gt;\naccount.getBanned\n&lt;/a&gt; API request.",null,null],[3,"GetInfo","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getInfo\n&quot;&gt;\naccount.getInfo\n&lt;/a&gt; API request.",null,null],[3,"SetInfo","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setInfo\n&quot;&gt;\naccount.setInfo\n&lt;/a&gt; API request.",null,null],[3,"ChangePassword","","The &lt;a href=&quot;https://vk.com/dev/\naccount.changePassword\n&quot;&gt;\naccount.changePassword\n&lt;/a&gt; API request.",null,null],[3,"GetProfileInfo","","The &lt;a href=&quot;https://vk.com/dev/\naccount.getProfileInfo\n&quot;&gt;\naccount.getProfileInfo\n&lt;/a&gt; API request.",null,null],[3,"SetProfileInfo","","The &lt;a href=&quot;https://vk.com/dev/\naccount.setProfileInfo\n&quot;&gt;\naccount.setProfileInfo\n&lt;/a&gt; API request.",null,null],[4,"Service","","",null,null],[13,"Email","","",219,null],[13,"Phone","","",219,null],[13,"Twitter","","",219,null],[13,"Facebook","","",219,null],[13,"Odnoklassniki","","",219,null],[13,"Instagram","","",219,null],[13,"Google","","",219,null],[4,"Filter","","",null,null],[13,"Friends","","",220,null],[13,"Messages","","",220,null],[13,"Photos","","",220,null],[13,"Videos","","",220,null],[13,"Notes","","",220,null],[13,"Gifts","","",220,null],[13,"Events","","",220,null],[13,"Groups","","",220,null],[13,"Sdk","","",220,null],[4,"NameChangeStatus","","",null,null],[13,"Processing","","",221,null],[13,"Declined","","",221,null],[4,"BirthdateVisibility","","",null,null],[13,"Hide","","",222,null],[13,"ShowYMD","","",222,null],[13,"ShowMD","","",222,null],[11,"clone","","",209,null],[11,"eq","","",209,null],[11,"ne","","",209,null],[11,"fmt","","",209,null],[11,"clone","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"fmt","","",210,null],[11,"clone","","",211,null],[11,"eq","","",211,null],[11,"ne","","",211,null],[11,"fmt","","",211,null],[11,"clone","","",212,null],[11,"eq","","",212,null],[11,"ne","","",212,null],[11,"fmt","","",212,null],[11,"clone","","",213,null],[11,"eq","","",213,null],[11,"ne","","",213,null],[11,"fmt","","",213,null],[11,"clone","","",214,null],[11,"eq","","",214,null],[11,"ne","","",214,null],[11,"fmt","","",214,null],[11,"clone","","",215,null],[11,"eq","","",215,null],[11,"ne","","",215,null],[11,"fmt","","",215,null],[11,"clone","","",216,null],[11,"eq","","",216,null],[11,"ne","","",216,null],[11,"fmt","","",216,null],[11,"clone","","",217,null],[11,"eq","","",217,null],[11,"ne","","",217,null],[11,"fmt","","",217,null],[11,"clone","","",218,null],[11,"eq","","",218,null],[11,"ne","","",218,null],[11,"fmt","","",218,null],[11,"clone","","",223,null],[11,"eq","","",223,null],[11,"ne","","",223,null],[11,"fmt","","",223,null],[11,"fmt","","",224,null],[11,"eq","","",224,null],[11,"ne","","",224,null],[11,"clone","","",224,null],[11,"method_name","","",224,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",224,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",224,null],[11,"new","","",224,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",224,null],[11,"fmt","","",225,null],[11,"eq","","",225,null],[11,"ne","","",225,null],[11,"clone","","",225,null],[11,"method_name","","",225,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",225,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",225,null],[11,"new","","",225,{"inputs":[],"output":{"name":"self"}}],[11,"filter","","",225,null],[11,"fmt","","",226,null],[11,"eq","","",226,null],[11,"ne","","",226,null],[11,"clone","","",226,null],[11,"method_name","","",226,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",226,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",226,null],[11,"new","","",226,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",226,null],[11,"name","","",226,null],[11,"fmt","","",227,null],[11,"eq","","",227,null],[11,"ne","","",227,null],[11,"clone","","",227,null],[11,"method_name","","",227,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",227,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",227,null],[11,"new","","",227,{"inputs":[],"output":{"name":"self"}}],[11,"voip","","",227,null],[11,"fmt","","",228,null],[11,"eq","","",228,null],[11,"clone","","",228,null],[11,"method_name","","",228,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",228,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",228,null],[11,"fmt","","",229,null],[11,"eq","","",229,null],[11,"ne","","",229,null],[11,"clone","","",229,null],[11,"method_name","","",229,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",229,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",229,null],[11,"new","","",229,{"inputs":[],"output":{"name":"self"}}],[11,"service","","",229,null],[11,"return_all","","",229,null],[11,"contacts","","",229,null],[11,"mycontact","","",229,null],[11,"fields","","",229,null],[11,"fmt","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"clone","","",230,null],[11,"method_name","","",230,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",230,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",230,null],[11,"new","","",230,{"inputs":[],"output":{"name":"self"}}],[11,"device_year","","",230,null],[11,"settings","","",230,null],[11,"sandbox","","",230,null],[11,"token","","",230,null],[11,"device_model","","",230,null],[11,"device_id","","",230,null],[11,"system_version","","",230,null],[11,"fmt","","",231,null],[11,"eq","","",231,null],[11,"ne","","",231,null],[11,"clone","","",231,null],[11,"method_name","","",231,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",231,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",231,null],[11,"new","","",231,{"inputs":[],"output":{"name":"self"}}],[11,"sandbox","","",231,null],[11,"device_id","","",231,null],[11,"fmt","","",232,null],[11,"eq","","",232,null],[11,"ne","","",232,null],[11,"clone","","",232,null],[11,"method_name","","",232,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",232,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",232,null],[11,"new","","",232,{"inputs":[],"output":{"name":"self"}}],[11,"time","","",232,null],[11,"chat_id","","",232,null],[11,"user_id","","",232,null],[11,"sound","","",232,null],[11,"device_id","","",232,null],[11,"fmt","","",233,null],[11,"eq","","",233,null],[11,"ne","","",233,null],[11,"clone","","",233,null],[11,"method_name","","",233,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",233,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",233,null],[11,"new","","",233,{"inputs":[],"output":{"name":"self"}}],[11,"device_id","","",233,null],[11,"fmt","","",234,null],[11,"eq","","",234,null],[11,"ne","","",234,null],[11,"clone","","",234,null],[11,"method_name","","",234,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",234,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",234,null],[11,"new","","",234,{"inputs":[],"output":{"name":"self"}}],[11,"settings","","",234,null],[11,"key","","",234,null],[11,"value","","",234,null],[11,"device_id","","",234,null],[11,"fmt","","",235,null],[11,"eq","","",235,null],[11,"ne","","",235,null],[11,"clone","","",235,null],[11,"method_name","","",235,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",235,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",235,null],[11,"new","","",235,{"inputs":[],"output":{"name":"self"}}],[11,"offset","","",235,null],[11,"count","","",235,null],[11,"fmt","","",236,null],[11,"eq","","",236,null],[11,"ne","","",236,null],[11,"clone","","",236,null],[11,"method_name","","",236,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",236,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",236,null],[11,"new","","",236,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",236,null],[11,"fmt","","",237,null],[11,"eq","","",237,null],[11,"ne","","",237,null],[11,"clone","","",237,null],[11,"method_name","","",237,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",237,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",237,null],[11,"new","","",237,{"inputs":[],"output":{"name":"self"}}],[11,"user_id","","",237,null],[11,"fmt","","",238,null],[11,"eq","","",238,null],[11,"ne","","",238,null],[11,"clone","","",238,null],[11,"method_name","","",238,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",238,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",238,null],[11,"new","","",238,{"inputs":[],"output":{"name":"self"}}],[11,"offset","","",238,null],[11,"count","","",238,null],[11,"fmt","","",239,null],[11,"eq","","",239,null],[11,"clone","","",239,null],[11,"method_name","","",239,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",239,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",239,null],[11,"fmt","","",240,null],[11,"eq","","",240,null],[11,"ne","","",240,null],[11,"clone","","",240,null],[11,"method_name","","",240,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",240,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",240,null],[11,"new","","",240,{"inputs":[],"output":{"name":"self"}}],[11,"intro","","",240,null],[11,"own_posts_default","","",240,null],[11,"no_wall_replies","","",240,null],[11,"fmt","","",241,null],[11,"eq","","",241,null],[11,"ne","","",241,null],[11,"clone","","",241,null],[11,"method_name","","",241,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",241,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",241,null],[11,"new","","",241,{"inputs":[],"output":{"name":"self"}}],[11,"restore_sid","","",241,null],[11,"change_password_hash","","",241,null],[11,"old_password","","",241,null],[11,"new_password","","",241,null],[11,"fmt","","",242,null],[11,"eq","","",242,null],[11,"clone","","",242,null],[11,"method_name","","",242,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",242,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",242,null],[11,"fmt","","",243,null],[11,"eq","","",243,null],[11,"ne","","",243,null],[11,"clone","","",243,null],[11,"method_name","","",243,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",243,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",243,null],[11,"new","","",243,{"inputs":[],"output":{"name":"self"}}],[11,"cancel_request_id","","",243,null],[11,"sex","","",243,null],[11,"relation","","",243,null],[11,"relation_partner_id","","",243,null],[11,"bdate_visibility","","",243,null],[11,"country_id","","",243,null],[11,"city_id","","",243,null],[11,"first_name","","",243,null],[11,"last_name","","",243,null],[11,"maiden_name","","",243,null],[11,"screen_name","","",243,null],[11,"bdate","","",243,null],[11,"home_town","","",243,null],[11,"status","","",243,null],[11,"clone","","",219,null],[11,"eq","","",219,null],[11,"fmt","","",219,null],[11,"as_ref","","",219,null],[11,"from_str","","",219,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",219,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",220,null],[11,"eq","","",220,null],[11,"fmt","","",220,null],[11,"as_ref","","",220,null],[11,"from_str","","",220,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",220,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",221,null],[11,"eq","","",221,null],[11,"fmt","","",221,null],[11,"as_ref","","",221,null],[11,"from_str","","",221,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",221,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",222,null],[11,"clone","","",222,null],[11,"eq","","",222,null],[11,"deserialize","","",222,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"as_ref","","",222,null],[0,"notifications","vkrs","",null,null],[3,"MarkAsViewed","vkrs::notifications","The &lt;a href=&quot;https://vk.com/dev/\nnotifications.markAsViewed\n&quot;&gt;\nnotifications.markAsViewed\n&lt;/a&gt; API request.",null,null],[11,"fmt","","",244,null],[11,"eq","","",244,null],[11,"clone","","",244,null],[11,"method_name","","",244,{"inputs":[],"output":{"name":"str"}}],[11,"permissions","","",244,{"inputs":[],"output":{"name":"permissions"}}],[11,"to_query_string","","",244,null],[11,"description","vkrs::auth","",21,null],[11,"cause","","",21,null],[11,"fmt","","",21,null],[11,"fmt","","",21,null],[11,"from","","",21,{"inputs":[{"name":"error"}],"output":{"name":"clienterror"}}],[11,"from","","",21,{"inputs":[{"name":"parseerror"}],"output":{"name":"clienterror"}}],[11,"from","","",21,{"inputs":[{"name":"error"}],"output":{"name":"clienterror"}}],[11,"from","","",21,{"inputs":[{"name":"parsererror"}],"output":{"name":"clienterror"}}],[11,"from","","",21,{"inputs":[{"name":"parseerror"}],"output":{"name":"clienterror"}}],[11,"from","","",21,{"inputs":[{"name":"oauth2error"}],"output":{"name":"clienterror"}}],[11,"from_str","vkrs::execute","",204,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deserialize","","",204,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",204,null],[11,"ne","","",204,null],[11,"fmt","","Serializes a json value into a string",204,null],[11,"serialize","","",204,null],[11,"fmt","","Serializes a json value into a string",204,null],[11,"clone","","",204,null],[11,"partial_cmp","vkrs::stats","",245,null],[11,"lt","","",245,null],[11,"le","","",245,null],[11,"gt","","",245,null],[11,"ge","","",245,null],[11,"from_str","","",245,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",245,null],[11,"serialize","","",245,null],[11,"eq","","",245,null],[11,"ne","","",245,null],[11,"fmt","","",245,null],[11,"fmt","","",245,null],[11,"sub","","",245,null],[11,"sub","","",245,null],[11,"cmp","","",245,null],[11,"clone","","",245,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",245,null],[11,"month","","Returns the month number starting from 1.",245,null],[11,"month0","","Returns the month number starting from 0.",245,null],[11,"day","","Returns the day of month starting from 1.",245,null],[11,"day0","","Returns the day of month starting from 0.",245,null],[11,"ordinal","","Returns the day of year starting from 1.",245,null],[11,"ordinal0","","Returns the day of year starting from 0.",245,null],[11,"weekday","","Returns the day of week.",245,null],[11,"isoweekdate","","",245,null],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",245,null],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",245,null],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",245,null],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",245,null],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",245,null],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",245,null],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",245,null],[11,"hash","","",245,null],[11,"deserialize","","",245,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"from_ymd","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",245,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",245,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",245,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",245,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",245,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",245,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",245,{"inputs":[{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",245,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",245,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",245,null],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",245,null],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",245,null],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",245,null],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",245,null],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",245,null],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",245,null],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",245,null],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",245,null],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",245,null],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",245,null],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",245,null],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",245,null],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",245,null],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",245,null],[11,"format_with_items","","Formats the date with the specified formatting items.\nOtherwise it is same to the ordinary `format` method.",245,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",245,null],[11,"find","vkrs::execute","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",204,null],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",204,null],[11,"lookup","","**Deprecated**: Use `Value.pointer()` and pointer syntax instead.",204,null],[11,"pointer","","Looks up a value by a JSON Pointer.",204,null],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable reference to\nthat value.",204,null],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",204,null],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",204,null],[11,"as_object","","If the `Value` is an Object, returns the associated Map.\nReturns None otherwise.",204,null],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map.\nReturns None otherwise.",204,null],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",204,null],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",204,null],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",204,null],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",204,null],[11,"as_str","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",204,null],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",204,null],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",204,null],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",204,null],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",204,null],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",204,null],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",204,null],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",204,null],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",204,null],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",204,null],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",204,null],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",204,null]],"paths":[[3,"Collection"],[3,"RichCollection"],[3,"ApiError"],[3,"KeyVal"],[3,"LikesCount"],[3,"AlbumId"],[3,"Comment"],[3,"FullId"],[3,"ApiResult"],[3,"Attachment"],[4,"Error"],[4,"ErrorCode"],[4,"Privacy"],[4,"Sort"],[4,"ReportReason"],[4,"SortOrder"],[4,"AttachmentKind"],[8,"Request"],[3,"Profile"],[3,"Group"],[3,"Client"],[4,"OAuthError"],[3,"AccessToken"],[4,"Permission"],[3,"AccessTokenLifetime"],[3,"OAuth"],[3,"Auth"],[3,"Permissions"],[3,"Audio"],[3,"Lyrics"],[3,"Album"],[3,"UploadUrl"],[4,"Genre"],[4,"Filter"],[3,"Get"],[3,"Search"],[3,"GetUploadServer"],[3,"Save"],[3,"Add"],[3,"Delete"],[3,"Edit"],[3,"Reorder"],[3,"Restore"],[3,"GetById"],[3,"GetLyrics"],[3,"GetCount"],[3,"GetAlbums"],[3,"AddAlbum"],[3,"EditAlbum"],[3,"DeleteAlbum"],[3,"MoveToAlbum"],[3,"SetBroadcast"],[3,"GetFriendsBroadcastList"],[3,"GetGroupsBroadcastList"],[3,"GetPopular"],[3,"GetRecommendations"],[3,"GiftItem"],[3,"Gift"],[4,"GiftPrivacy"],[3,"Get"],[3,"Photo"],[3,"Album"],[3,"Thumb"],[3,"UploadServer"],[3,"UploadUrl"],[3,"SavedPhoto"],[4,"ThumbKind"],[4,"Sort"],[3,"CreateAlbum"],[3,"EditAlbum"],[3,"GetAlbums"],[3,"Get"],[3,"GetAlbumsCount"],[3,"GetById"],[3,"GetUploadServer"],[3,"GetOwnerPhotoUploadServer"],[3,"GetChatUploadServer"],[3,"GetMarketUploadServer"],[3,"GetMarketAlbumUploadServer"],[3,"GetWallUploadServer"],[3,"GetMessagesUploadServer"],[3,"SaveMarketPhoto"],[3,"SaveMarketAlbumPhoto"],[3,"SaveOwnerPhoto"],[3,"SaveWallPhoto"],[3,"SaveMessagesPhoto"],[3,"Report"],[3,"ReportComment"],[3,"Search"],[3,"Save"],[3,"Copy"],[3,"Edit"],[3,"Move"],[3,"MakeCover"],[3,"ReorderAlbums"],[3,"ReorderPhotos"],[3,"GetAll"],[3,"GetUserPhotos"],[3,"DeleteAlbum"],[3,"Delete"],[3,"ConfirmTag"],[3,"GetComments"],[3,"GetAllComments"],[3,"CreateComment"],[3,"DeleteComment"],[3,"Restore"],[3,"RestoreComment"],[3,"EditComment"],[3,"GetTags"],[3,"PutTag"],[3,"RemoveTag"],[3,"GetNewTags"],[3,"Tag"],[3,"Video"],[3,"VideoFiles"],[3,"SavedVideo"],[3,"Album"],[4,"CatalogBlockKind"],[4,"CatalogItemKind"],[4,"Privacy"],[4,"Filter"],[3,"Tag"],[3,"Page"],[3,"CatalogBlock"],[3,"CatalogItem"],[3,"Get"],[3,"Search"],[3,"Edit"],[3,"Add"],[3,"Save"],[3,"Delete"],[3,"Restore"],[3,"GetUserVideos"],[3,"GetAlbums"],[3,"GetAlbumById"],[3,"AddAlbum"],[3,"EditAlbum"],[3,"DeleteAlbum"],[3,"ReorderAlbums"],[3,"ReorderVideos"],[3,"AddToAlbum"],[3,"RemoveFromAlbum"],[3,"GetAlbumsByVideo"],[3,"GetComments"],[3,"CreateComment"],[3,"DeleteComment"],[3,"RestoreComment"],[3,"EditComment"],[3,"GetTags"],[3,"PutTag"],[3,"RemoveTag"],[3,"GetNewTags"],[3,"Report"],[3,"ReportComment"],[3,"GetCatalog"],[3,"GetCatalogSection"],[3,"HideCatalogSection"],[3,"User"],[4,"NameCase"],[4,"UserOptionField"],[4,"Radius"],[4,"Sort"],[4,"Sex"],[4,"Status"],[4,"ReportKind"],[3,"Get"],[3,"Search"],[3,"IsAppUser"],[3,"GetSubscriptions"],[3,"GetFollowers"],[3,"Report"],[3,"GetNearby"],[3,"Period"],[3,"Demography"],[3,"Country"],[3,"PostReach"],[4,"DemoSex"],[4,"DemoAgeRange"],[4,"DemoCity"],[3,"DemoSexAge"],[3,"Get"],[3,"TrackVisitor"],[3,"GetPostReach"],[3,"Status"],[3,"Get"],[3,"Set"],[4,"PostType"],[4,"Filter"],[3,"WallPost"],[3,"CommentsCount"],[3,"RepostsCount"],[3,"PostSource"],[3,"Attachment"],[3,"GeoLocation"],[3,"RepostInfo"],[3,"PostId"],[3,"Get"],[3,"Post"],[3,"LinkInfo"],[3,"ScreenNameInfo"],[4,"LinkStatus"],[3,"CheckLink"],[3,"ResolveScreenName"],[3,"GetServerTime"],[4,"Value"],[3,"Execute"],[3,"Get"],[3,"Set"],[3,"GetKeys"],[3,"Counters"],[3,"Contacts"],[3,"Contact"],[3,"PushSettings"],[3,"Offer"],[3,"Info"],[3,"ChangedToken"],[3,"ProfileInfo"],[3,"ChangedProfileInfo"],[3,"GeoInfo"],[4,"Service"],[4,"Filter"],[4,"NameChangeStatus"],[4,"BirthdateVisibility"],[3,"NameChangeRequest"],[3,"GetAppPermissions"],[3,"GetCounters"],[3,"SetNameInMenu"],[3,"SetOnline"],[3,"SetOffline"],[3,"LookupContacts"],[3,"RegisterDevice"],[3,"UnregisterDevice"],[3,"SetSilenceMode"],[3,"GetPushSettings"],[3,"SetPushSettings"],[3,"GetActiveOffers"],[3,"BanUser"],[3,"UnbanUser"],[3,"GetBanned"],[3,"GetInfo"],[3,"SetInfo"],[3,"ChangePassword"],[3,"GetProfileInfo"],[3,"SetProfileInfo"],[3,"MarkAsViewed"],[3,"NaiveDate"]]};
searchIndex["inth_oauth2"] = {"doc":"# &quot;It&#39;s not that hard&quot; OAuth 2.0","items":[[4,"ClientError","inth_oauth2","Errors that can occur during authorization.",null,null],[13,"Io","","IO error.",0,null],[13,"Url","","URL error.",0,null],[13,"Hyper","","Hyper error.",0,null],[13,"Json","","JSON error.",0,null],[13,"Parse","","Response parse error.",0,null],[13,"OAuth2","","OAuth 2.0 error.",0,null],[0,"token","","Tokens.",null,null],[3,"Bearer","inth_oauth2::token","The bearer token type.",null,null],[3,"Static","","A static, non-expiring token.",null,null],[3,"Expiring","","An expiring token.",null,null],[3,"Refresh","","An expiring token which can be refreshed.",null,null],[11,"serialize","","",1,null],[11,"deserialize","","",1,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"encode","","",1,null],[11,"decode","","",1,{"inputs":[{"name":"__dl"}],"output":{"name":"result"}}],[11,"access_token","","",1,null],[11,"scope","","",1,null],[11,"lifetime","","",1,null],[11,"from_response","","",1,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"from_response_inherit","","",1,{"inputs":[{"name":"json"},{"name":"self"}],"output":{"name":"result"}}],[11,"serialize","","",2,null],[11,"deserialize","","",2,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"encode","","",2,null],[11,"decode","","",2,{"inputs":[{"name":"__d"}],"output":{"name":"result"}}],[11,"expired","","",2,null],[11,"from_response","","",2,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"serialize","","",3,null],[11,"deserialize","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"expires","","Returns the expiry time of the access token.",3,null],[11,"expired","","",3,null],[11,"from_response","","",3,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"encode","","",3,null],[11,"decode","","",3,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"serialize","","",4,null],[11,"deserialize","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"refresh_token","","Returns the refresh token.",4,null],[11,"expires","","Returns the expiry time of the access token.",4,null],[11,"expired","","",4,null],[11,"from_response","","",4,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"from_response_inherit","","",4,{"inputs":[{"name":"json"},{"name":"self"}],"output":{"name":"result"}}],[11,"encode","","",4,null],[11,"decode","","",4,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Token","","OAuth 2.0 tokens.",null,null],[10,"access_token","","Returns the access token.",5,null],[10,"scope","","Returns the scope, if available.",5,null],[10,"lifetime","","Returns the token lifetime.",5,null],[8,"Lifetime","","OAuth 2.0 token lifetimes.",null,null],[10,"expired","","Returns true if the access token is no longer valid.",6,null],[0,"provider","inth_oauth2","Providers.",null,null],[3,"GitHub","inth_oauth2::provider","GitHub OAuth 2.0 provider.",null,null],[3,"Imgur","","Imgur OAuth 2.0 provider.",null,null],[0,"google","","Google OAuth 2.0 providers.",null,null],[3,"Web","inth_oauth2::provider::google","Google OAuth 2.0 provider for web applications.",null,null],[3,"Installed","","Google OAuth 2.0 provider for installed applications.",null,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"auth_uri","","",7,{"inputs":[],"output":{"name":"str"}}],[11,"token_uri","","",7,{"inputs":[],"output":{"name":"str"}}],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"auth_uri","","",8,{"inputs":[],"output":{"name":"str"}}],[11,"token_uri","","",8,{"inputs":[],"output":{"name":"str"}}],[8,"Provider","inth_oauth2::provider","OAuth 2.0 providers.",null,null],[16,"Lifetime","","The lifetime of tokens issued by the provider.",9,null],[16,"Token","","The type of token issued by the provider.",9,null],[10,"auth_uri","","The authorization endpoint URI.",9,{"inputs":[],"output":{"name":"str"}}],[10,"token_uri","","The token endpoint URI.",9,{"inputs":[],"output":{"name":"str"}}],[11,"credentials_in_body","","Provider requires credentials via request body.",9,{"inputs":[],"output":{"name":"bool"}}],[11,"fmt","","",10,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"auth_uri","","",10,{"inputs":[],"output":{"name":"str"}}],[11,"token_uri","","",10,{"inputs":[],"output":{"name":"str"}}],[11,"fmt","","",11,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"auth_uri","","",11,{"inputs":[],"output":{"name":"str"}}],[11,"token_uri","","",11,{"inputs":[],"output":{"name":"str"}}],[0,"error","inth_oauth2","Errors.",null,null],[3,"OAuth2Error","inth_oauth2::error","OAuth 2.0 error.",null,null],[12,"code","","Error code.",12,null],[12,"description","","Human-readable text providing additional information about the error.",12,null],[12,"uri","","A URI identifying a human-readable web page with information about the error.",12,null],[4,"OAuth2ErrorCode","","OAuth 2.0 error codes.",null,null],[13,"InvalidRequest","","The request is missing a required parameter, includes an unsupported parameter value (other\nthan grant type), repeats a parameter, includes multiple credentials, utilizes more than\none mechanism for authenticating the client, or is otherwise malformed.",13,null],[13,"InvalidClient","","Client authentication failed (e.g., unknown client, no client authentication included, or\nunsupported authentication method).",13,null],[13,"InvalidGrant","","The provided authorization grant (e.g., authorization code, resource owner credentials) or\nrefresh token is invalid, expired, revoked, does not match the redirection URI used in the\nauthorization request, or was issued to another client.",13,null],[13,"UnauthorizedClient","","The authenticated client is not authorized to use this authorization grant type.",13,null],[13,"UnsupportedGrantType","","The authorization grant type is not supported by the authorization server.",13,null],[13,"InvalidScope","","The requested scope is invalid, unknown, malformed, or exceeds the scope granted by the\nresource owner.",13,null],[13,"Unrecognized","","An unrecognized error code, not defined in RFC 6749.",13,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"from","","",13,{"inputs":[{"name":"str"}],"output":{"name":"oauth2errorcode"}}],[11,"fmt","","",12,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"description","","",12,null],[11,"from_response","","",12,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[0,"client","inth_oauth2","Client.",null,null],[3,"Client","inth_oauth2::client","OAuth 2.0 client.",null,null],[12,"client_id","","Client ID.",14,null],[12,"client_secret","","Client secret.",14,null],[12,"redirect_uri","","Redirect URI.",14,null],[4,"ClientError","","Errors that can occur during authorization.",null,null],[13,"Io","","IO error.",0,null],[13,"Url","","URL error.",0,null],[13,"Hyper","","Hyper error.",0,null],[13,"Json","","JSON error.",0,null],[13,"Parse","","Response parse error.",0,null],[13,"OAuth2","","OAuth 2.0 error.",0,null],[0,"response","","Response parsing.",null,null],[3,"JsonHelper","inth_oauth2::client::response","JSON helper for response parsing.",null,null],[12,"0","","",15,null],[3,"JsonObjectHelper","","JSON object helper for response parsing.",null,null],[12,"0","","",16,null],[4,"ParseError","","Response parse errors.",null,null],[13,"ExpectedType","","Expected response to be of type.",17,null],[13,"ExpectedFieldType","","Expected field to be of type.",17,null],[13,"ExpectedFieldValue","","Expected field to equal value.",17,null],[13,"UnexpectedField","","Expected field to not be present.",17,null],[8,"FromResponse","","Response parsing.",null,null],[10,"from_response","","Parse a JSON response.",18,{"inputs":[{"name":"json"}],"output":{"name":"result"}}],[11,"from_response_inherit","","Parse a JSON response, inheriting missing values from the previous instance.",18,{"inputs":[{"name":"json"},{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"description","","",17,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"as_object","","Returns self as a `JsonObjectHelper` or fails with `ParseError::ExpectedType`.",15,null],[11,"fmt","","",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"get_string_option","","Gets a field as a string or returns `None`.",16,null],[11,"get_string","","Gets a field as a string or fails with `ParseError::ExpectedFieldType`.",16,null],[11,"get_i64_option","","Gets a field as an i64 or returns `None`.",16,null],[11,"get_i64","","Gets a field as an i64 or fails with `ParseError::ExpectedFieldType`.",16,null],[11,"fmt","inth_oauth2","",0,null],[11,"fmt","","",0,null],[11,"description","","",0,null],[11,"cause","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"parsererror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"parseerror"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"oauth2error"}],"output":{"name":"self"}}],[11,"fmt","inth_oauth2::client","",14,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"new","","Creates a client.",14,{"inputs":[{"name":"string"},{"name":"string"},{"name":"option"}],"output":{"name":"self"}}],[11,"auth_uri","","Returns an authorization endpoint URI to direct the user to.",14,null],[11,"request_token","","Requests an access token using an authorization code.",14,null],[11,"refresh_token","","Refreshes an access token.",14,null],[11,"ensure_token","","Ensures an access token is valid by refreshing it if necessary.",14,null]],"paths":[[4,"ClientError"],[3,"Bearer"],[3,"Static"],[3,"Expiring"],[3,"Refresh"],[8,"Token"],[8,"Lifetime"],[3,"Web"],[3,"Installed"],[8,"Provider"],[3,"GitHub"],[3,"Imgur"],[3,"OAuth2Error"],[4,"OAuth2ErrorCode"],[3,"Client"],[3,"JsonHelper"],[3,"JsonObjectHelper"],[4,"ParseError"],[8,"FromResponse"]]};
searchIndex["hyper"] = {"doc":"# Hyper","items":[[3,"Url","hyper","The parsed representation of an absolute URL.",null,null],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",0,null],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",0,null],[12,"query","","The query string of the URL.",0,null],[12,"fragment","","The fragment identifier of the URL.",0,null],[3,"LanguageTag","","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",1,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",1,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",1,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",1,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",1,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",1,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",1,null],[0,"client","","HTTP Client",null,null],[3,"Client","hyper::client","A Client to use additional features with Requests.",null,null],[3,"RequestBuilder","","Options for an individual Request.",null,null],[4,"Body","","An enum of possible body types for a Request.",null,null],[13,"ChunkedBody","","A Reader does not necessarily know it&#39;s size, so it is chunked.",2,null],[13,"SizedBody","","For Readers that can know their size, like a `File`.",2,null],[13,"BufBody","","A String has a size, and uses Content-Length.",2,null],[4,"RedirectPolicy","","Behavior regarding how to handle redirects within a Client.",null,null],[13,"FollowNone","","Don&#39;t follow any redirects.",3,null],[13,"FollowAll","","Follow all redirects.",3,null],[13,"FollowIf","","Follow a redirect if the contained function returns true.",3,null],[0,"pool","","Client Connection Pooling",null,null],[3,"Pool","hyper::client::pool","The `NetworkConnector` that behaves as a connection pool used by hyper&#39;s `Client`.",null,null],[3,"Config","","Config options for the `Pool`.",null,null],[12,"max_idle","","The maximum idle connections *per host*.",4,null],[3,"PooledStream","","A Stream that will try to be returned to the Pool when dropped.",null,null],[11,"fmt","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"config"}}],[11,"new","","Creates a `Pool` with a `DefaultConnector`.",5,{"inputs":[{"name":"config"}],"output":{"name":"pool"}}],[11,"with_connector","","Creates a `Pool` with a specified `NetworkConnector`.",5,{"inputs":[{"name":"config"},{"name":"c"}],"output":{"name":"pool"}}],[11,"clear_idle","","Clear all idle connections from the Pool, closing them.",5,null],[11,"connect","","",5,null],[11,"read","","",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[11,"peer_addr","","",6,null],[11,"set_read_timeout","","",6,null],[11,"set_write_timeout","","",6,null],[11,"close","","",6,null],[11,"set_previous_response_expected_no_content","","",6,null],[11,"previous_response_expected_no_content","","",6,null],[11,"drop","","",6,null],[0,"request","hyper::client","Client Requests",null,null],[3,"Request","hyper::client::request","A client request to a remote server.\nThe W type tracks the state of the request, Fresh vs Streaming.",null,null],[12,"url","","The target URI for this request.",7,null],[12,"version","","The HTTP version of this request.",7,null],[11,"headers","","Read the Request headers.",7,null],[11,"method","","Read the Request method.",7,null],[11,"set_write_timeout","","Set the write timeout.",7,null],[11,"set_read_timeout","","Set the read timeout.",7,null],[11,"with_message","","Create a new `Request&lt;Fresh&gt;` that will use the given `HttpMessage` for its communication\nwith the server. This implies that the given `HttpMessage` instance has already been\nproperly initialized by the caller (e.g. a TCP connection&#39;s already established).",7,{"inputs":[{"name":"method"},{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"new","","Create a new client request.",7,{"inputs":[{"name":"method"},{"name":"url"}],"output":{"name":"result"}}],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",7,{"inputs":[{"name":"method"},{"name":"url"},{"name":"c"}],"output":{"name":"result"}}],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",7,null],[11,"headers_mut","","Get a mutable reference to the Request headers.",7,null],[11,"send","","Completes writing the request, and returns a response to read from.",7,null],[11,"write","","",7,null],[11,"flush","","",7,null],[0,"response","hyper::client","Client Responses",null,null],[3,"Response","hyper::client::response","A response for a client request to a remote server.",null,null],[12,"status","","The status from the server.",8,null],[12,"headers","","The headers from the server.",8,null],[12,"version","","The HTTP version of this response from the server.",8,null],[12,"url","","The final URL of this response.",8,null],[11,"fmt","","",8,null],[11,"new","","Creates a new response from a server.",8,{"inputs":[{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"with_message","","Creates a new response received from the server on the given `HttpMessage`.",8,{"inputs":[{"name":"url"},{"name":"box"}],"output":{"name":"result"}}],[11,"status_raw","","Get the raw status code and reason.",8,null],[11,"read","","",8,null],[11,"drop","","",8,null],[8,"IntoUrl","hyper::client","A helper trait to convert common objects into a Url.",null,null],[10,"into_url","","Consumes the object, trying to return a Url.",9,null],[11,"fmt","","",10,null],[11,"new","","Create a new Client.",10,{"inputs":[],"output":{"name":"client"}}],[11,"with_pool_config","","Create a new Client with a configured Pool Config.",10,{"inputs":[{"name":"config"}],"output":{"name":"client"}}],[11,"with_connector","","Create a new client with a specific connector.",10,{"inputs":[{"name":"c"}],"output":{"name":"client"}}],[11,"with_protocol","","Create a new client with a specific `Protocol`.",10,{"inputs":[{"name":"p"}],"output":{"name":"client"}}],[11,"set_redirect_policy","","Set the RedirectPolicy.",10,null],[11,"set_read_timeout","","Set the read timeout value for all requests.",10,null],[11,"set_write_timeout","","Set the write timeout value for all requests.",10,null],[11,"get","","Build a Get request.",10,null],[11,"head","","Build a Head request.",10,null],[11,"patch","","Build a Patch request.",10,null],[11,"post","","Build a Post request.",10,null],[11,"put","","Build a Put request.",10,null],[11,"delete","","Build a Delete request.",10,null],[11,"request","","Build a new request using this Client.",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"client"}}],[11,"body","","Set a request body to be sent.",11,null],[11,"headers","","Add additional headers to the request.",11,null],[11,"header","","Add an individual new header to the request.",11,null],[11,"send","","Execute this request and receive a Response back.",11,null],[11,"read","","",2,null],[11,"from","","",2,{"inputs":[{"name":"r"}],"output":{"name":"body"}}],[11,"into_url","hyper","",0,null],[11,"fmt","hyper::client","",3,null],[11,"clone","","",3,null],[11,"default","","",3,{"inputs":[],"output":{"name":"redirectpolicy"}}],[0,"error","hyper","Error and Result module.",null,null],[4,"Error","hyper::error","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",12,null],[13,"Uri","","An invalid `RequestUri`, such as `exam ple.domain`.",12,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",12,null],[13,"Header","","An invalid `Header`.",12,null],[13,"TooLarge","","A message head is too large to be reasonable.",12,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",12,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",12,null],[13,"Ssl","","An error from a SSL library.",12,null],[13,"Http2","","An HTTP/2-specific error, coming from the `solicit` library.",12,null],[13,"Utf8","","Parsing a field as string failed",12,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",12,null],[11,"fmt","","",12,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"from","","",12,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"parseerror"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"sslerror"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",12,{"inputs":[{"name":"http2error"}],"output":{"name":"error"}}],[0,"method","hyper","The HTTP request method",null,null],[4,"Method","hyper::method","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",13,null],[13,"Get","","GET",13,null],[13,"Post","","POST",13,null],[13,"Put","","PUT",13,null],[13,"Delete","","DELETE",13,null],[13,"Head","","HEAD",13,null],[13,"Trace","","TRACE",13,null],[13,"Connect","","CONNECT",13,null],[13,"Patch","","PATCH",13,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(&quot;FOO&quot;.to_string())`.",13,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"hash","","",13,null],[11,"fmt","","",13,null],[11,"as_ref","","",13,null],[11,"safe","","Whether a method is considered &quot;safe&quot;, meaning the request is\nessentially read-only.",13,null],[11,"idempotent","","Whether a method is considered &quot;idempotent&quot;, meaning the request has\nthe same result is executed multiple times.",13,null],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",13,null],[0,"header","hyper","Headers container, and common header fields.",null,null],[3,"CookiePair","hyper::header","",null,null],[12,"name","","",14,null],[12,"value","","",14,null],[12,"expires","","",14,null],[12,"max_age","","",14,null],[12,"domain","","",14,null],[12,"path","","",14,null],[12,"secure","","",14,null],[12,"httponly","","",14,null],[12,"custom","","",14,null],[3,"CookieJar","","A jar of cookies for managing a session",null,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",15,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",16,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",17,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",18,null],[12,"quality","","The quality (client or server preference) for the value.",18,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[12,"0","","",19,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[12,"0","","",20,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[12,"0","","",21,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header)",null,null],[12,"0","","",22,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[12,"0","","",23,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[12,"0","","",24,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[12,"0","","",25,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[12,"0","","",26,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[12,"0","","",27,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[12,"0","","",28,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[12,"0","","",29,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[12,"0","","",30,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[12,"0","","",31,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",32,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",32,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",33,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[12,"0","","",34,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[12,"0","","",35,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in [RFC6266](https://tools.ietf.org/html/rfc6266)",null,null],[12,"disposition","","The disposition",36,null],[12,"parameters","","Disposition parameters",36,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[12,"0","","",37,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[12,"0","","",38,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[12,"0","","",39,null],[3,"ContentRange","","`Content-Range` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[12,"0","","",40,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[12,"0","","",41,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[12,"0","","",42,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[12,"0","","",43,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"0","","",44,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[12,"0","","",45,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[12,"0","","",46,null],[3,"Host","","The `Host` header.",null,null],[12,"hostname","","The hostname, such a example.domain.",47,null],[12,"port","","An optional port number.",47,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[12,"0","","",48,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[12,"0","","",49,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[12,"0","","",50,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[12,"0","","",51,null],[3,"Prefer","","`Prefer` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",52,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",53,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[12,"0","","",54,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[12,"0","","",55,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[12,"0","","",56,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in [RFC6797](https://tools.ietf.org/html/rfc6797)",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as\nany subdomains of the host&#39;s domain name.",57,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header\nfield, during which the UA regards the host (from whom the message was\nreceived) as a Known HSTS Host.",57,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[12,"0","","",58,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[12,"0","","",59,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",60,null],[12,"version","","The optional version of the protocol, often in the format &quot;DIGIT.DIGIT&quot; (e.g.. &quot;1.2&quot;)",60,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[12,"0","","",61,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header.",null,null],[12,"0","","",62,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",63,null],[13,"Iso_8859_1","","ISO-8859-1",63,null],[13,"Iso_8859_2","","ISO-8859-2",63,null],[13,"Iso_8859_3","","ISO-8859-3",63,null],[13,"Iso_8859_4","","ISO-8859-4",63,null],[13,"Iso_8859_5","","ISO-8859-5",63,null],[13,"Iso_8859_6","","ISO-8859-6",63,null],[13,"Iso_8859_7","","ISO-8859-7",63,null],[13,"Iso_8859_8","","ISO-8859-8",63,null],[13,"Iso_8859_9","","ISO-8859-9",63,null],[13,"Iso_8859_10","","ISO-8859-10",63,null],[13,"Shift_Jis","","Shift_JIS",63,null],[13,"Euc_Jp","","EUC-JP",63,null],[13,"Iso_2022_Kr","","ISO-2022-KR",63,null],[13,"Euc_Kr","","EUC-KR",63,null],[13,"Iso_2022_Jp","","ISO-2022-JP",63,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",63,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",63,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",63,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",63,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",63,null],[13,"Gb2312","","GB2312",63,null],[13,"Big5","","Big5",63,null],[13,"Koi8_R","","KOI8-R",63,null],[13,"Ext","","An arbitrary charset specified as a string",63,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",64,null],[13,"Gzip","","The `gzip` encoding.",64,null],[13,"Deflate","","The `deflate` encoding.",64,null],[13,"Compress","","The `compress` encoding.",64,null],[13,"Identity","","The `identity` encoding.",64,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",64,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",65,null],[13,"Null","","A hidden origin",65,null],[13,"Value","","Allow one particular origin",65,null],[4,"RangeUnit","","Range Units, described in [RFC7233](http://tools.ietf.org/html/rfc7233#section-2)",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",66,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",66,null],[13,"Unregistered","","The given range unit is not registered at IANA.",66,null],[4,"CacheDirective","","CacheControl contains a list of these directives.",null,null],[13,"NoCache","","&quot;no-cache&quot;",67,null],[13,"NoStore","","&quot;no-store&quot;",67,null],[13,"NoTransform","","&quot;no-transform&quot;",67,null],[13,"OnlyIfCached","","&quot;only-if-cached&quot;",67,null],[13,"MaxAge","","&quot;max-age=delta&quot;",67,null],[13,"MaxStale","","&quot;max-stale=delta&quot;",67,null],[13,"MinFresh","","&quot;min-fresh=delta&quot;",67,null],[13,"MustRevalidate","","&quot;must-revalidate&quot;",67,null],[13,"Public","","&quot;public&quot;",67,null],[13,"Private","","&quot;private&quot;",67,null],[13,"ProxyRevalidate","","&quot;proxy-revalidate&quot;",67,null],[13,"SMaxAge","","&quot;s-maxage=delta&quot;",67,null],[13,"Extension","","Extension directives. Optionally include an argument.",67,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",68,null],[13,"Close","","The `close` connection value.",68,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",68,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",69,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally,\nrather than process it normally (as per its media type).",69,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",69,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of\nbytes representing the filename",70,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized\nparameters.",70,null],[4,"ContentRangeSpec","","Content-Range, described in [RFC7233](https://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[13,"Bytes","","Byte range",71,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be\nsatisfied",71,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",71,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",71,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",71,null],[12,"resp","","other-range-resp",71,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",72,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",73,null],[13,"Items","","Only the listed items are a match",73,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",74,null],[13,"Items","","Only the listed items are a match",74,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",75,null],[13,"Date","","The date when the client retrieved the resource",75,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",76,null],[13,"Ext","","Every value other than `no-cache`.",76,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","&quot;respond-async&quot;",77,null],[13,"ReturnRepresentation","","&quot;return=representation&quot;",77,null],[13,"ReturnMinimal","","&quot;return=minimal&quot;",77,null],[13,"HandlingStrict","","&quot;handling=strict&quot;",77,null],[13,"HandlingLeniant","","&quot;handling=leniant&quot;",77,null],[13,"Wait","","&quot;wait=delta&quot;",77,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is\njust &quot;&quot;. A preference can also have a list of parameters.",77,null],[4,"Range","","`Range` header, defined in [RFC7233](https://tools.ietf.org/html/rfc7233#section-3.1)",null,null],[13,"Bytes","","Byte range",78,null],[13,"Unregistered","","Custom range, with unit not registered at IANA\n(`other-range-unit`: String , `other-range-set`: String)",78,null],[4,"ByteRangeSpec","","Each Range::Bytes header can contain one or more ByteRangeSpecs.\nEach ByteRangeSpec defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (&quot;x-y&quot;)",79,null],[13,"AllFrom","","Get all bytes starting from x (&quot;x-&quot;)",79,null],[13,"Last","","Get last x bytes (&quot;-x&quot;)",79,null],[4,"ProtocolName","","A protocol name used to identify a spefic protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",80,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",80,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",80,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",80,null],[13,"Unregistered","","Any other protocol name not known to hyper",80,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",81,null],[13,"Items","","Only the listed items are a match",81,null],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"deref","","",19,null],[11,"deref_mut","","",19,null],[11,"header_name","","",19,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",19,null],[11,"fmt_header","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",82,null],[11,"eq","","",82,null],[11,"fmt","","",82,null],[11,"header_name","","",82,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",82,null],[11,"fmt_header","","",82,null],[11,"fmt","","",82,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"deref","","",20,null],[11,"deref_mut","","",20,null],[11,"header_name","","",20,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",20,null],[11,"fmt_header","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"deref","","",21,null],[11,"deref_mut","","",21,null],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,null],[11,"fmt_header","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"header_name","","",65,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",65,null],[11,"fmt_header","","",65,null],[11,"fmt","","",65,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"deref","","",22,null],[11,"deref_mut","","",22,null],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,null],[11,"fmt_header","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,null],[11,"fmt_header","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,null],[11,"fmt_header","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,null],[11,"fmt_header","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,null],[11,"fmt_header","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"deref","","",27,null],[11,"deref_mut","","",27,null],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,null],[11,"fmt_header","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,null],[11,"fmt_header","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"deref","","",29,null],[11,"deref_mut","","",29,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,null],[11,"fmt_header","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",66,null],[11,"fmt","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"from_str","","",66,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",66,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"deref","","",30,null],[11,"deref_mut","","",30,null],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,null],[11,"fmt_header","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,null],[11,"fmt_header","","",31,null],[11,"clone","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"scheme","","",32,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",32,null],[11,"from_str","","",32,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"fmt","","",33,null],[11,"scheme","","",33,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",33,null],[11,"from_str","","",33,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"deref","","",34,null],[11,"deref_mut","","",34,null],[11,"header_name","","",34,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",34,null],[11,"fmt_header","","",34,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",67,null],[11,"fmt","","",67,null],[11,"from_str","","",67,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"fmt","","",42,null],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,null],[11,"fmt_header","","",42,null],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",42,null],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",42,{"inputs":[{"name":"cookiejar"}],"output":{"name":"cookie"}}],[11,"clone","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"from_str","","",68,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",68,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"header_name","","",35,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",35,null],[11,"fmt_header","","",35,null],[11,"fmt","","",35,null],[11,"close","","A constructor to easily create a `Connection: close` header.",35,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",35,{"inputs":[],"output":{"name":"connection"}}],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",70,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"ne","","",70,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,null],[11,"fmt_header","","",36,null],[11,"fmt","","",36,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"deref","","",38,null],[11,"deref_mut","","",38,null],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,null],[11,"fmt_header","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,null],[11,"fmt_header","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,null],[11,"fmt_header","","",37,null],[11,"fmt","","",37,null],[11,"deref","","",37,null],[11,"deref_mut","","",37,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,null],[11,"fmt_header","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"clone","","",71,null],[11,"fmt","","",71,null],[11,"from_str","","",71,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",71,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,null],[11,"fmt_header","","",41,null],[11,"fmt","","",41,null],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",41,{"inputs":[],"output":{"name":"contenttype"}}],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,null],[11,"fmt_header","","",43,null],[11,"fmt","","",43,null],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"deref","","",44,null],[11,"deref_mut","","",44,null],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,null],[11,"fmt_header","","",44,null],[11,"fmt","","",44,null],[11,"clone","","",72,null],[11,"eq","","",72,null],[11,"fmt","","",72,null],[11,"header_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",72,null],[11,"fmt_header","","",72,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,null],[11,"fmt_header","","",45,null],[11,"fmt","","",45,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,null],[11,"fmt_header","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"fmt","","",47,null],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,null],[11,"fmt_header","","",47,null],[11,"clone","","",73,null],[11,"fmt","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"header_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",73,null],[11,"fmt_header","","",73,null],[11,"fmt","","",73,null],[11,"clone","","",48,null],[11,"fmt","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"deref","","",48,null],[11,"deref_mut","","",48,null],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,null],[11,"fmt_header","","",48,null],[11,"fmt","","",48,null],[11,"clone","","",74,null],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"header_name","","",74,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",74,null],[11,"fmt_header","","",74,null],[11,"fmt","","",74,null],[11,"clone","","",75,null],[11,"fmt","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"header_name","","",75,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",75,null],[11,"fmt_header","","",75,null],[11,"fmt","","",75,null],[11,"clone","","",49,null],[11,"fmt","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"deref","","",49,null],[11,"deref_mut","","",49,null],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,null],[11,"fmt_header","","",49,null],[11,"fmt","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,null],[11,"fmt_header","","",50,null],[11,"fmt","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,null],[11,"fmt_header","","",51,null],[11,"fmt","","",51,null],[11,"clone","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"fmt","","",76,null],[11,"header_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",76,null],[11,"fmt_header","","",76,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,null],[11,"fmt_header","","",52,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"fmt","","",77,null],[11,"fmt","","",77,null],[11,"from_str","","",77,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"deref","","",53,null],[11,"deref_mut","","",53,null],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,null],[11,"fmt_header","","",53,null],[11,"eq","","",78,null],[11,"ne","","",78,null],[11,"clone","","",78,null],[11,"fmt","","",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"bytes","","Get the most common byte range header (&quot;bytes=from-to&quot;)",78,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(&quot;bytes=from1-to1,from2-to2,fromX-toX&quot;)",78,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",79,null],[11,"fmt","","",78,null],[11,"from_str","","",78,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",79,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",78,null],[11,"fmt_header","","",78,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"deref","","",54,null],[11,"deref_mut","","",54,null],[11,"header_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",54,null],[11,"fmt_header","","",54,null],[11,"fmt","","",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,null],[11,"fmt_header","","",55,null],[11,"fmt","","",55,null],[11,"clone","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"fmt","","",56,null],[11,"deref","","",56,null],[11,"deref_mut","","",56,null],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,null],[11,"fmt_header","","",56,null],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",56,{"inputs":[{"name":"cookiejar"}],"output":{"name":"setcookie"}}],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",56,null],[11,"clone","","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"fmt","","",57,null],[11,"including_subdomains","","Create an STS header that includes subdomains",57,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",57,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",57,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,null],[11,"fmt_header","","",57,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"header_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",58,null],[11,"fmt_header","","",58,null],[11,"fmt","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"deref","","",59,null],[11,"deref_mut","","",59,null],[11,"header_name","","",59,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",59,null],[11,"fmt_header","","",59,null],[11,"fmt","","",59,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"from_str","","",80,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",80,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"new","","Creates a new Protocol with the given name and version",60,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",60,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",60,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"deref","","",61,null],[11,"deref_mut","","",61,null],[11,"header_name","","",61,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",61,null],[11,"fmt_header","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",81,null],[11,"fmt","","",81,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"header_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",81,null],[11,"fmt_header","","",81,null],[11,"fmt","","",81,null],[11,"clone","","",63,null],[11,"fmt","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"fmt","","",63,null],[11,"from_str","","",63,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"fmt","","",64,null],[11,"fmt","","",64,null],[11,"from_str","","",64,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",15,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",15,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",15,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",15,null],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",15,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",15,null],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as &quot;weak&quot;.",15,null],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",15,null],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",15,null],[11,"fmt","","",15,null],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"cmp","","",16,null],[11,"from_str","","",16,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"cmp","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"fmt","","",17,null],[11,"default","","",17,{"inputs":[],"output":{"name":"quality"}}],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",18,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",18,null],[11,"fmt","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally,\na language), as defined in [RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",83,null],[12,"language_tag","","The human language details of the `value`, if available.",83,null],[12,"value","","The parameter value, as expressed in octets.",83,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,null],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,null],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in\n[RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",83,null],[11,"fmt","","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"fmt","","",83,null],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",84,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",84,null],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",85,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",85,null],[8,"HeaderFormat","","A trait for any object that will represent a header field and value.",null,null],[10,"fmt_header","","Format a header to be output into a TcpStream.",86,null],[11,"clone","","",87,null],[11,"new","","Creates a new, empty headers map.",87,{"inputs":[],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",87,null],[11,"get_raw","","Access the raw value of a header.",87,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",87,null],[11,"remove_raw","","Remove a header set by set_raw",87,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",87,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",87,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",87,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",87,null],[11,"iter","","Returns an iterator over the header fields.",87,null],[11,"len","","Returns the number of headers in the map.",87,null],[11,"clear","","Remove all headers from the map.",87,null],[11,"eq","","",87,null],[11,"fmt","","",87,null],[11,"fmt","","",87,null],[11,"next","","",88,null],[11,"is","","Check if a HeaderView is a certain Header.",89,null],[11,"name","","Get the Header name as a slice.",89,null],[11,"value","","Cast the value to a certain Header type.",89,null],[11,"value_string","","Get just the header value as a String.",89,null],[11,"fmt","","",89,null],[11,"fmt","","",89,null],[11,"extend","","",87,null],[11,"from_iter","","",87,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","","",62,null],[11,"fmt","","",62,null],[0,"http","hyper","Pieces pertaining to the HTTP message protocol.",null,null],[3,"RawStatus","hyper::http","The raw status code and reason-phrase.",null,null],[12,"0","","",90,null],[12,"1","","",90,null],[5,"should_keep_alive","","Checks if a connection should be kept alive.",null,{"inputs":[{"name":"httpversion"},{"name":"headers"}],"output":{"name":"bool"}}],[0,"h1","","Adapts the HTTP/1.1 implementation into the `HttpMessage` API.",null,null],[3,"Http11Message","hyper::http::h1","An implementation of the `HttpMessage` trait for HTTP/1.1.",null,null],[3,"Http11Protocol","","The `Protocol` implementation provides HTTP/1.1 messages.",null,null],[3,"EndError","","",null,null],[3,"Incoming","","An Incoming Message head. Includes request/status line, and headers.",null,null],[12,"version","","HTTP version of the message.",91,null],[12,"subject","","Subject (request line or status line) of Incoming message.",91,null],[12,"headers","","Headers of the Incoming message.",91,null],[4,"HttpReader","","Readers to handle different Transfer-Encodings.",null,null],[13,"SizedReader","","A Reader used when a Content-Length header is passed with a positive integer.",92,null],[13,"ChunkedReader","","A Reader used when Transfer-Encoding is `chunked`.",92,null],[13,"EofReader","","A Reader used for responses that don&#39;t indicate a length or chunked.",92,null],[13,"EmptyReader","","A Reader used for messages that should never have a body.",92,null],[4,"HttpWriter","","Writers to handle different Transfer-Encodings.",null,null],[13,"ThroughWriter","","A no-op Writer, used initially before Transfer-Encoding is determined.",93,null],[13,"ChunkedWriter","","A Writer for when Transfer-Encoding includes `chunked`.",93,null],[13,"SizedWriter","","A Writer for when Content-Length is set.",93,null],[13,"EmptyWriter","","A writer that should not write any body.",93,null],[5,"parse_request","","Parses a request into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[5,"parse_response","","Parses a response into an Incoming message head.",null,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[17,"CR","","The `\\r` byte.",null,null],[17,"LF","","The `\\n` byte.",null,null],[17,"LINE_ENDING","","The bytes `\\r\\n`.",null,null],[11,"fmt","","",94,null],[11,"write","","",94,null],[11,"flush","","",94,null],[11,"read","","",94,null],[11,"set_outgoing","","",94,null],[11,"get_incoming","","",94,null],[11,"has_body","","",94,null],[11,"set_read_timeout","","",94,null],[11,"set_write_timeout","","",94,null],[11,"close_connection","","",94,null],[11,"into_inner","","Consumes the `Http11Message` and returns the underlying `NetworkStream`.",94,null],[11,"get_ref","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",94,null],[11,"get_mut","","Gets a mutable reference to the underlying `NetworkStream`, regardless of the state of the\n`Http11Message`.",94,null],[11,"with_stream","","Creates a new `Http11Message` that will use the given `NetworkStream` for communicating to\nthe peer.",94,{"inputs":[{"name":"box"}],"output":{"name":"http11message"}}],[11,"flush_outgoing","","Flushes the current outgoing content and moves the stream into the `stream` property.",94,null],[11,"new_message","","",95,null],[11,"with_connector","","Creates a new `Http11Protocol` instance that will use the given `NetworkConnector` for\nestablishing HTTP connections.",95,{"inputs":[{"name":"c"}],"output":{"name":"http11protocol"}}],[11,"into_inner","","Unwraps this HttpReader and returns the underlying Reader.",92,null],[11,"get_ref","","Gets a borrowed reference to the underlying Reader.",92,null],[11,"get_mut","","Gets a mutable reference to the underlying Reader.",92,null],[11,"fmt","","",92,null],[11,"read","","",92,null],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",93,null],[11,"get_ref","","Access the inner Writer.",93,null],[11,"get_mut","","Access the inner Writer mutably.",93,null],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",93,null],[11,"fmt","","",96,null],[11,"write","","",93,null],[11,"flush","","",93,null],[11,"fmt","","",93,null],[11,"fmt","","",91,null],[0,"h2","hyper::http","Adapts the `solicit`-provided HTTP/2 implementation into the `HttpMessage` API.",null,null],[3,"Http2Protocol","hyper::http::h2","The `Protocol` implementation that provides HTTP/2 messages (i.e. `Http2Message`).",null,null],[3,"Http2Message","","An implementation of the `HttpMessage` trait for HTTP/2.",null,null],[5,"new_protocol","","A convenience method that creates a default `Http2Protocol` that uses a `net::HttpConnector`\n(which produces an `HttpStream` for the underlying transport layer).",null,{"inputs":[],"output":{"name":"http2protocol"}}],[8,"CloneableStream","","A trait alias representing all types that are both `NetworkStream` and `Clone`.",null,null],[11,"with_connector","","Create a new `Http2Protocol` that will use the given `NetworkConnector` to establish TCP\nconnections to the server.",97,{"inputs":[{"name":"c"}],"output":{"name":"http2protocol"}}],[11,"new_message","","",97,null],[11,"fmt","","",98,null],[11,"write","","",98,null],[11,"flush","","",98,null],[11,"read","","",98,null],[11,"set_outgoing","","",98,null],[11,"get_incoming","","",98,null],[11,"has_body","","",98,null],[11,"set_read_timeout","","",98,null],[11,"set_write_timeout","","",98,null],[11,"close_connection","","",98,null],[0,"message","hyper::http","Defines the `HttpMessage` trait that serves to encapsulate the operations of a single\nrequest-response cycle on any HTTP connection.",null,null],[3,"RequestHead","hyper::http::message","Describes a request.",null,null],[12,"headers","","The headers of the request",99,null],[12,"method","","The method of the request",99,null],[12,"url","","The URL of the request",99,null],[3,"ResponseHead","","Describes a response.",null,null],[12,"headers","","The headers of the reponse",100,null],[12,"raw_status","","The raw status line of the response",100,null],[12,"version","","The HTTP/2 version which generated the response",100,null],[8,"Protocol","","The trait provides an API for creating new `HttpMessage`s depending on the underlying HTTP\nprotocol.",null,null],[10,"new_message","","Creates a fresh `HttpMessage` bound to the given host, based on the given protocol scheme.",101,null],[8,"HttpMessage","","The trait provides an API for sending an receiving HTTP messages.",null,null],[10,"set_outgoing","","Initiates a new outgoing request.",102,null],[10,"get_incoming","","Obtains the incoming response and returns its head (i.e. the `ResponseHead` struct)",102,null],[10,"set_read_timeout","","Set the read timeout duration for this message.",102,null],[10,"set_write_timeout","","Set the write timeout duration for this message.",102,null],[10,"close_connection","","Closes the underlying HTTP connection.",102,null],[10,"has_body","","Returns whether the incoming message has a body.",102,null],[11,"clone","","",99,null],[11,"fmt","","",99,null],[11,"clone","","",100,null],[11,"fmt","","",100,null],[11,"is","","Is the underlying type in this trait object a T?",102,null],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",102,null],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",102,null],[11,"downcast","","If the underlying type is T, extract it.",102,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","hyper::http","",90,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"fmt","","",90,null],[0,"net","hyper","A collection of traits abstracting over Listeners and Streams.",null,null],[3,"Openssl","hyper::net","An implementation of `Ssl` for OpenSSL.",null,null],[12,"context","","The `SslContext` from openssl crate.",103,null],[3,"NetworkConnections","","An iterator wrapper over a NetworkAcceptor.",null,null],[3,"HttpListener","","A `NetworkListener` for `HttpStream`s.",null,null],[3,"HttpStream","","A wrapper around a TcpStream.",null,null],[12,"0","","",104,null],[3,"HttpConnector","","A connector that will produce HttpStreams.",null,null],[3,"HttpsListener","","A Http Listener over SSL.",null,null],[3,"HttpsConnector","","A connector that can protect HTTP streams using SSL.",null,null],[4,"Fresh","","The write-status indicating headers have not been written.",null,null],[4,"Streaming","","The write-status indicating headers have been written.",null,null],[4,"HttpsStream","","A stream over the HTTP protocol, possibly protected by SSL.",null,null],[13,"Http","","A plain text stream.",105,null],[13,"Https","","A stream protected by SSL.",105,null],[11,"fmt","","",103,null],[11,"clone","","",103,null],[11,"default","","",103,{"inputs":[],"output":{"name":"openssl"}}],[11,"with_cert_and_key","","Ease creating an `Openssl` with a certificate and key.",103,{"inputs":[{"name":"c"},{"name":"k"}],"output":{"name":"result"}}],[11,"wrap_client","","",103,null],[11,"wrap_server","","",103,null],[8,"NetworkListener","","An abstraction to listen for connections on a certain port.",null,null],[16,"Stream","","The stream produced for each connection.",106,null],[10,"accept","","Returns an iterator of streams.",106,null],[10,"local_addr","","Get the address this Listener ended up listening on.",106,null],[11,"incoming","","Returns an iterator over incoming connections.",106,null],[8,"NetworkStream","","An abstraction over streams that a Server can utilize.",null,null],[10,"peer_addr","","Get the remote address of the underlying connection.",107,null],[10,"set_read_timeout","","Set the maximum time to wait for a read to complete.",107,null],[10,"set_write_timeout","","Set the maximum time to wait for a write to complete.",107,null],[11,"close","","This will be called when Stream should no longer be kept alive.",107,null],[8,"NetworkConnector","","A connector creates a NetworkStream.",null,null],[16,"Stream","","Type of Stream to create",108,null],[10,"connect","","Connect to a remote address.",108,null],[8,"Ssl","","Deprecated",null,null],[16,"Stream","","The protected stream.",109,null],[10,"wrap_client","","Wrap a client stream with SSL.",109,null],[10,"wrap_server","","Wrap a server stream with SSL.",109,null],[8,"SslClient","","An abstraction to allow any SSL implementation to be used with client-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",110,null],[10,"wrap_client","","Wrap a client stream with SSL.",110,null],[8,"SslServer","","An abstraction to allow any SSL implementation to be used with server-side HttpsStreams.",null,null],[16,"Stream","","The protected stream.",111,null],[10,"wrap_server","","Wrap a server stream with SSL.",111,null],[11,"next","","",112,null],[11,"is","","Is the underlying type in this trait object a T?",107,null],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",107,null],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",107,null],[11,"downcast","","If the underlying type is T, extract it.",107,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"is","","Is the underlying type in this trait object a T?",107,null],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",107,null],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",107,null],[11,"downcast","","If the underlying type is T, extract it.",107,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","","",113,null],[11,"from","","",113,{"inputs":[{"name":"tcplistener"}],"output":{"name":"httplistener"}}],[11,"new","","Start listening to an address over HTTP.",113,{"inputs":[{"name":"to"}],"output":{"name":"result"}}],[11,"accept","","",113,null],[11,"local_addr","","",113,null],[11,"as_raw_fd","","",113,null],[11,"from_raw_fd","","",113,{"inputs":[{"name":"rawfd"}],"output":{"name":"httplistener"}}],[11,"clone","","",104,null],[11,"fmt","","",104,null],[11,"read","","",104,null],[11,"write","","",104,null],[11,"flush","","",104,null],[11,"as_raw_fd","","",104,null],[11,"from_raw_fd","","",104,{"inputs":[{"name":"rawfd"}],"output":{"name":"httpstream"}}],[11,"peer_addr","","",104,null],[11,"set_read_timeout","","",104,null],[11,"set_write_timeout","","",104,null],[11,"close","","",104,null],[11,"fmt","","",114,null],[11,"clone","","",114,null],[11,"default","","",114,{"inputs":[],"output":{"name":"httpconnector"}}],[11,"connect","","",114,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"read","","",105,null],[11,"write","","",105,null],[11,"flush","","",105,null],[11,"peer_addr","","",105,null],[11,"set_read_timeout","","",105,null],[11,"set_write_timeout","","",105,null],[11,"close","","",105,null],[11,"clone","","",115,null],[11,"new","","Start listening to an address over HTTPS.",115,{"inputs":[{"name":"to"},{"name":"s"}],"output":{"name":"result"}}],[11,"with_listener","","Construct an HttpsListener from a bound `TcpListener`.",115,{"inputs":[{"name":"httplistener"},{"name":"s"}],"output":{"name":"httpslistener"}}],[11,"accept","","",115,null],[11,"local_addr","","",115,null],[11,"fmt","","",116,null],[11,"default","","",116,{"inputs":[],"output":{"name":"httpsconnector"}}],[11,"new","","Create a new connector using the provided SSL implementation.",116,{"inputs":[{"name":"s"}],"output":{"name":"httpsconnector"}}],[11,"connect","","",116,null],[0,"server","hyper","HTTP Server",null,null],[3,"Server","hyper::server","A server can listen on a TCP socket.",null,null],[3,"Listening","","A listening server, which can later be closed.",null,null],[12,"socket","","The socket addresses that the server is bound to.",117,null],[0,"request","","Server Requests",null,null],[3,"Request","hyper::server::request","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[12,"remote_addr","","The IP address of the remote connection.",118,null],[12,"method","","The `Method`, such as `Get`, `Post`, etc.",118,null],[12,"headers","","The headers of the incoming request.",118,null],[12,"uri","","The target request-uri for this request.",118,null],[12,"version","","The version of HTTP for this request.",118,null],[11,"new","","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",118,{"inputs":[{"name":"bufreader"},{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Set the read timeout of the underlying NetworkStream.",118,null],[11,"downcast_ref","","Get a reference to the underlying `NetworkStream`.",118,null],[11,"ssl","","Get a reference to the underlying Ssl stream, if connected\nover HTTPS.",118,null],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",118,null],[11,"read","","",118,null],[0,"response","hyper::server","Server Responses",null,null],[3,"Response","hyper::server::response","The outgoing half for a Tcp connection, created by a `Server` and given to a `Handler`.",null,null],[12,"version","","The HTTP version of this response.",119,null],[11,"fmt","","",119,null],[11,"status","","The status of this response.",119,null],[11,"headers","","The headers of this response.",119,null],[11,"construct","","Construct a Response from its constituent parts.",119,{"inputs":[{"name":"httpversion"},{"name":"httpwriter"},{"name":"statuscode"},{"name":"headers"}],"output":{"name":"response"}}],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",119,null],[11,"new","","Creates a new Response that can be used to write to a network stream.",119,{"inputs":[{"name":"write"},{"name":"headers"}],"output":{"name":"response"}}],[11,"send","","Writes the body and ends the response.",119,null],[11,"start","","Consume this Response&lt;Fresh&gt;, writing the Headers and Status and\ncreating a Response&lt;Streaming&gt;",119,null],[11,"status_mut","","Get a mutable reference to the status.",119,null],[11,"headers_mut","","Get a mutable reference to the Headers.",119,null],[11,"end","","Flushes all writing of a response to the client.",119,null],[11,"write","","",119,null],[11,"flush","","",119,null],[11,"drop","","",119,null],[8,"Handler","hyper::server","A handler that can handle incoming requests for a server.",null,null],[10,"handle","","Receives a `Request`/`Response` pair, and should perform some action on them.",120,null],[11,"check_continue","","Called when a Request includes a `Expect: 100-continue` header.",120,null],[11,"on_connection_start","","This is run after a connection is received, on a per-connection basis (not a\nper-request basis, as a connection with keep-alive may handle multiple\nrequests)",120,null],[11,"on_connection_end","","This is run before a connection is closed, on a per-connection basis (not a\nper-request basis, as a connection with keep-alive may handle multiple\nrequests)",120,null],[11,"fmt","","",121,null],[11,"new","","Creates a new server with the provided handler.",121,{"inputs":[{"name":"l"}],"output":{"name":"server"}}],[11,"keep_alive","","Controls keep-alive for this server.",121,null],[11,"set_read_timeout","","Sets the read timeout for all Request reads.",121,null],[11,"set_write_timeout","","Sets the write timeout for all Response writes.",121,null],[11,"http","","Creates a new server that will handle `HttpStream`s.",121,{"inputs":[{"name":"to"}],"output":{"name":"result"}}],[11,"https","","Creates a new server that will handle `HttpStream`s over SSL.",121,{"inputs":[{"name":"a"},{"name":"s"}],"output":{"name":"result"}}],[11,"handle","","Binds to a socket and starts handling connections.",121,null],[11,"handle_threads","","Binds to a socket and starts handling connections with the provided\nnumber of threads.",121,null],[11,"fmt","","",117,null],[11,"drop","","",117,null],[11,"close","","Warning: This function doesn&#39;t work. The server remains listening after you called\nit. See https://github.com/hyperium/hyper/issues/338 for more details.",117,null],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",122,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",122,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",122,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",122,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",122,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",122,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",122,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",122,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",122,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",122,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",122,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",122,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",122,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",122,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",122,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",122,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",122,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",122,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",122,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",122,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",122,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",122,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",122,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",122,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",122,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",122,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",122,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",122,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",122,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",122,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",122,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",122,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",122,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",122,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",122,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",122,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",122,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",122,null],[13,"ImATeapot","","418 I&#39;m a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",122,null],[13,"MisdirectedRequest","","421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)",122,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",122,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]",122,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",122,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",122,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",122,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",122,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",122,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",122,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",122,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",122,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",122,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",122,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",122,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",122,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",123,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",123,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",123,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",123,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",123,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",123,null],[11,"fmt","","",122,null],[11,"hash","","",122,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",122,null],[11,"class","","Determine the class of a status code, based on its first digit.",122,null],[11,"is_informational","","Check if class is Informational.",122,null],[11,"is_success","","Check if class is Success.",122,null],[11,"is_redirection","","Check if class is Redirection.",122,null],[11,"is_client_error","","Check if class is ClientError.",122,null],[11,"is_server_error","","Check if class is ServerError.",122,null],[11,"is_strange_status","","Check if class is NoClass",122,null],[11,"fmt","","",122,null],[11,"eq","","",122,null],[11,"clone","","",122,null],[11,"partial_cmp","","",122,null],[11,"cmp","","",122,null],[11,"fmt","","",123,null],[11,"clone","","",123,null],[11,"eq","","",123,null],[11,"partial_cmp","","",123,null],[11,"cmp","","",123,null],[11,"default_code","","Get the default status code for the class.",123,null],[0,"uri","hyper","HTTP RequestUris",null,null],[4,"RequestUri","hyper::uri","The Request-URI of a Request&#39;s StartLine.",null,null],[13,"AbsolutePath","","The most common request target, an absolute path and optional query.",124,null],[13,"AbsoluteUri","","An absolute URI. Used in conjunction with proxies.",124,null],[13,"Authority","","The authority form is only for use with `CONNECT` requests.",124,null],[13,"Star","","The star is used to target the entire server, instead of a specific resource.",124,null],[11,"fmt","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"from_str","","",124,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",124,null],[0,"version","hyper","HTTP Versions enum",null,null],[4,"HttpVersion","hyper::version","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",125,null],[13,"Http10","","`HTTP/1.0`",125,null],[13,"Http11","","`HTTP/1.1`",125,null],[13,"Http20","","`HTTP/2.0`",125,null],[11,"eq","","",125,null],[11,"partial_cmp","","",125,null],[11,"clone","","",125,null],[11,"cmp","","",125,null],[11,"hash","","",125,null],[11,"fmt","","",125,null],[11,"fmt","","",125,null],[0,"mime","hyper","Re-exporting the mime crate, for convenience.",null,null],[14,"header","","",null,null],[11,"parse","","Parse an URL with the default `UrlParser` parameters.",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",0,null],[11,"serialize","","Return the serialization of this URL as a string.",0,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",0,null],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",0,null],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",0,null],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",0,null],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",0,null],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",0,null],[11,"username","","If the URL is in a *relative scheme*, return its username.",0,null],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",0,null],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",0,null],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",0,null],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",0,null],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",0,null],[11,"serialize_userinfo","","Serialize the URL&#39;s username and password, if any.",0,null],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",0,null],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",0,null],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",0,null],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",0,null],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",0,null],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",0,null],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",0,null],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",0,null],[11,"path","","If the URL is in a *relative scheme*, return its path components.",0,null],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",0,null],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",0,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",0,null],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",0,null],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",0,null],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",0,null],[11,"join","","Join a path with a base URL.",0,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"languagetag"}}],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"encode","","",0,null],[11,"cmp","","",0,null],[11,"clone","","",0,null],[11,"hash","","",0,null],[11,"from_str","hyper::header","",14,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"matches","hyper","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",1,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",1,null],[11,"canonicalize","","Returns the canonical version of the language tag.",1,null],[11,"new","hyper::header","",14,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",14,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",14,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",126,null],[11,"add_original","","Adds an original cookie from a request.",126,null],[11,"add","","Adds a new cookie to this cookie jar.",126,null],[11,"remove","","Removes a cookie from this cookie jar.",126,null],[11,"find","","Finds a cookie inside of this cookie jar.",126,null],[11,"signed","","Creates a child signed cookie jar.",126,null],[11,"encrypted","","Creates a child encrypted cookie jar.",126,null],[11,"permanent","","Creates a child jar for permanent cookie storage.",126,null],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",126,null],[11,"iter","","Return an iterator over the cookies in this jar.",126,null]],"paths":[[3,"Url"],[3,"LanguageTag"],[4,"Body"],[4,"RedirectPolicy"],[3,"Config"],[3,"Pool"],[3,"PooledStream"],[3,"Request"],[3,"Response"],[8,"IntoUrl"],[3,"Client"],[3,"RequestBuilder"],[4,"Error"],[4,"Method"],[3,"CookiePair"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"Host"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Location"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"UserAgent"],[3,"HeaderFormatter"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ProtocolName"],[4,"Vary"],[3,"AccessControlAllowCredentials"],[3,"ExtendedValue"],[8,"Scheme"],[8,"Header"],[8,"HeaderFormat"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"RawStatus"],[3,"Incoming"],[4,"HttpReader"],[4,"HttpWriter"],[3,"Http11Message"],[3,"Http11Protocol"],[3,"EndError"],[3,"Http2Protocol"],[3,"Http2Message"],[3,"RequestHead"],[3,"ResponseHead"],[8,"Protocol"],[8,"HttpMessage"],[3,"Openssl"],[3,"HttpStream"],[4,"HttpsStream"],[8,"NetworkListener"],[8,"NetworkStream"],[8,"NetworkConnector"],[8,"Ssl"],[8,"SslClient"],[8,"SslServer"],[3,"NetworkConnections"],[3,"HttpListener"],[3,"HttpConnector"],[3,"HttpsListener"],[3,"HttpsConnector"],[3,"Listening"],[3,"Request"],[3,"Response"],[8,"Handler"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[3,"CookieJar"]]};
searchIndex["cookie"] = {"doc":"","items":[[3,"CookieJar","cookie","A jar of cookies for managing a session",null,null],[3,"Cookie","","",null,null],[12,"name","","",0,null],[12,"value","","",0,null],[12,"expires","","",0,null],[12,"max_age","","",0,null],[12,"domain","","",0,null],[12,"path","","",0,null],[12,"secure","","",0,null],[12,"httponly","","",0,null],[12,"custom","","",0,null],[3,"AttrVal","","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"new","","Creates a new empty cookie jar with the given signing key.",2,null],[11,"add_original","","Adds an original cookie from a request.",2,null],[11,"add","","Adds a new cookie to this cookie jar.",2,null],[11,"remove","","Removes a cookie from this cookie jar.",2,null],[11,"find","","Finds a cookie inside of this cookie jar.",2,null],[11,"signed","","Creates a child signed cookie jar.",2,null],[11,"encrypted","","Creates a child encrypted cookie jar.",2,null],[11,"permanent","","Creates a child jar for permanent cookie storage.",2,null],[11,"delta","","Calculates the changes that have occurred to this cookie jar over time,\nreturning a vector of `Set-Cookie` headers.",2,null],[11,"iter","","Return an iterator over the cookies in this jar.",2,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"new","","",0,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"cookie"}}],[11,"parse","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pair","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Cookie"],[3,"AttrVal"],[3,"CookieJar"]]};
searchIndex["chrono"] = {"doc":"# Chrono 0.2.25","items":[[3,"Duration","chrono","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[4,"Weekday","","The day of week.",null,null],[13,"Mon","","Monday.",0,null],[13,"Tue","","Tuesday.",0,null],[13,"Wed","","Wednesday.",0,null],[13,"Thu","","Thursday.",0,null],[13,"Fri","","Friday.",0,null],[13,"Sat","","Saturday.",0,null],[13,"Sun","","Sunday.",0,null],[0,"duration","","ISO 8601 duration.",null,null],[3,"Duration","chrono::duration","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[0,"offset","chrono","The time zone, which calculates offsets from the local time to UTC.",null,null],[4,"LocalResult","chrono::offset","The conversion result from the local time to the timezone-aware datetime types.",null,null],[13,"None","","Given local time representation is invalid.\nThis can occur when, for example, the positive timezone transition.",1,null],[13,"Single","","Given local time representation has a single unique result.",1,null],[13,"Ambiguous","","Given local time representation has multiple results and thus ambiguous.\nThis can occur when, for example, the negative timezone transition.",1,null],[0,"utc","","The UTC (Coordinated Universal Time) time zone.",null,null],[3,"UTC","chrono::offset::utc","The UTC time zone. This is the most efficient time zone when you don&#39;t need the local time.\nIt is also used as an offset (which is also a dummy type).",null,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"today","","Returns a `Date` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",2,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",2,{"inputs":[{"name":"utc"}],"output":{"name":"utc"}}],[11,"offset_from_local_date","","",2,null],[11,"offset_from_local_datetime","","",2,null],[11,"offset_from_utc_date","","",2,null],[11,"offset_from_utc_datetime","","",2,null],[11,"local_minus_utc","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[0,"fixed","chrono::offset","The time zone which has a fixed offset from UTC.",null,null],[3,"FixedOffset","chrono::offset::fixed","The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"east","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\nThe negative `secs` means the Western Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"fixedoffset"}}],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\nThe negative `secs` means the Eastern Hemisphere.",3,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_offset","","",3,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"fixedoffset"}}],[11,"offset_from_local_date","","",3,null],[11,"offset_from_local_datetime","","",3,null],[11,"offset_from_utc_date","","",3,null],[11,"offset_from_utc_datetime","","",3,null],[11,"local_minus_utc","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"local","chrono::offset","The local (system) time zone.",null,null],[3,"Local","chrono::offset::local","The local timescale. This is implemented via the standard `time` crate.",null,null],[11,"clone","","",4,null],[11,"today","","Returns a `Date` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"date"}}],[11,"now","","Returns a `DateTime` which corresponds to the current date.",4,{"inputs":[],"output":{"name":"datetime"}}],[11,"from_offset","","",4,{"inputs":[{"name":"fixedoffset"}],"output":{"name":"local"}}],[11,"offset_from_local_date","","",4,null],[11,"offset_from_local_datetime","","",4,null],[11,"offset_from_utc_date","","",4,null],[11,"offset_from_utc_datetime","","",4,null],[11,"from_local_date","","",4,null],[11,"from_local_datetime","","",4,null],[11,"from_utc_date","","",4,null],[11,"from_utc_datetime","","",4,null],[8,"Offset","chrono::offset","The offset from the local time to UTC.",null,null],[10,"local_minus_utc","","Returns the offset from UTC to the local time stored.",5,null],[8,"TimeZone","","The time zone.",null,null],[16,"Offset","","An associated offset type.\nThis type is used to store the actual offset in date and time types.\nThe original `TimeZone` value can be recovered via `TimeZone::from_offset`.",6,null],[11,"ymd","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"ymd_opt","","Makes a new `Date` from year, month, day and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"yo_opt","","Makes a new `Date` from year, day of year (DOY or &quot;ordinal&quot;) and the current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.",6,null],[11,"isoywd","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"isoywd_opt","","Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\nthe current time zone.\nThis assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\nThe resulting `Date` may have a different year from the input year.",6,null],[11,"timestamp","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"timestamp_opt","","Makes a new `DateTime` from the number of non-leap seconds\nsince January 1, 1970 0:00:00 UTC (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",6,null],[11,"datetime_from_str","","Parses a string with the specified format string and\nreturns a `DateTime` with the current offset.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",6,null],[10,"from_offset","","Reconstructs the time zone from the offset.",6,{"inputs":[{"name":"offset"}],"output":{"name":"self"}}],[10,"offset_from_local_date","","Creates the offset(s) for given local `NaiveDate` if possible.",6,null],[10,"offset_from_local_datetime","","Creates the offset(s) for given local `NaiveDateTime` if possible.",6,null],[11,"from_local_date","","Converts the local `NaiveDate` to the timezone-aware `Date` if possible.",6,null],[11,"from_local_datetime","","Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.",6,null],[10,"offset_from_utc_date","","Creates the offset for given UTC `NaiveDate`. This cannot fail.",6,null],[10,"offset_from_utc_datetime","","Creates the offset for given UTC `NaiveDateTime`. This cannot fail.",6,null],[11,"from_utc_date","","Converts the UTC `NaiveDate` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"from_utc_datetime","","Converts the UTC `NaiveDateTime` to the local time.\nThe UTC is continuous and thus this cannot fail (but can give the duplicate local time).",6,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"single","","Returns `Some` only when the conversion result is unique, or `None` otherwise.",1,null],[11,"earliest","","Returns `Some` for the earliest possible conversion result, or `None` if none.",1,null],[11,"latest","","Returns `Some` for the latest possible conversion result, or `None` if none.",1,null],[11,"map","","Maps a `LocalResult&lt;T&gt;` into `LocalResult&lt;U&gt;` with given function.",1,null],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",1,null],[11,"unwrap","","Returns the single unique conversion result, or panics accordingly.",1,null],[0,"naive","chrono","Date and time types which do not concern about the timezones.",null,null],[0,"date","chrono::naive","ISO 8601 calendar date without timezone.",null,null],[3,"NaiveDate","chrono::naive::date","ISO 8601 calendar date without timezone.\nAllows for every [proleptic Gregorian date](./index.html#calendar-date)\nfrom Jan 1, 262145 BCE to Dec 31, 262143 CE.\nAlso supports the conversion from ISO 8601 ordinal and week date.",null,null],[11,"serialize","","",7,null],[11,"deserialize","","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[17,"MIN","","The minimum possible `NaiveDate` (January 1, 262145 BCE).",null,null],[17,"MAX","","The maximum possible `NaiveDate` (December 31, 262143 CE).",null,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"clone","","",7,null],[11,"from_ymd","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the [calendar date](./index.html#calendar-date)\n(year, month and day).",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_yo","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"naivedate"}}],[11,"from_yo_opt","","Makes a new `NaiveDate` from the [ordinal date](./index.html#ordinal-date)\n(year and day of the year).",7,{"inputs":[{"name":"i32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_isoywd","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"naivedate"}}],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the [ISO week date](./index.html#week-date)\n(year, week number and day of the week).\nThe resulting `NaiveDate` may have a different year from the input year.",7,{"inputs":[{"name":"i32"},{"name":"u32"},{"name":"weekday"}],"output":{"name":"option"}}],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"naivedate"}}],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from the number of days since January 1, 1 (Day 1)\nin the proleptic Gregorian calendar.",7,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDate`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.",7,null],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute and second.",7,null],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.",7,null],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.",7,null],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.",7,null],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",7,null],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",7,null],[11,"checked_add","","Adds the `days` part of given `Duration` to the current date.",7,null],[11,"checked_sub","","Subtracts the `days` part of given `Duration` from the current date.",7,null],[11,"format_with_items","","Formats the date with the specified formatting items.\nOtherwise it is same to the ordinary `format` method.",7,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",7,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",7,null],[11,"month","","Returns the month number starting from 1.",7,null],[11,"month0","","Returns the month number starting from 0.",7,null],[11,"day","","Returns the day of month starting from 1.",7,null],[11,"day0","","Returns the day of month starting from 0.",7,null],[11,"ordinal","","Returns the day of year starting from 1.",7,null],[11,"ordinal0","","Returns the day of year starting from 0.",7,null],[11,"weekday","","Returns the day of week.",7,null],[11,"isoweekdate","","",7,null],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",7,null],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting from 1) changed.",7,null],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting from 0) changed.",7,null],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting from 1) changed.",7,null],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting from 0) changed.",7,null],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting from 1) changed.",7,null],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting from 0) changed.",7,null],[11,"hash","","",7,null],[11,"add","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"time","chrono::naive","ISO 8601 time without timezone.",null,null],[3,"NaiveTime","chrono::naive::time","ISO 8601 time without timezone.\nAllows for the nanosecond precision and optional leap second representation.",null,null],[11,"serialize","","",8,null],[11,"deserialize","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",8,null],[11,"ne","","",8,null],[11,"partial_cmp","","",8,null],[11,"lt","","",8,null],[11,"le","","",8,null],[11,"gt","","",8,null],[11,"ge","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and millisecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and microsecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"naivetime"}}],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.",8,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"format_with_items","","Formats the time with the specified formatting items.\nOtherwise it is same to the ordinary [`format`](#method.format) method.",8,null],[11,"format","","Formats the time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",8,null],[11,"hour","","Returns the hour number from 0 to 23.",8,null],[11,"minute","","Returns the minute number from 0 to 59.",8,null],[11,"second","","Returns the second number from 0 to 59.",8,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",8,null],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",8,null],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",8,null],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",8,null],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.",8,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",8,null],[11,"hash","","",8,null],[11,"add","","",8,null],[11,"sub","","",8,null],[11,"sub","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"datetime","chrono::naive","ISO 8601 date and time without timezone.",null,null],[3,"NaiveDateTime","chrono::naive::datetime","ISO 8601 combined date and time without timezone.",null,null],[11,"serialize","","",9,null],[11,"deserialize","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"cmp","","",9,null],[11,"clone","","",9,null],[11,"new","","Makes a new `NaiveDateTime` from date and time components.\nEquivalent to `date.and_time(time)` and many other helper constructors on `NaiveDate`.",9,{"inputs":[{"name":"naivedate"},{"name":"naivetime"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` from the number of non-leap seconds\nsince the midnight UTC on January 1, 1970 (aka &quot;UNIX timestamp&quot;)\nand the number of nanoseconds since the last whole non-leap second.",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"from_num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp`](#method.from_timestamp).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"naivedatetime"}}],[11,"from_num_seconds_from_unix_epoch_opt","","*Deprecated:* Same to [`NaiveDateTime::from_timestamp_opt`](#method.from_timestamp_opt).",9,{"inputs":[{"name":"i64"},{"name":"u32"}],"output":{"name":"option"}}],[11,"parse_from_str","","Parses a string with the specified format string and returns a new `NaiveDateTime`.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"date","","Retrieves a date component.",9,null],[11,"time","","Retrieves a time component.",9,null],[11,"timestamp","","Returns the number of non-leap seconds since the midnight on January 1, 1970.",9,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole non-leap second.",9,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole non-leap second.",9,null],[11,"num_seconds_from_unix_epoch","","*Deprecated:* Same to [`NaiveDateTime::timestamp`](#method.timestamp).",9,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",9,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",9,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",9,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../../format/strftime/index.html)\non the supported escape sequences.",9,null],[11,"year","","Returns the year number in the [calendar date](./index.html#calendar-date).",9,null],[11,"month","","Returns the month number starting from 1.",9,null],[11,"month0","","Returns the month number starting from 0.",9,null],[11,"day","","Returns the day of month starting from 1.",9,null],[11,"day0","","Returns the day of month starting from 0.",9,null],[11,"ordinal","","Returns the day of year starting from 1.",9,null],[11,"ordinal0","","Returns the day of year starting from 0.",9,null],[11,"weekday","","Returns the day of week.",9,null],[11,"isoweekdate","","",9,null],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",9,null],[11,"with_month","","Makes a new `NaiveDateTime` with the month number (starting from 1) changed.",9,null],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number (starting from 0) changed.",9,null],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.",9,null],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.",9,null],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.",9,null],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.",9,null],[11,"hour","","Returns the hour number from 0 to 23.",9,null],[11,"minute","","Returns the minute number from 0 to 59.",9,null],[11,"second","","Returns the second number from 0 to 59.",9,null],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",9,null],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",9,null],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",9,null],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",9,null],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.",9,null],[11,"hash","","",9,null],[11,"add","","",9,null],[11,"sub","","",9,null],[11,"sub","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"date","chrono","ISO 8601 calendar date with time zone.",null,null],[3,"Date","chrono::date","ISO 8601 calendar date with time zone.",null,null],[17,"MIN","","The minimum possible `Date`.",null,null],[17,"MAX","","The maximum possible `Date`.",null,null],[11,"clone","","",10,null],[11,"from_utc","","Makes a new `Date` with given *UTC* date and offset.\nThe local date should be constructed via the `TimeZone` trait.",10,{"inputs":[{"name":"naivedate"},{"name":"offset"}],"output":{"name":"date"}}],[11,"and_time","","Makes a new `DateTime` from the current date and given `NaiveTime`.\nThe offset in the current date is preserved.",10,null],[11,"and_hms","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_opt","","Makes a new `DateTime` from the current date, hour, minute and second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_milli_opt","","Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\nThe millisecond part can exceed 1,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_micro_opt","","Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\nThe microsecond part can exceed 1,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"and_hms_nano_opt","","Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\nThe nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\nThe offset in the current date is preserved.",10,null],[11,"succ","","Makes a new `Date` for the next date.",10,null],[11,"succ_opt","","Makes a new `Date` for the next date.",10,null],[11,"pred","","Makes a new `Date` for the prior date.",10,null],[11,"pred_opt","","Makes a new `Date` for the prior date.",10,null],[11,"offset","","Retrieves an associated offset from UTC.",10,null],[11,"timezone","","Retrieves an associated time zone.",10,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `Date` (but will change the string representation).",10,null],[11,"checked_add","","Adds given `Duration` to the current date.",10,null],[11,"checked_sub","","Subtracts given `Duration` from the current date.",10,null],[11,"naive_utc","","Returns a view to the naive UTC date.",10,null],[11,"naive_local","","Returns a view to the naive local date.",10,null],[11,"format_with_items","","Formats the date with the specified formatting items.",10,null],[11,"format","","Formats the date with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",10,null],[11,"year","","",10,null],[11,"month","","",10,null],[11,"month0","","",10,null],[11,"day","","",10,null],[11,"day0","","",10,null],[11,"ordinal","","",10,null],[11,"ordinal0","","",10,null],[11,"weekday","","",10,null],[11,"isoweekdate","","",10,null],[11,"with_year","","",10,null],[11,"with_month","","",10,null],[11,"with_month0","","",10,null],[11,"with_day","","",10,null],[11,"with_day0","","",10,null],[11,"with_ordinal","","",10,null],[11,"with_ordinal0","","",10,null],[11,"eq","","",10,null],[11,"partial_cmp","","",10,null],[11,"cmp","","",10,null],[11,"hash","","",10,null],[11,"add","","",10,null],[11,"sub","","",10,null],[11,"sub","","",10,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[0,"datetime","chrono","ISO 8601 date and time with time zone.",null,null],[3,"DateTime","chrono::datetime","ISO 8601 combined date and time with time zone.",null,null],[11,"serialize","","",11,null],[11,"deserialize","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"deserialize","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",11,null],[11,"from_utc","","Makes a new `DateTime` with given *UTC* datetime and offset.\nThe local datetime should be constructed via the `TimeZone` trait.",11,{"inputs":[{"name":"naivedatetime"},{"name":"offset"}],"output":{"name":"datetime"}}],[11,"date","","Retrieves a date component.",11,null],[11,"time","","Retrieves a time component.\nUnlike `date`, this is not associated to the time zone.",11,null],[11,"timestamp","","Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n(aka &quot;UNIX timestamp&quot;).",11,null],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second boundary",11,null],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second boundary",11,null],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second boundary",11,null],[11,"num_seconds_from_unix_epoch","","*Deprecated*: Same to `DateTime::timestamp`.",11,null],[11,"offset","","Retrieves an associated offset from UTC.",11,null],[11,"timezone","","Retrieves an associated time zone.",11,null],[11,"with_timezone","","Changes the associated time zone.\nThis does not change the actual `DateTime` (but will change the string representation).",11,null],[11,"checked_add","","Adds given `Duration` to the current date and time.",11,null],[11,"checked_sub","","Subtracts given `Duration` from the current date and time.",11,null],[11,"naive_utc","","Returns a view to the naive UTC datetime.",11,null],[11,"naive_local","","Returns a view to the naive local datetime.",11,null],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\nthen returns a new `DateTime` with a parsed `FixedOffset`.",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"parse_from_str","","Parses a string with the specified format string and\nreturns a new `DateTime` with a parsed `FixedOffset`.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"parseresult"}}],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.",11,null],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.",11,null],[11,"format_with_items","","Formats the combined date and time with the specified formatting items.",11,null],[11,"format","","Formats the combined date and time with the specified format string.\nSee the [`format::strftime` module](../format/strftime/index.html)\non the supported escape sequences.",11,null],[11,"year","","",11,null],[11,"month","","",11,null],[11,"month0","","",11,null],[11,"day","","",11,null],[11,"day0","","",11,null],[11,"ordinal","","",11,null],[11,"ordinal0","","",11,null],[11,"weekday","","",11,null],[11,"isoweekdate","","",11,null],[11,"with_year","","",11,null],[11,"with_month","","",11,null],[11,"with_month0","","",11,null],[11,"with_day","","",11,null],[11,"with_day0","","",11,null],[11,"with_ordinal","","",11,null],[11,"with_ordinal0","","",11,null],[11,"hour","","",11,null],[11,"minute","","",11,null],[11,"second","","",11,null],[11,"nanosecond","","",11,null],[11,"with_hour","","",11,null],[11,"with_minute","","",11,null],[11,"with_second","","",11,null],[11,"with_nanosecond","","",11,null],[11,"eq","","",11,null],[11,"partial_cmp","","",11,null],[11,"cmp","","",11,null],[11,"hash","","",11,null],[11,"add","","",11,null],[11,"sub","","",11,null],[11,"sub","","",11,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_str","","",11,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[0,"format","chrono","Formatting utilities for date and time.",null,null],[3,"ParseError","chrono::format","An error from the `parse` function.",null,null],[3,"DelayedFormat","","A *temporary* object which can be used as an argument to `format!` or others.\nThis is normally constructed via `format` methods of each date and time type.",null,null],[4,"Pad","","Padding characters for numeric items.",null,null],[13,"None","","No padding.",12,null],[13,"Zero","","Zero (`0`) padding.",12,null],[13,"Space","","Space padding.",12,null],[4,"Numeric","","Numeric item types.\nThey have associated formatting width (FW) and parsing width (PW).",null,null],[13,"Year","","Full Gregorian year (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"YearDiv100","","Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.",13,null],[13,"YearMod100","","Gregorian year modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"IsoYear","","Year in the ISO week date (FW=4, PW=∞).\nMay accept years before 1 BCE or after 9999 CE, given an initial sign.",13,null],[13,"IsoYearDiv100","","Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.",13,null],[13,"IsoYearMod100","","Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.",13,null],[13,"Month","","Month (FW=PW=2).",13,null],[13,"Day","","Day of the month (FW=PW=2).",13,null],[13,"WeekFromSun","","Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).",13,null],[13,"WeekFromMon","","Week number, where the week 1 starts at the first Monday of January (FW=PW=2).",13,null],[13,"IsoWeek","","Week number in the ISO week date (FW=PW=2).",13,null],[13,"NumDaysFromSun","","Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).",13,null],[13,"WeekdayFromMon","","Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).",13,null],[13,"Ordinal","","Day of the year (FW=PW=3).",13,null],[13,"Hour","","Hour number in the 24-hour clocks (FW=PW=2).",13,null],[13,"Hour12","","Hour number in the 12-hour clocks (FW=PW=2).",13,null],[13,"Minute","","The number of minutes since the last whole hour (FW=PW=2).",13,null],[13,"Second","","The number of seconds since the last whole minute (FW=PW=2).",13,null],[13,"Nanosecond","","The number of nanoseconds since the last whole second (FW=PW=9).\nNote that this is *not* left-aligned;\nsee also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).",13,null],[13,"Timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\nFor formatting, it assumes UTC upon the absence of time zone offset.",13,null],[4,"Fixed","","Fixed-format item types.",null,null],[13,"ShortMonthName","","Abbreviated month names.",14,null],[13,"LongMonthName","","Full month names.",14,null],[13,"ShortWeekdayName","","Abbreviated day of the week names.",14,null],[13,"LongWeekdayName","","Full day of the week names.",14,null],[13,"LowerAmPm","","AM/PM.",14,null],[13,"UpperAmPm","","AM/PM.",14,null],[13,"Nanosecond","","An optional dot plus one or more digits for left-aligned nanoseconds.\nMay print nothing, 3, 6 or 9 digits according to the available accuracy.\nSee also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).",14,null],[13,"Nanosecond3","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.",14,null],[13,"Nanosecond6","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.",14,null],[13,"Nanosecond9","","Same to [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.",14,null],[13,"TimezoneName","","Timezone name.",14,null],[13,"TimezoneOffsetColon","","Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).",14,null],[13,"TimezoneOffsetColonZ","","Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).",14,null],[13,"TimezoneOffset","","Same to [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"TimezoneOffsetZ","","Same to [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\nParsing allows an optional colon.",14,null],[13,"RFC2822","","RFC 2822 date and time syntax. Commonly used for email and MIME date and time.",14,null],[13,"RFC3339","","RFC 3339 &amp; ISO 8601 date and time syntax.",14,null],[4,"Item","","A single formatting item. This is used for both formatting and parsing.",null,null],[13,"Literal","","A literally printed and parsed text.",15,null],[13,"Space","","Whitespace. Prints literally but reads zero or more whitespace.",15,null],[13,"Numeric","","Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\nthe parser simply ignores any padded whitespace and zeroes.",15,null],[13,"Fixed","","Fixed-format item.",15,null],[13,"Error","","Issues a formatting error. Used to signal an invalid format string.",15,null],[5,"parse","","Tries to parse given string into `parsed` with given formatting items.\nReturns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\nThere should be no trailing string after parsing;\nuse a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.",null,{"inputs":[{"name":"parsed"},{"name":"str"},{"name":"i"}],"output":{"name":"parseresult"}}],[5,"format","","Tries to format given arguments with given formatting items.\nInternally used by `DelayedFormat`.",null,{"inputs":[{"name":"formatter"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"result"}}],[0,"parsed","","A collection of parsed date and time items.\nThey can be constructed incrementally while being checked for consistency.",null,null],[3,"Parsed","chrono::format::parsed","Parsed parts of date and time. There are two classes of methods:",null,null],[12,"year","","Year.",16,null],[12,"year_div_100","","Year divided by 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"year_mod_100","","Year modulo 100. Implies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear","","Year in the [ISO week date](../../naive/date/index.html#week-date).",16,null],[12,"isoyear_div_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), divided by 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"isoyear_mod_100","","Year in the [ISO week date](../../naive/date/index.html#week-date), modulo 100.\nImplies that the year is &gt;= 1 BCE when set.",16,null],[12,"month","","Month (1--12).",16,null],[12,"week_from_sun","","Week number, where the week 1 starts at the first Sunday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"week_from_mon","","Week number, where the week 1 starts at the first Monday of January\n(0--53, 1--53 or 1--52 depending on the year).",16,null],[12,"isoweek","","[ISO week number](../../naive/date/index.html#week-date)\n(1--52 or 1--53 depending on the year).",16,null],[12,"weekday","","Day of the week.",16,null],[12,"ordinal","","Day of the year (1--365 or 1--366 depending on the year).",16,null],[12,"day","","Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).",16,null],[12,"hour_div_12","","Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.",16,null],[12,"hour_mod_12","","Hour number modulo 12 (0--11).",16,null],[12,"minute","","Minute number (0--59).",16,null],[12,"second","","Second number (0--60, accounting for leap seconds).",16,null],[12,"nanosecond","","The number of nanoseconds since the whole second (0--999,999,999).",16,null],[12,"timestamp","","The number of non-leap seconds since the midnight UTC on January 1, 1970.",16,null],[12,"offset","","Offset from the local time to UTC, in seconds.",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"fmt","","",16,null],[11,"new","","Returns the initial value of parsed parts.",16,{"inputs":[],"output":{"name":"parsed"}}],[11,"set_year","","Tries to set the [`year`](#structfield.year) field from given value.",16,null],[11,"set_year_div_100","","Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.",16,null],[11,"set_year_mod_100","","Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.",16,null],[11,"set_isoyear","","Tries to set the [`isoyear`](#structfield.isoyear) field from given value.",16,null],[11,"set_isoyear_div_100","","Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.",16,null],[11,"set_isoyear_mod_100","","Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.",16,null],[11,"set_month","","Tries to set the [`month`](#structfield.month) field from given value.",16,null],[11,"set_week_from_sun","","Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.",16,null],[11,"set_week_from_mon","","Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.",16,null],[11,"set_isoweek","","Tries to set the [`isoweek`](#structfield.isoweek) field from given value.",16,null],[11,"set_weekday","","Tries to set the [`weekday`](#structfield.weekday) field from given value.",16,null],[11,"set_ordinal","","Tries to set the [`ordinal`](#structfield.ordinal) field from given value.",16,null],[11,"set_day","","Tries to set the [`day`](#structfield.day) field from given value.",16,null],[11,"set_ampm","","Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n(`false` for AM, `true` for PM)",16,null],[11,"set_hour12","","Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\ngiven hour number in 12-hour clocks.",16,null],[11,"set_hour","","Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n[`hour_mod_12`](#structfield.hour_mod_12) fields from given value.",16,null],[11,"set_minute","","Tries to set the [`minute`](#structfield.minute) field from given value.",16,null],[11,"set_second","","Tries to set the [`second`](#structfield.second) field from given value.",16,null],[11,"set_nanosecond","","Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.",16,null],[11,"set_timestamp","","Tries to set the [`timestamp`](#structfield.timestamp) field from given value.",16,null],[11,"set_offset","","Tries to set the [`offset`](#structfield.offset) field from given value.",16,null],[11,"to_naive_date","","Returns a parsed naive date out of given fields.",16,null],[11,"to_naive_time","","Returns a parsed naive time out of given fields.",16,null],[11,"to_naive_datetime_with_offset","","Returns a parsed naive date and time out of given fields,\nexcept for the [`offset`](#structfield.offset) field (assumed to have a given value).\nThis is required for parsing a local time or other known-timezone inputs.",16,null],[11,"to_fixed_offset","","Returns a parsed fixed time zone offset out of given fields.",16,null],[11,"to_datetime","","Returns a parsed timezone-aware date and time out of given fields.",16,null],[11,"to_datetime_with_timezone","","Returns a parsed timezone-aware date and time out of given fields,\nwith an additional `TimeZone` used to interpret and validate the local date.",16,null],[0,"strftime","chrono::format","`strftime`/`strptime`-inspired date and time formatting syntax.",null,null],[3,"StrftimeItems","chrono::format::strftime","Parsing iterator for `strftime`-like format strings.",null,null],[11,"clone","","",17,null],[11,"new","","Creates a new parsing iterator from the `strftime`-like format string.",17,{"inputs":[{"name":"str"}],"output":{"name":"strftimeitems"}}],[11,"next","","",17,null],[6,"ParseResult","chrono::format","Same to `Result&lt;T, ParseError&gt;`.",null,null],[11,"clone","","",12,null],[11,"eq","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"eq","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",14,null],[11,"eq","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",15,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"fmt","","",15,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"fmt","","",19,null],[11,"new","","Makes a new `DelayedFormat` value out of local date and time.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"new_with_offset","","Makes a new `DelayedFormat` value out of local date and time and UTC offset.",19,{"inputs":[{"name":"option"},{"name":"option"},{"name":"off"},{"name":"i"}],"output":{"name":"delayedformat"}}],[11,"fmt","","",19,null],[8,"Datelike","chrono","The common set of methods for date component.",null,null],[10,"year","","Returns the year number in the [calendar date](./naive/date/index.html#calendar-date).",20,null],[11,"year_ce","","Returns the absolute year number starting from 1 with a boolean flag,\nwhich is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).",20,null],[10,"month","","Returns the month number starting from 1.",20,null],[10,"month0","","Returns the month number starting from 0.",20,null],[10,"day","","Returns the day of month starting from 1.",20,null],[10,"day0","","Returns the day of month starting from 0.",20,null],[10,"ordinal","","Returns the day of year starting from 1.",20,null],[10,"ordinal0","","Returns the day of year starting from 0.",20,null],[10,"weekday","","Returns the day of week.",20,null],[10,"isoweekdate","","Returns the ISO week date: an adjusted year, week number and day of week.\nThe adjusted year may differ from that of the calendar date.",20,null],[10,"with_year","","Makes a new value with the year number changed.",20,null],[10,"with_month","","Makes a new value with the month number (starting from 1) changed.",20,null],[10,"with_month0","","Makes a new value with the month number (starting from 0) changed.",20,null],[10,"with_day","","Makes a new value with the day of month (starting from 1) changed.",20,null],[10,"with_day0","","Makes a new value with the day of month (starting from 0) changed.",20,null],[10,"with_ordinal","","Makes a new value with the day of year (starting from 1) changed.",20,null],[10,"with_ordinal0","","Makes a new value with the day of year (starting from 0) changed.",20,null],[11,"num_days_from_ce","","Returns the number of days since January 1, 1 (Day 1) in the proleptic Gregorian calendar.",20,null],[8,"Timelike","","The common set of methods for time component.",null,null],[10,"hour","","Returns the hour number from 0 to 23.",21,null],[11,"hour12","","Returns the hour number from 1 to 12 with a boolean flag,\nwhich is false for AM and true for PM.",21,null],[10,"minute","","Returns the minute number from 0 to 59.",21,null],[10,"second","","Returns the second number from 0 to 59.",21,null],[10,"nanosecond","","Returns the number of nanoseconds since the whole non-leap second.\nThe range from 1,000,000,000 to 1,999,999,999 represents\nthe [leap second](./naive/time/index.html#leap-second-handling).",21,null],[10,"with_hour","","Makes a new value with the hour number changed.",21,null],[10,"with_minute","","Makes a new value with the minute number changed.",21,null],[10,"with_second","","Makes a new value with the second number changed.",21,null],[10,"with_nanosecond","","Makes a new value with nanoseconds since the whole non-leap second changed.",21,null],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last midnight.",21,null],[11,"eq","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"succ","","The next day in the week.",0,null],[11,"pred","","The previous day in the week.",0,null],[11,"number_from_monday","","Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)",0,null],[11,"number_from_sunday","","Returns a day-of-week number starting from Sunday = 1.",0,null],[11,"num_days_from_monday","","Returns a day-of-week number starting from Monday = 0.",0,null],[11,"num_days_from_sunday","","Returns a day-of-week number starting from Sunday = 0.",0,null],[11,"from_i64","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_u64","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"weeks","chrono::duration","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",22,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",22,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",22,null],[11,"num_days","","Returns the total number of whole days in the duration.",22,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",22,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",22,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",22,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",22,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",22,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",22,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",22,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",22,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",22,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",22,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",22,{"inputs":[{"name":"duration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",22,null],[11,"partial_cmp","","",22,null],[11,"lt","","",22,null],[11,"le","","",22,null],[11,"gt","","",22,null],[11,"ge","","",22,null],[11,"add","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"fmt","","",22,null],[11,"fmt","","",22,null],[11,"sub","","",22,null],[11,"div","","",22,null],[11,"clone","","",22,null],[11,"cmp","","",22,null],[11,"neg","","",22,null],[11,"mul","","",22,null]],"paths":[[4,"Weekday"],[4,"LocalResult"],[3,"UTC"],[3,"FixedOffset"],[3,"Local"],[8,"Offset"],[8,"TimeZone"],[3,"NaiveDate"],[3,"NaiveTime"],[3,"NaiveDateTime"],[3,"Date"],[3,"DateTime"],[4,"Pad"],[4,"Numeric"],[4,"Fixed"],[4,"Item"],[3,"Parsed"],[3,"StrftimeItems"],[3,"ParseError"],[3,"DelayedFormat"],[8,"Datelike"],[8,"Timelike"],[3,"Duration"]]};
searchIndex["openssl"] = {"doc":"","items":[[0,"asn1","openssl","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"u32"}],"output":{"name":"result"}}],[11,"get_handle","","Returns raw handle",0,null],[11,"drop","","",0,null],[0,"bn","openssl","",null,null],[3,"BigNum","openssl::bn","A signed arbitrary-precision integer.",null,null],[4,"RNGProperty","","Specifies the desired properties of a randomly generated `BigNum`.",null,null],[13,"MsbMaybeZero","","The most significant bit of the number is allowed to be 0.",1,null],[13,"MsbOne","","The MSB should be set to 1.",1,null],[13,"TwoMsbOne","","The two most significant bits of the number will be set to 1, so that the product of two\nsuch random numbers will always have `2 * bits` length.",1,null],[11,"clone","","",2,null],[11,"neg","","",2,null],[11,"clone","","",1,null],[11,"new","","Creates a new `BigNum` with the value 0.",2,{"inputs":[],"output":{"name":"result"}}],[11,"new_from","","Creates a new `BigNum` with the given value.",2,{"inputs":[{"name":"u64"}],"output":{"name":"result"}}],[11,"from_dec_str","","Creates a `BigNum` from a decimal string.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","Creates a `BigNum` from a hexadecimal string.",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_ffi","","",2,null],[11,"new_from_slice","","Creates a new `BigNum` from an unsigned, big-endian encoded number of arbitrary length.",2,null],[11,"checked_sqr","","Returns the square of `self`.",2,null],[11,"checked_nnmod","","Returns the unsigned remainder of the division `self / n`.",2,null],[11,"checked_mod_add","","Equivalent to `(self + a) mod n`.",2,null],[11,"checked_mod_sub","","Equivalent to `(self - a) mod n`.",2,null],[11,"checked_mod_mul","","Equivalent to `(self * a) mod n`.",2,null],[11,"checked_mod_sqr","","Equivalent to `self² mod n`.",2,null],[11,"checked_exp","","Raises `self` to the `p`th power.",2,null],[11,"checked_mod_exp","","Equivalent to `self.checked_exp(p) mod n`.",2,null],[11,"checked_mod_inv","","Calculates the modular multiplicative inverse of `self` modulo `n`, that is, an integer `r`\nsuch that `(self * r) % n == 1`.",2,null],[11,"add_word","","Add an `unsigned long` to `self`. This is more efficient than adding a `BigNum`.",2,null],[11,"sub_word","","",2,null],[11,"mul_word","","",2,null],[11,"div_word","","",2,null],[11,"mod_word","","",2,null],[11,"checked_gcd","","Computes the greatest common denominator of `self` and `a`.",2,null],[11,"checked_generate_prime","","Generates a prime number.",2,{"inputs":[{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"is_prime","","Checks whether `self` is prime.",2,null],[11,"is_prime_fast","","Checks whether `self` is prime with optional trial division.",2,null],[11,"checked_new_random","","Generates a cryptographically strong pseudo-random `BigNum`.",2,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","The cryptographically weak counterpart to `checked_new_random`.",2,{"inputs":[{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_rand_in_range","","Generates a cryptographically strong pseudo-random `BigNum` `r` in the range\n`0 &lt;= r &lt; self`.",2,null],[11,"checked_pseudo_rand_in_range","","The cryptographically weak counterpart to `checked_rand_in_range`.",2,null],[11,"set_bit","","Sets bit `n`. Equivalent to `self |= (1 &lt;&lt; n)`.",2,null],[11,"clear_bit","","Clears bit `n`, setting it to 0. Equivalent to `self &amp;= ~(1 &lt;&lt; n)`.",2,null],[11,"is_bit_set","","Returns `true` if the `n`th bit of `self` is set to 1, `false` otherwise.",2,null],[11,"mask_bits","","Truncates `self` to the lowest `n` bits.",2,null],[11,"checked_shl1","","Returns `self`, shifted left by 1 bit. `self` may be negative.",2,null],[11,"checked_shr1","","Returns `self`, shifted right by 1 bit. `self` may be negative.",2,null],[11,"checked_add","","",2,null],[11,"checked_sub","","",2,null],[11,"checked_mul","","",2,null],[11,"checked_div","","",2,null],[11,"checked_mod","","",2,null],[11,"checked_shl","","",2,null],[11,"checked_shr","","",2,null],[11,"negate","","Inverts the sign of `self`.",2,null],[11,"abs_cmp","","Compare the absolute values of `self` and `oth`.",2,null],[11,"is_negative","","",2,null],[11,"num_bits","","Returns the number of significant bits in `self`.",2,null],[11,"num_bytes","","Returns the size of `self` in bytes.",2,null],[11,"raw","","",2,null],[11,"raw_ptr","","",2,null],[11,"into_raw","","",2,null],[11,"to_vec","","Returns a big-endian byte vector representation of the absolute value of `self`.",2,null],[11,"to_dec_str","","Returns a decimal string representation of `self`.",2,null],[11,"to_hex_str","","Returns a hexadecimal string representation of `self`.",2,null],[11,"fmt","","",2,null],[11,"eq","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"drop","","",2,null],[0,"bio","openssl","",null,null],[3,"MemBio","openssl::bio","",null,null],[11,"drop","","",3,null],[11,"new","","Creates a new owned memory based BIO",3,{"inputs":[],"output":{"name":"result"}}],[11,"borrowed","","Returns a &quot;borrow&quot;, i.e. it has no ownership",3,null],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3,null],[11,"get_handle","","Temporarily gets wrapped value",3,null],[11,"set_eof","","Sets the BIO&#39;s EOF state.",3,null],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,null],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",4,null],[13,"SHA1","","",4,null],[13,"SHA224","","",4,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[13,"SHA512","","",4,null],[13,"RIPEMD160","","",4,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",4,null],[11,"md_len","","Returns the length of the message digest.",4,null],[11,"evp_md","","Internal interface subject to removal.",4,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",5,{"inputs":[{"name":"type"}],"output":{"name":"hasher"}}],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5,null],[11,"write","","",5,null],[11,"flush","","",5,null],[11,"clone","","",5,null],[11,"drop","","",5,null],[0,"hmac","openssl::crypto","",null,null],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation.",null,null],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`.",null,null],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,null],[11,"write","","",6,null],[11,"flush","","",6,null],[11,"clone","","",6,null],[11,"drop","","",6,null],[0,"pkcs5","openssl::crypto","",null,null],[3,"KeyIvPair","openssl::crypto::pkcs5","",null,null],[12,"key","","",7,null],[12,"iv","","",7,null],[5,"evp_bytes_to_key_pbkdf1_compatible","","Derives a key and an IV from various parameters.",null,null],[5,"pbkdf2_hmac_sha1","","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"hash","","",7,null],[11,"fmt","","",7,null],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[4,"Parts","","",null,null],[13,"Neither","","",8,null],[13,"Public","","",8,null],[13,"Both","","",8,null],[4,"Role","","Represents a role an asymmetric key might be appropriate for.",null,null],[13,"Encrypt","","",9,null],[13,"Decrypt","","",9,null],[13,"Sign","","",9,null],[13,"Verify","","",9,null],[4,"EncryptionPadding","","Type of encryption padding to use.",null,null],[13,"OAEP","","",10,null],[13,"PKCS1v15","","",10,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"new","","",11,{"inputs":[],"output":{"name":"pkey"}}],[11,"from_handle","","",11,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_key_from_pem","","Reads public key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"private_rsa_key_from_pem","","Reads an RSA private key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_rsa_key_from_pem","","Reads an RSA public key from PEM, takes ownership of handle",11,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"gen","","",11,null],[11,"set_rsa","","assign RSA key to this pkey",11,null],[11,"get_rsa","","get a reference to the interal RSA key for direct access to the key components",11,null],[11,"save_pub","","Returns a DER serialized form of the public key, suitable for load_pub().",11,null],[11,"load_pub","","Loads a DER serialized form of the public key, as produced by save_pub().",11,null],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",11,null],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",11,null],[11,"write_pem","","Stores private key as a PEM",11,null],[11,"write_pub_pem","","Stores public key as a PEM",11,null],[11,"size","","Returns the size of the public key modulus.",11,null],[11,"can","","Returns whether this pkey object can perform the specified role.",11,null],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",11,null],[11,"private_encrypt_with_padding","","",11,null],[11,"public_encrypt_with_padding","","",11,null],[11,"private_decrypt_with_padding","","",11,null],[11,"public_decrypt_with_padding","","",11,null],[11,"encrypt","","Encrypts data with the public key, using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"encrypt_with_padding","","Encrypts data with the public key, using provided padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"public_encrypt","","Encrypts data with the public key, using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"public_decrypt","","Decrypts data with the public key, using PKCS1v15 padding, returning the decrypted data.",11,null],[11,"decrypt","","Decrypts data with the private key, expecting OAEP padding, returning the decrypted data.",11,null],[11,"decrypt_with_padding","","Decrypts data with the private key, using provided padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"private_decrypt","","Decrypts data with the private key, expecting OAEP padding, returning the decrypted data.",11,null],[11,"private_encrypt","","Encrypts data with the private key, using PKCS1v15 padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",11,null],[11,"sign","","Signs data, using OpenSSL&#39;s default scheme and adding sha256 ASN.1 information to the\nsignature.\nThe bytes to sign must be the result of a sha256 hashing;\nreturns the signature.",11,null],[11,"verify","","Verifies a signature s (using OpenSSL&#39;s default scheme and sha256) on the SHA256 hash of a\nmessage.\nReturns true if the signature is valid, and false otherwise.",11,null],[11,"sign_with_hash","","Signs data, using OpenSSL&#39;s default scheme and add ASN.1 information for the given hash type to the\nsignature.\nThe bytes to sign must be the result of this type of hashing;\nreturns the signature.",11,null],[11,"verify_with_hash","","",11,null],[11,"get_handle","","",11,null],[11,"public_eq","","",11,null],[11,"drop","","",11,null],[11,"clone","","",11,null],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",12,null],[13,"Decrypt","","",12,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",13,null],[13,"AES_128_CBC","","",13,null],[13,"AES_128_CFB1","","",13,null],[13,"AES_128_CFB128","","",13,null],[13,"AES_128_CFB8","","",13,null],[13,"AES_256_ECB","","",13,null],[13,"AES_256_CBC","","",13,null],[13,"AES_256_CFB1","","",13,null],[13,"AES_256_CFB128","","",13,null],[13,"AES_256_CFB8","","",13,null],[13,"DES_CBC","","",13,null],[13,"DES_ECB","","",13,null],[13,"RC4_128","","",13,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"new","","",14,{"inputs":[{"name":"type"}],"output":{"name":"crypter"}}],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",14,null],[11,"init","","Initializes this crypter.",14,null],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",14,null],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",14,null],[11,"drop","","",14,null],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"rsa","openssl::crypto","",null,null],[3,"RSA","openssl::crypto::rsa","",null,null],[11,"drop","","",15,null],[11,"from_public_components","","only useful for associating the key material directly with the key, it&#39;s safer to use\nthe supplied load and save methods for DER formatted keys.",15,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_private_components","","",15,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_raw","","the caller should assert that the rsa pointer is valid.",15,null],[11,"private_key_from_pem","","Reads an RSA private key from PEM formatted data.",15,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"private_key_to_pem","","Writes an RSA private key as unencrypted PEM formatted data",15,null],[11,"public_key_from_pem","","Reads an RSA public key from PEM formatted data.",15,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"public_key_to_pem","","Writes an RSA public key as PEM formatted data",15,null],[11,"size","","",15,null],[11,"sign","","",15,null],[11,"verify","","",15,null],[11,"as_ptr","","",15,null],[11,"n","","",15,null],[11,"has_n","","",15,null],[11,"d","","",15,null],[11,"e","","",15,null],[11,"has_e","","",15,null],[11,"p","","",15,null],[11,"q","","",15,null],[11,"fmt","","",15,null],[0,"dh","openssl","",null,null],[3,"DH","openssl::dh","",null,null],[11,"from_params","","",16,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"from_pem","","",16,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"raw","","",16,null],[11,"raw_ptr","","",16,null],[11,"drop","","",16,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContext","","An SSL context object",null,null],[3,"CipherBits","","",null,null],[12,"secret","","The number of secret bits used for the cipher.",17,null],[12,"algorithm","","The number of bits processed by the chosen algorithm, if not None.",17,null],[3,"SslCipher","","",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[3,"NonblockingSslStream","","# Deprecated",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",18,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",18,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",18,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",18,null],[13,"Stream","","An error reported by the underlying stream.",18,null],[13,"Ssl","","An error in the OpenSSL library.",18,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3, TLSv1, TLSv1.1, and TLSv1.2 protocols depending on what the\nlinked OpenSSL library supports.",19,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",19,null],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime.",null,null],[13,"Ssl","","A connection using SSL",20,null],[13,"Normal","","A connection not using SSL",20,null],[5,"init","","Manually initialize SSL.\nIt is optional to call this function and safe to do so more than once.",null,{"inputs":[],"output":null}],[0,"error","","",null,null],[3,"OpenSslError","openssl::ssl::error","An error reported from OpenSSL.",null,null],[4,"Error","","An SSL error.",null,null],[13,"ZeroReturn","","The SSL session has been closed by the other end",18,null],[13,"WantRead","","An attempt to read data from the underlying socket returned\n`WouldBlock`. Wait for read readiness and reattempt the operation.",18,null],[13,"WantWrite","","An attempt to write data from the underlying socket returned\n`WouldBlock`. Wait for write readiness and reattempt the operation.",18,null],[13,"WantX509Lookup","","The client certificate callback requested to be called again.",18,null],[13,"Stream","","An error reported by the underlying stream.",18,null],[13,"Ssl","","An error in the OpenSSL library.",18,null],[4,"SslError","","An SSL error",null,null],[13,"StreamError","","The underlying stream reported an error",21,null],[13,"SslSessionClosed","","The SSL session has been closed by the other end",21,null],[13,"OpenSslErrors","","An error in the OpenSSL library",21,null],[4,"NonblockingSslError","","An error on a nonblocking stream.",null,null],[13,"SslError","","A standard SSL error occurred.",22,null],[13,"WantRead","","The OpenSSL library wants data from the remote socket;\nthe caller should wait for read readiness.",22,null],[13,"WantWrite","","The OpenSSL library wants to send data to the remote socket;\nthe caller should wait for write readiness.",22,null],[4,"OpensslError","","An error from the OpenSSL library",null,null],[13,"UnknownError","","An unknown error",23,null],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",23,null],[12,"function","","The function reporting the error",23,null],[12,"reason","","The reason for the error",23,null],[11,"fmt","openssl::ssl::error","",18,null],[11,"fmt","","",18,null],[11,"description","","",18,null],[11,"cause","","",18,null],[11,"get_stack","","Returns the contents of the OpenSSL error stack.",24,{"inputs":[],"output":{"name":"vec"}}],[11,"error_code","","Returns the raw OpenSSL error code for this error.",24,null],[11,"library","","Returns the name of the library reporting the error.",24,null],[11,"function","","Returns the name of the function reporting the error.",24,null],[11,"reason","","Returns the reason for the error.",24,null],[11,"fmt","","",24,null],[11,"fmt","","",24,null],[11,"description","","",24,null],[11,"fmt","","",21,null],[11,"fmt","","",22,null],[11,"fmt","","",21,null],[11,"description","","",21,null],[11,"cause","","",21,null],[11,"fmt","","",22,null],[11,"description","","",22,null],[11,"cause","","",22,null],[11,"from","","",22,{"inputs":[{"name":"sslerror"}],"output":{"name":"nonblockingsslerror"}}],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"from_error_code","","",23,{"inputs":[{"name":"c_ulong"}],"output":{"name":"opensslerror"}}],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",21,{"inputs":[],"output":{"name":"sslerror"}}],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",21,{"inputs":[{"name":"c_ulong"}],"output":{"name":"sslerror"}}],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates",null,null],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process",null,null],[6,"ServerNameCallback","","The signature of functions that can be used to choose the context depending on the server name",null,null],[6,"ServerNameCallbackData","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_DTLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_DTLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_SSL_MASK","","",null,null],[17,"SSL_VERIFY_PEER","","Verify that the server&#39;s certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","Do not verify the server&#39;s certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","Terminate handshake if client did not return a certificate.\nUse together with SSL_VERIFY_PEER.",null,null],[8,"IntoSsl","","",null,null],[10,"into_ssl","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"clone","","",26,null],[11,"partial_cmp","","",26,null],[11,"lt","","",26,null],[11,"le","","",26,null],[11,"gt","","",26,null],[11,"ge","","",26,null],[11,"cmp","","",26,null],[11,"hash","","",26,null],[11,"fmt","","",26,null],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"u64"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,null],[11,"is_all","","Returns `true` if all flags are currently set.",26,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,null],[11,"insert","","Inserts the specified flags in-place.",26,null],[11,"remove","","Removes the specified flags in-place.",26,null],[11,"toggle","","Toggles the specified flags in-place.",26,null],[11,"bitor","","Returns the union of the two sets of flags.",26,null],[11,"bitor_assign","","Adds the set of flags.",26,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,null],[11,"bitxor_assign","","Toggles the set of flags.",26,null],[11,"bitand","","Returns the intersection between the two sets of flags.",26,null],[11,"bitand_assign","","Disables all flags disabled in the set.",26,null],[11,"sub","","Returns the set difference of the two sets of flags.",26,null],[11,"sub_assign","","Disables all flags enabled in the set.",26,null],[11,"not","","Returns the complement of this set of flags.",26,null],[11,"extend","","",26,null],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"sslcontextoptions"}}],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"hash","","",19,null],[11,"eq","","",19,null],[11,"is_dtls","","",19,null],[11,"is_dtlsv1","","",19,null],[11,"is_dtlsv1_2","","",19,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"clone","","",27,null],[11,"partial_cmp","","",27,null],[11,"lt","","",27,null],[11,"le","","",27,null],[11,"gt","","",27,null],[11,"ge","","",27,null],[11,"cmp","","",27,null],[11,"hash","","",27,null],[11,"fmt","","",27,null],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,null],[11,"is_all","","Returns `true` if all flags are currently set.",27,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,null],[11,"insert","","Inserts the specified flags in-place.",27,null],[11,"remove","","Removes the specified flags in-place.",27,null],[11,"toggle","","Toggles the specified flags in-place.",27,null],[11,"bitor","","Returns the union of the two sets of flags.",27,null],[11,"bitor_assign","","Adds the set of flags.",27,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,null],[11,"bitxor_assign","","Toggles the set of flags.",27,null],[11,"bitand","","Returns the intersection between the two sets of flags.",27,null],[11,"bitand_assign","","Disables all flags disabled in the set.",27,null],[11,"sub","","Returns the set difference of the two sets of flags.",27,null],[11,"sub_assign","","Disables all flags enabled in the set.",27,null],[11,"not","","Returns the complement of this set of flags.",27,null],[11,"extend","","",27,null],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"sslverifymode"}}],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"drop","","",28,null],[11,"new","","Creates a new SSL context.",28,{"inputs":[{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"set_verify","","Configures the certificate verification method for new connections.",28,null],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",28,null],[11,"set_servername_callback","","Configures the server name indication (SNI) callback for new connections",28,null],[11,"set_servername_callback_with_data","","Configures the server name indication (SNI) callback for new connections\ncarrying supplied data",28,null],[11,"set_verify_depth","","Sets verification depth",28,null],[11,"set_read_ahead","","",28,null],[11,"set_tmp_dh","","",28,null],[11,"set_default_verify_paths","","Use the default locations of trusted certificates for verification.",28,null],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",28,null],[11,"set_session_id_context","","Set the context identifier for sessions",28,null],[11,"set_certificate_file","","Specifies the file that contains certificate",28,null],[11,"set_certificate_chain_file","","Specifies the file that contains certificate chain",28,null],[11,"set_certificate","","Specifies the certificate",28,null],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",28,null],[11,"set_private_key_file","","Specifies the file that contains private key",28,null],[11,"set_private_key","","Specifies the private key",28,null],[11,"check_private_key","","Check consistency of private key and certificate",28,null],[11,"set_cipher_list","","",28,null],[11,"set_options","","",28,null],[11,"get_options","","",28,null],[11,"clear_options","","",28,null],[11,"name","","Returns the name of cipher.",29,null],[11,"version","","Returns the SSL/TLS protocol version that first defined the cipher.",29,null],[11,"bits","","Returns the number of bits used for the cipher.",29,null],[11,"description","","Returns a textual description of the cipher used",29,null],[11,"fmt","","",30,null],[11,"drop","","",30,null],[11,"clone","","# Deprecated",30,null],[11,"new","","",30,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_verify","","Sets the verification mode to be used during the handshake process.",30,null],[11,"set_verify_callback","","Sets the certificate verification callback to be used during the\nhandshake process.",30,null],[11,"get_current_cipher","","",30,null],[11,"state_string","","",30,null],[11,"state_string_long","","",30,null],[11,"set_hostname","","Sets the host name to be used with SNI (Server Name Indication).",30,null],[11,"peer_certificate","","Returns the certificate of the peer, if present.",30,null],[11,"version","","Returns the name of the protocol used for the connection, e.g. &quot;TLSv1.2&quot;, &quot;SSLv3&quot;, etc.",30,null],[11,"pending","","Returns the number of bytes remaining in the currently processed TLS\nrecord.",30,null],[11,"compression","","Returns the compression currently in use.",30,null],[11,"get_ssl_method","","",30,null],[11,"get_servername","","Returns the server&#39;s name for the current connection",30,null],[11,"set_ssl_context","","change the context corresponding to the current connection",30,null],[11,"get_ssl_context","","obtain the context corresponding to the current connection",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"as_raw_fd","","",31,null],[11,"connect","","Creates an SSL/TLS client operating over the provided stream.",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Creates an SSL/TLS server operating over the provided stream.",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"connect_generic","","### Deprecated",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept_generic","","### Deprecated",31,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"ssl_read","","Like `read`, but returns an `ssl::Error` rather than an `io::Error`.",31,null],[11,"ssl_write","","Like `write`, but returns an `ssl::Error` rather than an `io::Error`.",31,null],[11,"get_ref","","Returns a reference to the underlying stream.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",31,null],[11,"ssl","","Returns the OpenSSL `Ssl` object associated with this stream.",31,null],[11,"try_clone","","# Deprecated",31,null],[11,"read","","",31,null],[11,"write","","",31,null],[11,"flush","","",31,null],[11,"into_ssl","","",30,null],[11,"fmt","","",20,null],[11,"read","","",20,null],[11,"write","","",20,null],[11,"flush","","",20,null],[11,"get_ref","","Returns a reference to the underlying stream.",20,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",20,null],[11,"try_clone","","Like `TcpStream::try_clone`.",20,null],[11,"clone","","",32,null],[11,"as_raw_fd","","",32,null],[11,"try_clone","","",32,null],[11,"get_ref","","Returns a reference to the underlying stream.",32,null],[11,"get_mut","","Returns a mutable reference to the underlying stream.",32,null],[11,"ssl","","Returns a reference to the Ssl.",32,null],[11,"connect","","Create a new nonblocking client ssl connection on wrapped `stream`.",32,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"accept","","Create a new nonblocking server ssl connection on wrapped `stream`.",32,{"inputs":[{"name":"t"},{"name":"s"}],"output":{"name":"result"}}],[11,"read","","Read bytes from the SSL stream into `buf`.",32,null],[11,"write","","Write bytes from `buf` to the SSL stream.",32,null],[0,"x509","openssl","",null,null],[3,"SslString","openssl::x509","",null,null],[3,"X509StoreContext","","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","A public key certificate",null,null],[3,"X509Name","","",null,null],[3,"X509NameEntry","","",null,null],[3,"X509Req","","A certificate signing request",null,null],[3,"GeneralNames","","A collection of OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralNamesIter","","An iterator over OpenSSL `GENERAL_NAME`s.",null,null],[3,"GeneralName","","An OpenSSL `GENERAL_NAME`.",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",33,null],[13,"ASN1","","",33,null],[13,"Default","","",33,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",34,null],[13,"X509UnableToGetCrl","","",34,null],[13,"X509UnableToDecryptCertSignature","","",34,null],[13,"X509UnableToDecryptCrlSignature","","",34,null],[13,"X509UnableToDecodeIssuerPublicKey","","",34,null],[13,"X509CertSignatureFailure","","",34,null],[13,"X509CrlSignatureFailure","","",34,null],[13,"X509CertNotYetValid","","",34,null],[13,"X509CertHasExpired","","",34,null],[13,"X509CrlNotYetValid","","",34,null],[13,"X509CrlHasExpired","","",34,null],[13,"X509ErrorInCertNotBeforeField","","",34,null],[13,"X509ErrorInCertNotAfterField","","",34,null],[13,"X509ErrorInCrlLastUpdateField","","",34,null],[13,"X509ErrorInCrlNextUpdateField","","",34,null],[13,"X509OutOfMem","","",34,null],[13,"X509DepthZeroSelfSignedCert","","",34,null],[13,"X509SelfSignedCertInChain","","",34,null],[13,"X509UnableToGetIssuerCertLocally","","",34,null],[13,"X509UnableToVerifyLeafSignature","","",34,null],[13,"X509CertChainTooLong","","",34,null],[13,"X509CertRevoked","","",34,null],[13,"X509InvalidCA","","",34,null],[13,"X509PathLengthExceeded","","",34,null],[13,"X509InvalidPurpose","","",34,null],[13,"X509CertUntrusted","","",34,null],[13,"X509CertRejected","","",34,null],[13,"X509SubjectIssuerMismatch","","",34,null],[13,"X509AkidSkidMismatch","","",34,null],[13,"X509AkidIssuerSerialMismatch","","",34,null],[13,"X509KeyusageNoCertsign","","",34,null],[13,"X509UnableToGetCrlIssuer","","",34,null],[13,"X509UnhandledCriticalExtension","","",34,null],[13,"X509KeyusageNoCrlSign","","",34,null],[13,"X509UnhandledCriticalCrlExtension","","",34,null],[13,"X509InvalidNonCA","","",34,null],[13,"X509ProxyPathLengthExceeded","","",34,null],[13,"X509KeyusageNoDigitalSignature","","",34,null],[13,"X509ProxyCertificatesNotAllowed","","",34,null],[13,"X509InvalidExtension","","",34,null],[13,"X509InavlidPolicyExtension","","",34,null],[13,"X509NoExplicitPolicy","","",34,null],[13,"X509DifferentCrlScope","","",34,null],[13,"X509UnsupportedExtensionFeature","","",34,null],[13,"X509UnnestedResource","","",34,null],[13,"X509PermittedVolation","","",34,null],[13,"X509ExcludedViolation","","",34,null],[13,"X509SubtreeMinmax","","",34,null],[13,"X509UnsupportedConstraintType","","",34,null],[13,"X509UnsupportedConstraintSyntax","","",34,null],[13,"X509UnsupportedNameSyntax","","",34,null],[13,"X509CrlPathValidationError","","",34,null],[13,"X509ApplicationVerification","","",34,null],[13,"X509UnknownError","","",34,null],[0,"extension","","",null,null],[4,"ExtensionType","openssl::x509::extension","Type-only version of the `Extension` enum.",null,null],[13,"KeyUsage","","",35,null],[13,"ExtKeyUsage","","",35,null],[13,"SubjectAltName","","",35,null],[13,"IssuerAltName","","",35,null],[13,"OtherNid","","",35,null],[13,"OtherStr","","",35,null],[4,"Extension","","A X.509 v3 certificate extension.",null,null],[13,"KeyUsage","","The purposes of the key contained in the certificate",36,null],[13,"ExtKeyUsage","","The extended purposes of the key contained in the certificate",36,null],[13,"SubjectAltName","","Subject Alternative Names",36,null],[13,"IssuerAltName","","Issuer Alternative Names",36,null],[13,"OtherNid","","Arbitrary extensions by NID. See `man x509v3_config` for value syntax.",36,null],[13,"OtherStr","","Arbitrary extensions by OID string. See `man ASN1_generate_nconf` for value syntax.",36,null],[4,"KeyUsageOption","","",null,null],[13,"DigitalSignature","","",37,null],[13,"NonRepudiation","","",37,null],[13,"KeyEncipherment","","",37,null],[13,"DataEncipherment","","",37,null],[13,"KeyAgreement","","",37,null],[13,"KeyCertSign","","",37,null],[13,"CRLSign","","",37,null],[13,"EncipherOnly","","",37,null],[13,"DecipherOnly","","",37,null],[4,"ExtKeyUsageOption","","",null,null],[13,"ServerAuth","","",38,null],[13,"ClientAuth","","",38,null],[13,"CodeSigning","","",38,null],[13,"EmailProtection","","",38,null],[13,"TimeStamping","","",38,null],[13,"MsCodeInd","","",38,null],[13,"MsCodeCom","","",38,null],[13,"MsCtlSign","","",38,null],[13,"MsSgc","","",38,null],[13,"MsEfs","","",38,null],[13,"NsSgc","","",38,null],[13,"Other","","An arbitrary key usage by OID.",38,null],[4,"AltNameOption","","",null,null],[13,"Other","","The value is specified as OID;content. See `man ASN1_generate_nconf` for more information on the content syntax.",39,null],[13,"Email","","",39,null],[13,"DNS","","",39,null],[13,"Directory","","",39,null],[13,"URI","","",39,null],[13,"IPAddress","","",39,null],[13,"RegisteredID","","",39,null],[11,"clone","","",35,null],[11,"hash","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",36,null],[11,"get_type","","",36,null],[11,"get_nid","","",35,null],[11,"get_name","","",35,null],[11,"to_string","","",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"drop","openssl::x509","",40,null],[11,"deref","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",33,null],[11,"new","","",41,null],[11,"get_error","","",41,null],[11,"get_current_cert","","",41,null],[11,"error_depth","","",41,null],[11,"new","","Creates a new generator with the following defaults:",42,{"inputs":[],"output":{"name":"x509generator"}}],[11,"set_bitlength","","Sets desired bit length",42,null],[11,"set_valid_period","","Sets certificate validity period in days since today",42,null],[11,"add_name","","Add attribute to the name of the certificate",42,null],[11,"add_names","","Add multiple attributes to the name of the certificate",42,null],[11,"add_extension","","Add an extension to a certificate",42,null],[11,"add_extensions","","Add multiple extensions to a certificate",42,null],[11,"set_sign_hash","","",42,null],[11,"generate","","Generates a private key and a self-signed certificate and returns them",42,null],[11,"sign","","Sets the certificate public-key, then self-sign and return it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",42,null],[11,"request","","Obtain a certificate signing request (CSR)",42,null],[11,"new","","Creates new from handle with desired ownership.",43,null],[11,"new_in_ctx","","Creates a new certificate from context. Doesn&#39;t take ownership\nof handle.",43,null],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",43,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"get_handle","","",43,null],[11,"subject_name","","",43,null],[11,"subject_alt_names","","Returns this certificate&#39;s SAN entries, if they exist.",43,null],[11,"public_key","","",43,null],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",43,null],[11,"write_pem","","Writes certificate as PEM",43,null],[11,"clone","","",43,null],[11,"drop","","",43,null],[11,"text_by_nid","","",44,null],[11,"new","","Creates new from handle",45,null],[11,"from_pem","","Reads CSR from PEM",45,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"write_pem","","Writes CSR as PEM",45,null],[11,"drop","","",45,null],[11,"clone","","",34,null],[11,"len","","Returns the number of `GeneralName`s in this structure.",46,null],[11,"get","","Returns the specified `GeneralName`.",46,null],[11,"iter","","Returns an iterator over the `GeneralName`s in this structure.",46,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"dnsname","","Returns the contents of this `GeneralName` if it is a `dNSName`.",48,null],[11,"ipaddress","","Returns the contents of this `GeneralName` if it is an `iPAddress`.",48,null],[0,"nid","openssl","",null,null],[4,"Nid","openssl::nid","",null,null],[13,"Undefined","","",49,null],[13,"Rsadsi","","",49,null],[13,"Pkcs","","",49,null],[13,"MD2","","",49,null],[13,"MD4","","",49,null],[13,"MD5","","",49,null],[13,"RC4","","",49,null],[13,"RsaEncryption","","",49,null],[13,"RSA_MD2","","",49,null],[13,"RSA_MD5","","",49,null],[13,"PBE_MD2_DES","","",49,null],[13,"X500","","",49,null],[13,"x509","","",49,null],[13,"CN","","",49,null],[13,"C","","",49,null],[13,"L","","",49,null],[13,"ST","","",49,null],[13,"O","","",49,null],[13,"OU","","",49,null],[13,"RSA","","",49,null],[13,"Pkcs7","","",49,null],[13,"Pkcs7_data","","",49,null],[13,"Pkcs7_signedData","","",49,null],[13,"Pkcs7_envelopedData","","",49,null],[13,"Pkcs7_signedAndEnvelopedData","","",49,null],[13,"Pkcs7_digestData","","",49,null],[13,"Pkcs7_encryptedData","","",49,null],[13,"Pkcs3","","",49,null],[13,"DhKeyAgreement","","",49,null],[13,"DES_ECB","","",49,null],[13,"DES_CFB","","",49,null],[13,"DES_CBC","","",49,null],[13,"DES_EDE","","",49,null],[13,"DES_EDE3","","",49,null],[13,"IDEA_CBC","","",49,null],[13,"IDEA_CFB","","",49,null],[13,"IDEA_ECB","","",49,null],[13,"RC2_CBC","","",49,null],[13,"RC2_ECB","","",49,null],[13,"RC2_CFB","","",49,null],[13,"RC2_OFB","","",49,null],[13,"SHA","","",49,null],[13,"RSA_SHA","","",49,null],[13,"DES_EDE_CBC","","",49,null],[13,"DES_EDE3_CBC","","",49,null],[13,"DES_OFB","","",49,null],[13,"IDEA_OFB","","",49,null],[13,"Pkcs9","","",49,null],[13,"Email","","",49,null],[13,"UnstructuredName","","",49,null],[13,"ContentType","","",49,null],[13,"MessageDigest","","",49,null],[13,"SigningTime","","",49,null],[13,"CounterSignature","","",49,null],[13,"ChallengePassword","","",49,null],[13,"UnstructuredAddress","","",49,null],[13,"ExtendedCertificateAttributes","","",49,null],[13,"Netscape","","",49,null],[13,"NetscapeCertExtention","","",49,null],[13,"NetscapeDatatype","","",49,null],[13,"DES_EDE_CFB64","","",49,null],[13,"DES_EDE3_CFB64","","",49,null],[13,"DES_EDE_OFB64","","",49,null],[13,"DES_EDE3_OFB64","","",49,null],[13,"SHA1","","",49,null],[13,"RSA_SHA1","","",49,null],[13,"DSA_SHA","","",49,null],[13,"DSA_OLD","","",49,null],[13,"PBE_SHA1_RC2_64","","",49,null],[13,"PBKDF2","","",49,null],[13,"DSA_SHA1_OLD","","",49,null],[13,"NetscapeCertType","","",49,null],[13,"NetscapeBaseUrl","","",49,null],[13,"NetscapeRevocationUrl","","",49,null],[13,"NetscapeCARevocationUrl","","",49,null],[13,"NetscapeRenewalUrl","","",49,null],[13,"NetscapeCAPolicyUrl","","",49,null],[13,"NetscapeSSLServerName","","",49,null],[13,"NetscapeComment","","",49,null],[13,"NetscapeCertSequence","","",49,null],[13,"DESX_CBC","","",49,null],[13,"ID_CE","","",49,null],[13,"SubjectKeyIdentifier","","",49,null],[13,"KeyUsage","","",49,null],[13,"PrivateKeyUsagePeriod","","",49,null],[13,"SubjectAltName","","",49,null],[13,"IssuerAltName","","",49,null],[13,"BasicConstraints","","",49,null],[13,"CrlNumber","","",49,null],[13,"CertificatePolicies","","",49,null],[13,"AuthorityKeyIdentifier","","",49,null],[13,"BF_CBC","","",49,null],[13,"BF_ECB","","",49,null],[13,"BF_CFB","","",49,null],[13,"BF_OFB","","",49,null],[13,"MDC2","","",49,null],[13,"RSA_MDC2","","",49,null],[13,"RC4_40","","",49,null],[13,"RC2_40_CBC","","",49,null],[13,"G","","",49,null],[13,"S","","",49,null],[13,"I","","",49,null],[13,"UID","","uniqueIdentifier",49,null],[13,"CrlDistributionPoints","","",49,null],[13,"RSA_NP_MD5","","",49,null],[13,"SN","","",49,null],[13,"T","","",49,null],[13,"D","","",49,null],[13,"CAST5_CBC","","",49,null],[13,"CAST5_ECB","","",49,null],[13,"CAST5_CFB","","",49,null],[13,"CAST5_OFB","","",49,null],[13,"PbeWithMD5AndCast5CBC","","",49,null],[13,"DSA_SHA1","","",49,null],[13,"MD5_SHA1","","",49,null],[13,"RSA_SHA1_2","","",49,null],[13,"DSA","","",49,null],[13,"RIPEMD160","","",49,null],[13,"RSA_RIPEMD160","","",49,null],[13,"RC5_CBC","","",49,null],[13,"RC5_ECB","","",49,null],[13,"RC5_CFB","","",49,null],[13,"RC5_OFB","","",49,null],[13,"RLE","","",49,null],[13,"ZLIB","","",49,null],[13,"ExtendedKeyUsage","","",49,null],[13,"PKIX","","",49,null],[13,"ID_KP","","",49,null],[13,"ServerAuth","","",49,null],[13,"ClientAuth","","",49,null],[13,"CodeSigning","","",49,null],[13,"EmailProtection","","",49,null],[13,"TimeStamping","","",49,null],[13,"MsCodeInd","","",49,null],[13,"MsCodeCom","","",49,null],[13,"MsCtlSigh","","",49,null],[13,"MsSGC","","",49,null],[13,"MsEFS","","",49,null],[13,"NsSGC","","",49,null],[13,"DeltaCRL","","",49,null],[13,"CRLReason","","",49,null],[13,"InvalidityDate","","",49,null],[13,"SXNetID","","",49,null],[13,"PBE_SHA1_RC4_128","","",49,null],[13,"PBE_SHA1_RC4_40","","",49,null],[13,"PBE_SHA1_3DES","","",49,null],[13,"PBE_SHA1_2DES","","",49,null],[13,"PBE_SHA1_RC2_128","","",49,null],[13,"PBE_SHA1_RC2_40","","",49,null],[13,"KeyBag","","",49,null],[13,"Pkcs8ShroudedKeyBag","","",49,null],[13,"CertBag","","",49,null],[13,"CrlBag","","",49,null],[13,"SecretBag","","",49,null],[13,"SafeContentsBag","","",49,null],[13,"FriendlyName","","",49,null],[13,"LocalKeyID","","",49,null],[13,"X509Certificate","","",49,null],[13,"SdsiCertificate","","",49,null],[13,"X509Crl","","",49,null],[13,"PBES2","","",49,null],[13,"PBMAC1","","",49,null],[13,"HmacWithSha1","","",49,null],[13,"ID_QT_CPS","","",49,null],[13,"ID_QT_UNOTICE","","",49,null],[13,"RC2_64_CBC","","",49,null],[13,"SMIMECaps","","",49,null],[13,"PBE_MD2_RC2_64","","",49,null],[13,"PBE_MD5_RC2_64","","",49,null],[13,"PBE_SHA1_DES","","",49,null],[13,"MicrosoftExtensionRequest","","",49,null],[13,"ExtensionRequest","","",49,null],[13,"Name","","",49,null],[13,"DnQualifier","","",49,null],[13,"IdPe","","",49,null],[13,"IdAd","","",49,null],[13,"AuthorityInfoAccess","","",49,null],[13,"OCSP","","",49,null],[13,"CaIssuers","","",49,null],[13,"OCSPSigning","","",49,null],[13,"UserId","","Shown as UID in cert subject",49,null],[13,"SHA256","","",49,null],[13,"SHA384","","",49,null],[13,"SHA512","","",49,null],[13,"SHA224","","",49,null],[11,"clone","","",49,null],[11,"hash","","",49,null],[11,"eq","","",49,null],[0,"version","openssl","",null,null],[5,"number","openssl::version","OPENSSL_VERSION_NUMBER is a numeric release version identifier:",null,{"inputs":[],"output":{"name":"i64"}}],[5,"version","","The text variant of the version number and the release date. For example, &quot;OpenSSL 0.9.5a 1 Apr 2000&quot;.",null,{"inputs":[],"output":{"name":"str"}}],[5,"c_flags","","The compiler flags set for the compilation process in the form &quot;compiler: ...&quot; if available or\n&quot;compiler: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"built_on","","The date of the build process in the form &quot;built on: ...&quot; if available or &quot;built on: date not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"platform","","The &quot;Configure&quot; target of the library build in the form &quot;platform: ...&quot; if available or &quot;platform: information not available&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}],[5,"dir","","The &quot;OPENSSLDIR&quot; setting of the library build in the form &quot;OPENSSLDIR: &quot;...&quot;&quot; if available or &quot;OPENSSLDIR: N/A&quot; otherwise.",null,{"inputs":[],"output":{"name":"str"}}]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[3,"KeyIvPair"],[4,"Parts"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[3,"RSA"],[3,"DH"],[3,"CipherBits"],[4,"Error"],[4,"SslMethod"],[4,"MaybeSslStream"],[4,"SslError"],[4,"NonblockingSslError"],[4,"OpensslError"],[3,"OpenSslError"],[8,"IntoSsl"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"SslContext"],[3,"SslCipher"],[3,"Ssl"],[3,"SslStream"],[3,"NonblockingSslStream"],[4,"X509FileType"],[4,"X509ValidationError"],[4,"ExtensionType"],[4,"Extension"],[4,"KeyUsageOption"],[4,"ExtKeyUsageOption"],[4,"AltNameOption"],[3,"SslString"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"],[3,"X509Name"],[3,"X509Req"],[3,"GeneralNames"],[3,"GeneralNamesIter"],[3,"GeneralName"],[4,"Nid"]]};
searchIndex["unicase"] = {"doc":"# Case","items":[[3,"UniCase","unicase","Case Insensitive wrapper of strings.",null,null],[12,"0","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"as_ref","","",0,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"into","","",0,null],[11,"into","","",0,null]],"paths":[[3,"UniCase"]]};
searchIndex["solicit"] = {"doc":"","items":[[0,"http","solicit","The module implements the framing layer of HTTP/2 and exposes an API for using it.",null,null],[3,"Response","solicit::http","A struct representing the full raw response received on an HTTP/2 connection.",null,null],[12,"stream_id","","The ID of the stream to which the response is associated. HTTP/1.1 does\nnot really have an equivalent to this.",0,null],[12,"headers","","Exposes *all* the raw response headers, including the meta-headers.\n(For now the only meta header allowed in HTTP/2 responses is the\n`:status`.)",0,null],[12,"body","","The full body of the response as an uninterpreted sequence of bytes.",0,null],[3,"Request","","A struct representing a full HTTP/2 request, along with the full body, as a\nsequence of bytes.",null,null],[12,"stream_id","","",1,null],[12,"headers","","",1,null],[12,"body","","",1,null],[4,"HttpError","","An enum representing errors that can arise when performing operations\ninvolving an HTTP/2 connection.",null,null],[13,"IoError","","",2,null],[13,"InvalidFrame","","",2,null],[13,"CompressionError","","",2,null],[13,"UnknownStreamId","","",2,null],[13,"UnableToConnect","","",2,null],[13,"MalformedResponse","","",2,null],[13,"Other","","",2,null],[4,"HttpScheme","","An enum representing the two possible HTTP schemes.",null,null],[13,"Http","","The variant corresponding to `http://`",3,null],[13,"Https","","The variant corresponding to `https://`",3,null],[0,"frame","","The module contains the implementation of HTTP/2 frames.",null,null],[3,"RawFrame","solicit::http::frame","A struct that defines the format of the raw HTTP/2 frame, i.e. the frame\nas it is read from the wire.",null,null],[5,"unpack_header","","Deconstructs a `FrameHeader` into its corresponding 4 components,\nrepresented as a 4-tuple: `(length, frame_type, flags, stream_id)`.",null,{"inputs":[{"name":"frameheaderbuffer"}],"output":{"name":"frameheader"}}],[5,"pack_header","","Constructs a buffer of 9 bytes that represents the given `FrameHeader`.",null,{"inputs":[{"name":"frameheader"}],"output":{"name":"frameheaderbuffer"}}],[0,"data","","The module contains the implementation of the `DATA` frame and associated flags.",null,null],[3,"DataFrame","solicit::http::frame::data","A struct representing the DATA frames of HTTP/2, as defined in the HTTP/2\nspec, section 6.1.",null,null],[12,"data","","The data found in the frame as an opaque byte sequence. It never\nincludes padding bytes.",4,null],[4,"DataFlag","","An enum representing the flags that a `DataFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"EndStream","","",5,null],[13,"Padded","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"bitmask","","",5,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",4,null],[11,"new","","Creates a new empty `DataFrame`, associated to the stream with the\ngiven ID.",4,{"inputs":[{"name":"streamid"}],"output":{"name":"dataframe"}}],[11,"is_padded","","Returns `true` if the DATA frame is padded, otherwise false.",4,null],[11,"is_end_of_stream","","Returns whther this frame ends the stream it is associated with.",4,null],[11,"set_padding","","Sets the number of bytes that should be used as padding for this\nframe.",4,null],[11,"from_raw","","Creates a new `DataFrame` from the given `RawFrame` (i.e. header and\npayload), if possible.  Returns `None` if a valid `DataFrame` cannot be\nconstructed from the given `RawFrame`.",4,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",4,null],[11,"set_flag","","Sets the given flag for the frame.",4,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",4,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the frame.",4,null],[11,"serialize","","Returns a `Vec` with the serialized representation of the frame.",4,null],[0,"headers","solicit::http::frame","The module contains the implementation of the `HEADERS` frame and associated flags.",null,null],[3,"StreamDependency","solicit::http::frame::headers","The struct represents the dependency information that can be attached to\na stream and sent within a HEADERS frame (one with the Priority flag set).",null,null],[12,"stream_id","","The ID of the stream that a particular stream depends on",6,null],[12,"weight","","The weight for the stream. The value exposed (and set) here is always\nin the range [0, 255], instead of [1, 256] \\(as defined in section 5.3.2.)\nso that the value fits into a `u8`.",6,null],[12,"is_exclusive","","A flag indicating whether the stream dependency is exclusive.",6,null],[3,"HeadersFrame","","A struct representing the HEADERS frames of HTTP/2, as defined in the\nHTTP/2 spec, section 6.2.",null,null],[12,"header_fragment","","The header fragment bytes stored within the frame.",7,null],[12,"stream_id","","The ID of the stream with which this frame is associated",7,null],[12,"stream_dep","","The stream dependency information, if any.",7,null],[12,"padding_len","","The length of the padding, if any.",7,null],[4,"HeadersFlag","","An enum representing the flags that a `HeadersFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"EndStream","","",8,null],[13,"EndHeaders","","",8,null],[13,"Padded","","",8,null],[13,"Priority","","",8,null],[11,"clone","","",8,null],[11,"eq","","",8,null],[11,"fmt","","",8,null],[11,"bitmask","","",8,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"new","","Creates a new `StreamDependency` with the given stream ID, weight, and\nexclusivity.",6,{"inputs":[{"name":"streamid"},{"name":"u8"},{"name":"bool"}],"output":{"name":"streamdependency"}}],[11,"parse","","Parses the first 5 bytes in the buffer as a `StreamDependency`.\n(Each 5-byte sequence is always decodable into a stream dependency\nstructure).",6,null],[11,"serialize","","Serializes the `StreamDependency` into a 5-byte buffer representing the\ndependency description, as described in section 6.2. of the HTTP/2\nspec:",6,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"new","","Creates a new `HeadersFrame` with the given header fragment and stream\nID. No padding, no stream dependency, and no flags are set.",7,{"inputs":[{"name":"vec"},{"name":"streamid"}],"output":{"name":"headersframe"}}],[11,"with_dependency","","Creates a new `HeadersFrame` with the given header fragment, stream ID\nand stream dependency information. No padding and no flags are set.",7,{"inputs":[{"name":"vec"},{"name":"streamid"},{"name":"streamdependency"}],"output":{"name":"headersframe"}}],[11,"is_headers_end","","Returns whether this frame ends the headers. If not, there MUST be a\nnumber of follow up CONTINUATION frames that send the rest of the\nheader data.",7,null],[11,"is_end_of_stream","","Returns whther this frame ends the stream it is associated with.",7,null],[11,"set_padding","","Sets the padding length for the frame, as well as the corresponding\nPadded flag.",7,null],[11,"from_raw","","Creates a new `HeadersFrame` with the given `RawFrame` (i.e. header and\npayload), if possible.",7,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",7,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",7,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",7,null],[11,"set_flag","","Sets the given flag for the frame.",7,null],[11,"serialize","","Returns a `Vec` with the serialized representation of the frame.",7,null],[0,"settings","solicit::http::frame","The module contains the implementation of the `SETTINGS` frame and associated flags.",null,null],[3,"SettingsFrame","solicit::http::frame::settings","A struct representing the SETTINGS frames of HTTP/2, as defined in the\nHTTP/2 spec, section 6.5.",null,null],[12,"settings","","Contains all the settings that are currently set in the frame. It is\nsafe to access this field (to read, add, or remove settings), even\nthough a helper method `add_setting` exists.",9,null],[4,"HttpSetting","","An enum that lists all valid settings that can be sent in a SETTINGS\nframe.",null,null],[13,"HeaderTableSize","","",10,null],[13,"EnablePush","","",10,null],[13,"MaxConcurrentStreams","","",10,null],[13,"InitialWindowSize","","",10,null],[13,"MaxFrameSize","","",10,null],[13,"MaxHeaderListSize","","",10,null],[4,"SettingsFlag","","An enum representing the flags that a `SettingsFrame` can have.\nThe integer representation associated to each variant is that flag&#39;s\nbitmask.",null,null],[13,"Ack","","",11,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"fmt","","",10,null],[11,"from_id","","Creates a new `HttpSetting` with the correct variant corresponding to\nthe given setting id, based on the settings IDs defined in section\n6.5.2.",10,{"inputs":[{"name":"u16"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_id","","Returns the setting ID as an unsigned 16 bit integer, as defined in\nsection 6.5.2.",10,null],[11,"get_val","","Gets the setting value by unpacking it from the wrapped `u32`.",10,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",11,null],[11,"bitmask","","",11,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",9,null],[11,"new","","Creates a new `SettingsFrame`",9,{"inputs":[],"output":{"name":"settingsframe"}}],[11,"new_ack","","A convenience constructor that returns a `SettingsFrame` with the ACK\nflag already set and no settings.",9,{"inputs":[],"output":{"name":"settingsframe"}}],[11,"add_setting","","Adds the given setting to the frame.",9,null],[11,"set_ack","","Sets the ACK flag for the frame. This method is just a convenience\nmethod for calling `frame.set_flag(SettingsFlag::Ack)`.",9,null],[11,"is_ack","","Checks whether the `SettingsFrame` has an ACK attached to it.",9,null],[11,"from_raw","","Creates a new `SettingsFrame` with the given `RawFrame` (i.e. header and\npayload), if possible.",9,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[11,"is_set","","Tests if the given flag is set for the frame.",9,null],[11,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated.",9,null],[11,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",9,null],[11,"set_flag","","Sets the given flag for the frame.",9,null],[11,"serialize","","Returns a `Vec` with the serialized representation of the frame.",9,null],[6,"FrameHeaderBuffer","solicit::http::frame","An alias for the 9-byte buffer that each HTTP/2 frame header must be stored\nin.",null,null],[6,"FrameHeader","","An alias for the 4-tuple representing the components of each HTTP/2 frame\nheader.",null,null],[8,"Flag","","A trait that all HTTP/2 frame header flags need to implement.",null,null],[10,"bitmask","","Returns a bit mask that represents the flag.",12,null],[8,"Frame","","A trait that all HTTP/2 frame structs need to implement.",null,null],[16,"FlagType","","The type that represents the flags that the particular `Frame` can take.\nThis makes sure that only valid `Flag`s are used with each `Frame`.",13,null],[10,"from_raw","","Creates a new `Frame` from the given `RawFrame` (i.e. header and\npayload), if possible.",13,{"inputs":[{"name":"rawframe"}],"output":{"name":"option"}}],[10,"is_set","","Tests if the given flag is set for the frame.",13,null],[10,"get_stream_id","","Returns the `StreamId` of the stream to which the frame is associated",13,null],[10,"get_header","","Returns a `FrameHeader` based on the current state of the `Frame`.",13,null],[10,"set_flag","","Sets the given flag for the frame.",13,null],[10,"serialize","","Returns a `Vec` with the serialized representation of the frame.",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"new","","Creates a new `RawFrame` with the given `FrameHeader`. The payload is\nleft empty.",14,{"inputs":[{"name":"frameheader"}],"output":{"name":"rawframe"}}],[11,"with_payload","","Creates a new `RawFrame` with the given header and payload.\nDoes not do any validation to determine whether the frame is in a correct\nstate as constructed.",14,{"inputs":[{"name":"frameheader"},{"name":"vec"}],"output":{"name":"rawframe"}}],[11,"from_buf","","Creates a new `RawFrame` by parsing the given buffer.",14,null],[11,"serialize","","Returns a `Vec` of bytes representing the serialized (on-the-wire)\nrepresentation of this raw frame.",14,null],[11,"header","","Returns a `FrameHeader` instance corresponding to the headers of the\n`RawFrame`.",14,null],[11,"payload","","Returns a slice representing the payload of the `RawFrame`.",14,null],[11,"into","","",14,null],[11,"from","","",14,{"inputs":[{"name":"vec"}],"output":{"name":"rawframe"}}],[0,"transport","solicit::http","The module contains implementations of the transport layer functionality\nthat HTTP/2 requires. It exposes APIs that allow the HTTP/2 connection to\nuse the transport layer without requiring it to know which exact\nimplementation they are using (e.g. a clear-text TCP connection, a TLS\nprotected connection, or even a mock implementation).",null,null],[8,"TransportStream","solicit::http::transport","A trait that any struct that wants to provide the transport layer for\nHTTP/2 needs to implement.",null,null],[11,"read_exact","","A convenience method that performs as many `read` calls on the\nunderlying `Read` implementation as it takes to fill the given buffer.",15,null],[10,"try_split","","Attempts to split the `TransportStream` instance into a new independently\nowned handle to the same underlying stream.",15,null],[10,"close","","Attempts to shutdown both ends of the transport stream.",15,null],[0,"connection","solicit::http","The module contains the implementation of an HTTP/2 connection.",null,null],[3,"HttpConnection","solicit::http::connection","The struct implements the HTTP/2 connection level logic.",null,null],[12,"receiver","","The instance handling the reading of frames.",16,null],[12,"sender","","The instance handling the writing of frames.",16,null],[12,"scheme","","The scheme of the connection",16,null],[3,"DataChunk","","The struct represents a chunk of data that should be sent to the peer on a particular stream.",null,null],[12,"data","","The data that should be sent.",17,null],[12,"stream_id","","The ID of the stream on which the data should be sent.",17,null],[12,"end_stream","","Whether the data chunk will also end the stream.",17,null],[4,"HttpFrame","","An enum representing all frame variants that can be returned by an\n`HttpConnection`.",null,null],[13,"DataFrame","","",18,null],[13,"HeadersFrame","","",18,null],[13,"SettingsFrame","","",18,null],[13,"UnknownFrame","","",18,null],[4,"SendStatus","","The enum represents the success status of the operation of sending a next data chunk on an\nHTTP/2 connection.",null,null],[13,"Sent","","Indicates that a DATA frame was successfully sent",19,null],[13,"Nothing","","Indicates that nothing was sent, but that no errors occurred.",19,null],[4,"EndStream","","An enum indicating whether the `HttpConnection` send operation should end the stream.",null,null],[13,"Yes","","The stream should be closed",20,null],[13,"No","","The stream should still be kept open",20,null],[8,"SendFrame","","A trait that should be implemented by types that can provide the functionality\nof sending HTTP/2 frames.",null,null],[10,"send_raw_frame","","Sends the given raw frame.",21,null],[11,"send_frame","","Sends the given concrete frame.",21,null],[8,"ReceiveFrame","","A trait that should be implemented by types that can provide the functionality\nof receiving HTTP/2 frames.",null,null],[10,"recv_frame","","Return a new `HttpFrame` instance. Unknown frames can be wrapped in the\n`HttpFrame::UnknownFrame` variant (i.e. their `RawFrame` representation).",22,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"from_raw","","",18,{"inputs":[{"name":"rawframe"}],"output":{"name":"httpresult"}}],[11,"clone","","",19,null],[11,"eq","","",19,null],[11,"fmt","","",19,null],[11,"new","","Creates a new `DataChunk`.",17,{"inputs":[{"name":"cow"},{"name":"streamid"},{"name":"endstream"}],"output":{"name":"datachunk"}}],[11,"new_borrowed","","Creates a new `DataChunk` from a borrowed slice. This method should become obsolete if we\ncan take an `Into&lt;Cow&lt;_, _&gt;&gt;` without using unstable features.",17,{"inputs":[{"name":"d"},{"name":"streamid"},{"name":"endstream"}],"output":{"name":"datachunk"}}],[11,"clone","","",20,null],[11,"eq","","",20,null],[11,"fmt","","",20,null],[11,"new","","Creates a new `HttpConnection` that will use the given sender and receiver instances\nfor writing and reading frames, respectively.",16,{"inputs":[{"name":"s"},{"name":"r"},{"name":"httpscheme"}],"output":{"name":"httpconnection"}}],[11,"with_stream","","Creates a new `HttpConnection` that will use the given stream as its\nunderlying transport layer.",16,{"inputs":[{"name":"ts"},{"name":"httpscheme"}],"output":{"name":"httpconnection"}}],[11,"send_headers","","A helper function that inserts the frames required to send the given headers onto the\n`SendFrame` stream.",16,null],[11,"send_data","","A helper function that inserts a frame representing the given data into the `SendFrame`\nstream.",16,null],[11,"send_next_data","","Sends the chunk of data provided by the given `DataPrioritizer`.",16,null],[11,"expect_settings","","The method processes the next incoming frame, expecting it to be a SETTINGS frame.\nAdditionally, the frame cannot be an ACK settings frame, but rather it should contain the\npeer&#39;s settings.",16,null],[11,"handle_next_frame","","Handles the next frame incoming on the `ReceiveFrame` instance.",16,null],[0,"session","solicit::http","Defines the interface for the session-level management of HTTP/2\ncommunication. This is effectively an API that allows hooking into an\nHTTP/2 connection in order to handle events arising on the connection.",null,null],[3,"StreamIter","solicit::http::session","A newtype for an iterator over `Stream`s saved in a `SessionState`.",null,null],[3,"DefaultSessionState","","An implementation of the `SessionState` trait that tracks the active streams in a `HashMap`,\nmapping the stream ID to the concrete `Stream` instance.",null,null],[3,"DefaultStream","","An implementation of the `Stream` trait that saves all headers and data\nin memory.",null,null],[12,"stream_id","","The ID of the stream",23,null],[12,"headers","","The headers associated with the stream (i.e. the response headers)",23,null],[12,"body","","The body of the stream (i.e. the response body)",23,null],[12,"state","","The current stream state.",23,null],[4,"StreamState","","The enum represents all the states that an HTTP/2 stream can be found in.",null,null],[13,"Idle","","",24,null],[13,"ReservedLocal","","",24,null],[13,"ReservedRemote","","",24,null],[13,"Open","","",24,null],[13,"HalfClosedRemote","","",24,null],[13,"HalfClosedLocal","","",24,null],[13,"Closed","","",24,null],[4,"StreamDataError","","The enum represents errors that can be returned from the `Stream::get_data_chunk` method.",null,null],[13,"Closed","","Indicates that the stream cannot provide any data, since it is closed for further writes\nfrom the peer&#39;s side.",25,null],[13,"Other","","A different error while trying to obtain the data chunk. Wraps a boxed `Error` impl.",25,null],[4,"StreamDataChunk","","The enum represents the successful completion of the `Stream::get_data_chunk` method.",null,null],[13,"Chunk","","A data chunk of the given size, after which more chunks can follow.",26,null],[13,"Last","","The chunk was the last one that the stream will ever write.",26,null],[13,"Unavailable","","No data currently available, but the stream isn&#39;t closed yet",26,null],[8,"Session","","A trait that defines the interface between an `HttpConnection` and the higher-levels that use\nit. Essentially, it allows the `HttpConnection` to pass information onto those higher levels\nthrough a well-defined interface.",null,null],[10,"new_data_chunk","","Notifies the `Session` that a new data chunk has arrived on the\nconnection for a particular stream. Only the raw data is passed\nto the callback (all padding is already discarded by the connection).",27,null],[10,"new_headers","","Notifies the `Session` that headers have arrived for a particular\nstream. The given list of headers is already decoded by the connection.",27,null],[10,"end_of_stream","","Notifies the `Session` that a particular stream got closed by the peer.",27,null],[8,"SessionState","","A trait defining a set of methods for accessing and influencing an HTTP/2 session&#39;s state.",null,null],[16,"Stream","","The type of the `Stream` that the `SessionState` manages.",28,null],[10,"insert_stream","","Inserts the given `Stream` into the session&#39;s state, starting to track it.",28,null],[10,"get_stream_ref","","Returns a reference to a `Stream` with the given `StreamId`, if it is found in the current\nsession.",28,null],[10,"get_stream_mut","","Returns a mutable reference to a `Stream` with the given `StreamId`, if it is found in the\ncurrent session.",28,null],[10,"remove_stream","","Removes the stream with the given `StreamId` from the session. If the stream was found in\nthe session, it is returned in the result.",28,null],[10,"iter","","Returns an iterator over the streams currently found in the session.",28,null],[11,"get_closed","","Returns all streams that are closed and tracked by the session state.",28,null],[8,"Stream","","A trait representing a single HTTP/2 stream. An HTTP/2 connection multiplexes a number of\nstreams.",null,null],[10,"new","","Create a new stream with the given ID",29,{"inputs":[{"name":"streamid"}],"output":{"name":"self"}}],[10,"new_data_chunk","","Handle a new data chunk that has arrived for the stream.",29,null],[10,"set_headers","","Set headers for a stream. A stream is only allowed to have one set of\nheaders.",29,null],[10,"set_state","","Sets the stream state to the newly provided state.",29,null],[10,"get_data_chunk","","Places the next data chunk that should be written onto the stream into the given buffer.",29,null],[10,"id","","Returns the ID of the stream.",29,null],[10,"state","","Returns the current state of the stream.",29,null],[11,"close","","Transitions the stream state to closed. After this, the stream is considered to be closed\nfor any further reads or writes.",29,null],[11,"close_local","","Updates the `Stream` status to indicate that it is closed locally.",29,null],[11,"close_remote","","Updates the `Stream` status to indicate that it is closed on the remote peer&#39;s side.",29,null],[11,"is_closed","","Returns whether the stream is closed.",29,null],[11,"is_closed_local","","Returns whether the stream is closed locally.",29,null],[11,"is_closed_remote","","Returns whether the remote peer has closed the stream. This includes a fully closed stream.",29,null],[11,"next","","",30,null],[11,"new","","Creates a new `DefaultSessionState` with no known streams.",31,{"inputs":[],"output":{"name":"defaultsessionstate"}}],[11,"insert_stream","","",31,null],[11,"get_stream_ref","","",31,null],[11,"get_stream_mut","","",31,null],[11,"remove_stream","","",31,null],[11,"iter","","",31,null],[11,"clone","","",24,null],[11,"eq","","",24,null],[11,"fmt","","",24,null],[11,"fmt","","",25,null],[11,"from","","",25,{"inputs":[{"name":"e"}],"output":{"name":"streamdataerror"}}],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",23,null],[11,"new","","Create a new `DefaultStream` with the given ID.",23,{"inputs":[{"name":"streamid"}],"output":{"name":"defaultstream"}}],[11,"set_full_data","","Sets the outgoing data of the stream to the given `Vec`.",23,null],[11,"new","","",23,{"inputs":[{"name":"streamid"}],"output":{"name":"defaultstream"}}],[11,"new_data_chunk","","",23,null],[11,"set_headers","","",23,null],[11,"set_state","","",23,null],[11,"id","","",23,null],[11,"state","","",23,null],[11,"get_data_chunk","","",23,null],[0,"priority","solicit::http","The module exposes an API for defining data prioritization strategies.",null,null],[3,"SimplePrioritizer","solicit::http::priority","An implementation of the `DataPrioritizer` trait that is based on finding the first stream from\nthe given `SessionState` instance that can send data and returning this chunk.",null,null],[8,"DataPrioritizer","","A trait that types that want to provide data to an HTTP/2 connection need to implement.",null,null],[10,"get_next_chunk","","Returns the next `DataChunk` that should be sent on the HTTP/2 connection. `None` indicates\nthat currently there was no data that could be sent at that point.",32,null],[11,"new","","Creates a new `SimplePrioritizer` that will use the given state to find stream data that\nshould be sent and use the given buffer to hold the data of the returned chunk.",33,null],[11,"get_next_chunk","","",33,null],[0,"client","solicit::http","The module contains a number of reusable components for implementing the client side of an\nHTTP/2 connection.",null,null],[3,"ClientStream","solicit::http::client","A convenience wrapper type that represents an established client network transport stream.\nIt wraps the stream itself, the scheme of the protocol to be used, and the remote\nhost name.",null,null],[12,"0","","",34,null],[12,"1","","",34,null],[12,"2","","",34,null],[3,"CleartextConnector","","A struct that establishes a cleartext TCP connection that can be used by an HTTP/2\nconnection. Defaults to using port 80.",null,null],[12,"host","","The host to which the connection should be established",35,null],[12,"port","","The port on which the connection should be established",35,null],[3,"CleartextConnectError","","A newtype wrapping the `io::Error`, as it occurs when attempting to\nestablish an HTTP/2 connection over cleartext TCP (with prior knowledge).",null,null],[3,"RequestStream","","A struct representing a request stream. It provides the headers that are to be sent when\ninitiating the request, as well as a `Stream` instance that handles the received response and\nprovides the request body.",null,null],[12,"headers","","The list of headers that will be sent with the request.",36,null],[12,"stream","","The underlying `Stream` instance, which will handle the response, as well as optionally\nprovide the body of the request.",36,null],[3,"ClientConnection","","The struct extends the `HttpConnection` API with client-specific methods (such as\n`start_request`) and wires the `HttpConnection` to the client `Session` callbacks.",null,null],[12,"state","","The state of the session associated to this client connection. Maintains the status of the\nconnection streams.",37,null],[3,"ClientSession","","An implementation of the `Session` trait specific to handling client HTTP/2 connections.",null,null],[5,"write_preface","","Writes the client preface to the underlying HTTP/2 connection.",null,{"inputs":[{"name":"w"}],"output":{"name":"result"}}],[8,"HttpConnectError","","A marker trait for errors raised by attempting to establish an HTTP/2\nconnection.",null,null],[8,"HttpConnect","","A trait that can be implemented by structs that want to provide the\nfunctionality of establishing network connections for use by HTTP/2 connections.",null,null],[16,"Stream","","The type of the underlying transport stream that the `HttpConnection`s\nproduced by this `HttpConnect` implementation will be based on.",38,null],[16,"Err","","The type of the error that can be produced by trying to establish the\nconnection (i.e. calling the `connect` method).",38,null],[10,"connect","","Establishes a network connection that can be used by HTTP/2 connections.",38,null],[11,"from","solicit::http","",2,{"inputs":[{"name":"e"}],"output":{"name":"httperror"}}],[11,"new","solicit::http::client","Creates a new `CleartextConnector` that will attempt to establish a connection to the given\nhost on port 80.",35,{"inputs":[{"name":"str"}],"output":{"name":"cleartextconnector"}}],[11,"with_port","","Creates a new `CleartextConnector` that will attempt to establish a connection to the given\nhost on the given port.",35,{"inputs":[{"name":"str"},{"name":"u16"}],"output":{"name":"cleartextconnector"}}],[11,"fmt","","",39,null],[11,"fmt","","",39,null],[11,"description","","",39,null],[11,"cause","","",39,null],[11,"from","","",39,{"inputs":[{"name":"error"}],"output":{"name":"cleartextconnecterror"}}],[11,"connect","","Establishes a cleartext TCP connection based on the host and port.\nIf it is not possible, returns an `HttpError`.",35,null],[11,"with_connection","","Creates a new `ClientConnection` that will use the given `HttpConnection`\nfor all its underlying HTTP/2 communication.",37,{"inputs":[{"name":"httpconnection"},{"name":"state"}],"output":{"name":"clientconnection"}}],[11,"scheme","","Returns the scheme of the underlying `HttpConnection`.",37,null],[11,"init","","Performs the initialization of the `ClientConnection`.",37,null],[11,"start_request","","Starts a new request based on the given `RequestStream`.",37,null],[11,"handle_next_frame","","Fully handles the next incoming frame. Events are passed on to the internal `session`\ninstance.",37,null],[11,"send_next_data","","Queues a new DATA frame onto the underlying `SendFrame`.",37,null],[11,"new","","Returns a new `ClientSession` associated to the given state.",40,{"inputs":[{"name":"state"}],"output":{"name":"clientsession"}}],[11,"new_data_chunk","","",40,null],[11,"new_headers","","",40,null],[11,"end_of_stream","","",40,null],[0,"server","solicit::http","The module contains a number of reusable components for implementing the server side of an\nHTTP/2 connection.",null,null],[3,"ServerSession","solicit::http::server","An implementation of the `Session` trait for a server-side HTTP/2 connection.",null,null],[3,"ServerConnection","","The struct provides a more convenient API for server-related functionality of an HTTP/2\nconnection, such as sending a response back to the client.",null,null],[12,"state","","The state of the session associated to this client connection. Maintains the status of the\nconnection streams.",41,null],[11,"new","","",42,{"inputs":[{"name":"state"}],"output":{"name":"serversession"}}],[11,"new_data_chunk","","",42,null],[11,"new_headers","","",42,null],[11,"end_of_stream","","",42,null],[11,"with_connection","","Creates a new `ServerConnection` that will use the given `HttpConnection` for its\nunderlying HTTP/2 communication.",41,{"inputs":[{"name":"httpconnection"},{"name":"state"}],"output":{"name":"serverconnection"}}],[11,"scheme","","Returns the scheme of the underlying `HttpConnection`.",41,null],[11,"init","","Initializes the `ServerConnection` by sending the server&#39;s settings and processing the\nclient&#39;s.\nIf the client does not provide a settings frame, returns an error.",41,null],[11,"handle_next_frame","","Fully handles the next incoming frame. Events are passed on to the internal `session`\ninstance.",41,null],[11,"start_response","","Starts a response on the stream with the given ID by sending the given headers.",41,null],[11,"send_next_data","","Queues a new DATA frame onto the underlying `SendFrame`.",41,null],[6,"StreamId","solicit::http","An alias for the type that represents the ID of an HTTP/2 stream",null,null],[6,"Header","","An alias for the type that represents HTTP/2 headers. For now we only alias\nthe tuple of byte vectors instead of going with a full struct representation.",null,null],[6,"HttpResult","","A convenience `Result` type that has the `HttpError` type as the error\ntype and a generic Ok result type.",null,null],[17,"ALPN_PROTOCOLS","","A set of protocol names that the library should use to indicate that HTTP/2\nis supported during protocol negotiation (NPN or ALPN).\nWe include some of the drafts&#39; protocol names, since there is basically no\ndifference for all intents and purposes (and some servers out there still\nonly officially advertise draft support).\nTODO: Eventually only use &quot;h2&quot;.",null,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"httperror"}}],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"cause","","",2,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"as_bytes","","Returns a byte string representing the scheme.",3,null],[11,"clone","","",0,null],[11,"new","","Creates a new `Response` with all the components already provided.",0,{"inputs":[{"name":"streamid"},{"name":"vec"},{"name":"vec"}],"output":{"name":"response"}}],[11,"status_code","","Gets the response status code from the pseudo-header. If the response\ndoes not contain the response as the first pseuo-header, an error is\nreturned as such a response is malformed.",0,null],[11,"clone","","",1,null],[0,"client","solicit","The module contains implementations of HTTP/2 clients that could be\ndirectly used to access HTTP/2 servers, i.e. send requests and read\nresponses.",null,null],[3,"SimpleClient","solicit::client","A struct implementing a simple HTTP/2 client.",null,null],[3,"Client","","A struct representing an HTTP/2 client that receives responses to its\nrequests asynchronously. Additionally, this client can be cloned and all\nclones can issue (concurrently) requests to the server, using the same\nunderlying HTTP/2 connection.",null,null],[11,"with_connection","","Create a new `SimpleClient` instance that will use the given `HttpConnection`\nto communicate to the server.",43,{"inputs":[{"name":"httpconnection"},{"name":"string"}],"output":{"name":"httpresult"}}],[11,"with_connector","","A convenience constructor that first tries to establish an HTTP/2\nconnection by using the given connector instance (an implementation of\nthe `HttpConnect` trait).",43,{"inputs":[{"name":"c"}],"output":{"name":"httpresult"}}],[11,"request","","Send a request to the server. Blocks until the entire request has been\nsent.",43,null],[11,"get_response","","Gets the response for the stream with the given ID. If a valid stream ID\nis given, it blocks until a response is received.",43,null],[11,"get","","Performs a GET request on the given path. This is a shortcut method for\ncalling `request` followed by `get_response` for the returned stream ID.",43,null],[11,"post","","Performs a POST request on the given path.",43,null],[11,"clone","","",44,null],[11,"drop","","",44,null],[11,"with_connector","","Creates a brand new HTTP/2 client. This means that a new HTTP/2\nconnection will be established behind the scenes. A thread is spawned\nto handle the connection in the background, so that the thread that\ncreates the client can use it asynchronously.",44,{"inputs":[{"name":"c"}],"output":{"name":"option"}}],[11,"request","","Issues a new request to the server.",44,null],[11,"get","","Issues a GET request to the server.",44,null],[11,"post","","Issues a POST request to the server.",44,null],[0,"server","solicit","The module contains a simple HTTP/2 server implementation.",null,null],[3,"ServerRequest","solicit::server","The struct represents a fully received request.",null,null],[12,"stream_id","","",45,null],[12,"headers","","",45,null],[12,"body","","",45,null],[3,"SimpleServer","","The struct implements a simple HTTP/2 server that allows users to register a request handler (a\ncallback taking a `ServerRequest` and returning a `Response`) which is run on all received\nrequests.",null,null],[11,"new","","Creates a new `SimpleServer` that will use the given `TransportStream` to communicate to\nthe client. Assumes that the stream is fully uninitialized -- no preface sent or read yet.",46,{"inputs":[{"name":"ts"},{"name":"h"}],"output":{"name":"httpresult"}}],[11,"handle_next","","Handles the next incoming frame, blocking to receive it if nothing is available on the\nunderlying stream.",46,null]],"paths":[[3,"Response"],[3,"Request"],[4,"HttpError"],[4,"HttpScheme"],[3,"DataFrame"],[4,"DataFlag"],[3,"StreamDependency"],[3,"HeadersFrame"],[4,"HeadersFlag"],[3,"SettingsFrame"],[4,"HttpSetting"],[4,"SettingsFlag"],[8,"Flag"],[8,"Frame"],[3,"RawFrame"],[8,"TransportStream"],[3,"HttpConnection"],[3,"DataChunk"],[4,"HttpFrame"],[4,"SendStatus"],[4,"EndStream"],[8,"SendFrame"],[8,"ReceiveFrame"],[3,"DefaultStream"],[4,"StreamState"],[4,"StreamDataError"],[4,"StreamDataChunk"],[8,"Session"],[8,"SessionState"],[8,"Stream"],[3,"StreamIter"],[3,"DefaultSessionState"],[8,"DataPrioritizer"],[3,"SimplePrioritizer"],[3,"ClientStream"],[3,"CleartextConnector"],[3,"RequestStream"],[3,"ClientConnection"],[8,"HttpConnect"],[3,"CleartextConnectError"],[3,"ClientSession"],[3,"ServerConnection"],[3,"ServerSession"],[3,"SimpleClient"],[3,"Client"],[3,"ServerRequest"],[3,"SimpleServer"]]};
searchIndex["time"] = {"doc":"Simple time handling.","items":[[3,"Duration","time","ISO 8601 time duration with nanosecond precision.\nThis also allows for the negative duration; see individual methods for details.",null,null],[3,"OutOfRangeError","","Represents error when converting `Duration` to/from a standard library\nimplementation",null,null],[3,"Timespec","","A record specifying a time value in seconds and nanoseconds, where\nnanoseconds represent the offset from the given second.",null,null],[12,"sec","","",0,null],[12,"nsec","","",0,null],[3,"PreciseTime","","An opaque structure representing a moment in time.",null,null],[3,"SteadyTime","","A structure representing a moment in time.",null,null],[3,"Tm","","Holds a calendar date and time broken down into its components (year, month,\nday, and so on), also called a broken-down time value.",null,null],[12,"tm_sec","","Seconds after the minute - [0, 60]",1,null],[12,"tm_min","","Minutes after the hour - [0, 59]",1,null],[12,"tm_hour","","Hours after midnight - [0, 23]",1,null],[12,"tm_mday","","Day of the month - [1, 31]",1,null],[12,"tm_mon","","Months since January - [0, 11]",1,null],[12,"tm_year","","Years since 1900",1,null],[12,"tm_wday","","Days since Sunday - [0, 6]. 0 = Sunday, 1 = Monday, ..., 6 = Saturday.",1,null],[12,"tm_yday","","Days since January 1 - [0, 365]",1,null],[12,"tm_isdst","","Daylight Saving Time flag.",1,null],[12,"tm_utcoff","","Identifies the time zone that was used to compute this broken-down time\nvalue, including any adjustment for Daylight Saving Time. This is the\nnumber of seconds east of UTC. For example, for U.S. Pacific Daylight\nTime, the value is -7*60*60 = -25200.",1,null],[12,"tm_nsec","","Nanoseconds after the second - [0, 10&lt;sup&gt;9&lt;/sup&gt; - 1]",1,null],[3,"TmFmt","","A wrapper around a `Tm` and format string that implements Display.",null,null],[4,"ParseError","","",null,null],[13,"InvalidSecond","","",2,null],[13,"InvalidMinute","","",2,null],[13,"InvalidHour","","",2,null],[13,"InvalidDay","","",2,null],[13,"InvalidMonth","","",2,null],[13,"InvalidYear","","",2,null],[13,"InvalidDayOfWeek","","",2,null],[13,"InvalidDayOfMonth","","",2,null],[13,"InvalidDayOfYear","","",2,null],[13,"InvalidZoneOffset","","",2,null],[13,"InvalidTime","","",2,null],[13,"InvalidSecondsSinceEpoch","","",2,null],[13,"MissingFormatConverter","","",2,null],[13,"InvalidFormatSpecifier","","",2,null],[13,"UnexpectedCharacter","","",2,null],[5,"strptime","","Parses the time from the string according to the format string.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[5,"get_time","","Returns the current time as a `timespec` containing the seconds and\nnanoseconds since 1970-01-01T00:00:00Z.",null,{"inputs":[],"output":{"name":"timespec"}}],[5,"precise_time_ns","","Returns the current value of a high-resolution performance counter\nin nanoseconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"precise_time_s","","Returns the current value of a high-resolution performance counter\nin seconds since an unspecified epoch.",null,{"inputs":[],"output":{"name":"f64"}}],[5,"tzset","","",null,{"inputs":[],"output":null}],[5,"empty_tm","","",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at_utc","","Returns the specified time in UTC",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now_utc","","Returns the current time in UTC",null,{"inputs":[],"output":{"name":"tm"}}],[5,"at","","Returns the specified time in the local timezone",null,{"inputs":[{"name":"timespec"}],"output":{"name":"tm"}}],[5,"now","","Returns the current time in the local timezone",null,{"inputs":[],"output":{"name":"tm"}}],[5,"strftime","","Formats the time according to the format string.",null,{"inputs":[{"name":"str"},{"name":"tm"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"gt","","",4,null],[11,"ge","","",4,null],[11,"cmp","","",4,null],[11,"fmt","","",4,null],[11,"weeks","","Makes a new `Duration` with given number of weeks.\nEquivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"days","","Makes a new `Duration` with given number of days.\nEquivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"hours","","Makes a new `Duration` with given number of hours.\nEquivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"minutes","","Makes a new `Duration` with given number of minutes.\nEquivalent to `Duration::seconds(minutes * 60)` with overflow checks.\nPanics when the duration is out of bounds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"seconds","","Makes a new `Duration` with given number of seconds.\nPanics when the duration is more than `i64::MAX` milliseconds\nor less than `i64::MIN` milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"milliseconds","","Makes a new `Duration` with given number of milliseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"microseconds","","Makes a new `Duration` with given number of microseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"nanoseconds","","Makes a new `Duration` with given number of nanoseconds.",4,{"inputs":[{"name":"i64"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",4,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"num_weeks","","Returns the total number of whole weeks in the duration.",4,null],[11,"num_days","","Returns the total number of whole days in the duration.",4,null],[11,"num_hours","","Returns the total number of whole hours in the duration.",4,null],[11,"num_minutes","","Returns the total number of whole minutes in the duration.",4,null],[11,"num_seconds","","Returns the total number of whole seconds in the duration.",4,null],[11,"num_milliseconds","","Returns the total number of whole milliseconds in the duration,",4,null],[11,"num_microseconds","","Returns the total number of whole microseconds in the duration,\nor `None` on overflow (exceeding 2^63 microseconds in either direction).",4,null],[11,"num_nanoseconds","","Returns the total number of whole nanoseconds in the duration,\nor `None` on overflow (exceeding 2^63 nanoseconds in either direction).",4,null],[11,"checked_add","","Add two durations, returning `None` if overflow occurred.",4,null],[11,"checked_sub","","Subtract two durations, returning `None` if overflow occurred.",4,null],[11,"min_value","","The minimum possible `Duration`: `i64::MIN` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"max_value","","The maximum possible `Duration`: `i64::MAX` milliseconds.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"zero","","A duration where the stored seconds and nanoseconds are equal to zero.",4,{"inputs":[],"output":{"name":"duration"}}],[11,"is_zero","","Returns `true` if the duration equals `Duration::zero()`.",4,null],[11,"from_std","","Creates a `time::Duration` object from `std::time::Duration`",4,{"inputs":[{"name":"stdduration"}],"output":{"name":"result"}}],[11,"to_std","","Creates a `std::time::Duration` object from `time::Duration`",4,null],[11,"neg","","",4,null],[11,"add","","",4,null],[11,"sub","","",4,null],[11,"mul","","",4,null],[11,"div","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"new","","",0,{"inputs":[{"name":"i64"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"sub","","",0,null],[11,"clone","","",6,null],[11,"now","","Returns a `PreciseTime` representing the current moment in time.",6,{"inputs":[],"output":{"name":"precisetime"}}],[11,"to","","Returns a `Duration` representing the span of time from the value of\n`self` to the value of `later`.",6,null],[11,"clone","","",7,null],[11,"partial_cmp","","",7,null],[11,"lt","","",7,null],[11,"le","","",7,null],[11,"gt","","",7,null],[11,"ge","","",7,null],[11,"cmp","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"now","","Returns a `SteadyTime` representing the current moment in time.",7,{"inputs":[],"output":{"name":"steadytime"}}],[11,"fmt","","",7,null],[11,"sub","","",7,null],[11,"sub","","",7,null],[11,"add","","",7,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"add","","The resulting Tm is in UTC.",1,null],[11,"sub","","The resulting Tm is in UTC.",1,null],[11,"sub","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"to_timespec","","Convert time to the seconds from January 1, 1970",1,null],[11,"to_local","","Convert time to the local timezone",1,null],[11,"to_utc","","Convert time to the UTC",1,null],[11,"ctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC, in the local timezone.",1,null],[11,"asctime","","Returns a TmFmt that outputs according to the `asctime` format in ISO\nC.",1,null],[11,"strftime","","Formats the time according to the format string.",1,null],[11,"rfc822","","Returns a TmFmt that outputs according to RFC 822.",1,null],[11,"rfc822z","","Returns a TmFmt that outputs according to RFC 822 with Zulu time.",1,null],[11,"rfc3339","","Returns a TmFmt that outputs according to RFC 3339. RFC 3339 is\ncompatible with ISO 8601.",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"description","","",2,null],[11,"fmt","","",3,null]],"paths":[[3,"Timespec"],[3,"Tm"],[4,"ParseError"],[3,"TmFmt"],[3,"Duration"],[3,"OutOfRangeError"],[3,"PreciseTime"],[3,"SteadyTime"]]};
searchIndex["kernel32"] = {"doc":"","items":[],"paths":[]};
searchIndex["hpack"] = {"doc":"A module implementing HPACK functionality. Exposes a simple API for\nperforming the encoding and decoding of header sets, according to the\nHPACK spec.","items":[[0,"encoder","hpack","Implements all functionality related to encoding header blocks using\nHPACK.",null,null],[3,"Encoder","hpack::encoder","Represents an HPACK encoder. Allows clients to encode arbitrary header sets\nand tracks the encoding context. That is, encoding subsequent header sets\nwill use the context built by previous encode calls.",null,null],[5,"encode_integer","","Encode an integer to the representation defined by HPACK.",null,{"inputs":[{"name":"usize"},{"name":"u8"}],"output":{"name":"vec"}}],[11,"new","","Creates a new `Encoder` with a default static table, as defined by the\nHPACK spec (Appendix A).",0,{"inputs":[],"output":{"name":"encoder"}}],[11,"encode","","Encodes the given headers using the HPACK rules and returns a newly\nallocated `Vec` containing the bytes representing the encoded header\nset.",0,null],[0,"decoder","hpack","Exposes the struct `Decoder` that allows for HPACK-encoded header blocks to\nbe decoded into a header list.",null,null],[3,"Decoder","hpack::decoder","Decodes headers encoded using HPACK.",null,null],[4,"IntegerDecodingError","","Represents all errors that can be encountered while decoding an\ninteger.",null,null],[13,"TooManyOctets","","5.1. specifies that &quot;excessively large integer decodings&quot; MUST be\nconsidered an error (whether the size is the number of octets or\nvalue). This variant corresponds to the encoding containing too many\noctets.",1,null],[13,"ValueTooLarge","","The variant corresponds to the case where the value of the integer\nbeing decoded exceeds a certain threshold.",1,null],[13,"NotEnoughOctets","","When a buffer from which an integer was supposed to be encoded does\nnot contain enough octets to complete the decoding.",1,null],[13,"InvalidPrefix","","Only valid prefixes are [1, 8]",1,null],[4,"StringDecodingError","","Represents all errors that can be encountered while decoding an octet\nstring.",null,null],[13,"NotEnoughOctets","","",2,null],[13,"HuffmanDecoderError","","",2,null],[4,"DecoderError","","Represents all errors that can be encountered while performing the decoding\nof an HPACK header set.",null,null],[13,"HeaderIndexOutOfBounds","","",3,null],[13,"IntegerDecodingError","","",3,null],[13,"StringDecodingError","","",3,null],[13,"InvalidMaxDynamicSize","","The size of the dynamic table can never be allowed to exceed the max\nsize mandated to the decoder by the protocol. (by perfroming changes\nmade by SizeUpdate blocks).",3,null],[6,"DecoderResult","","The result returned by the `decode` method of the `Decoder`.",null,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"new","","Creates a new `Decoder` with all settings set to default values.",4,{"inputs":[],"output":{"name":"decoder"}}],[11,"set_max_table_size","","Sets a new maximum dynamic table size for the decoder.",4,null],[11,"decode","","Decode the header block found in the given buffer.",4,null],[0,"huffman","hpack","A module exposing utilities for encoding and decoding Huffman-coded octet\nstrings, under the Huffman code defined by HPACK.\n(HPACK-draft-10, Appendix B)",null,null],[3,"HuffmanDecoder","hpack::huffman","A simple implementation of a Huffman code decoder.",null,null],[4,"HuffmanDecoderError","","Represents the error variants that the `HuffmanDecoder` can return.",null,null],[13,"PaddingTooLarge","","Any padding strictly larger than 7 bits MUST be interpreted as an error",5,null],[13,"InvalidPadding","","Any padding that does not correspond to the most significant bits of\nEOS MUST be interpreted as an error.",5,null],[13,"EOSInString","","If EOS is ever found in the string, it causes an error.",5,null],[6,"HuffmanDecoderResult","","The type that represents the result of the `decode` method of the\n`HuffmanDecoder`.",null,null],[11,"eq","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"new","","Constructs a new HuffmanDecoder with the default Huffman code table, as\ndefined in the HPACK-draft-10, Appendix B.",6,{"inputs":[],"output":{"name":"huffmandecoder"}}],[11,"decode","","Decodes the buffer `buf` into a newly allocated `Vec`.",6,null]],"paths":[[3,"Encoder"],[4,"IntegerDecodingError"],[4,"StringDecodingError"],[4,"DecoderError"],[3,"Decoder"],[4,"HuffmanDecoderError"],[3,"HuffmanDecoder"]]};
searchIndex["serde_json"] = {"doc":"JSON and serialization","items":[[0,"builder","serde_json","JSON Builders",null,null],[3,"ArrayBuilder","serde_json::builder","This structure provides a simple interface for constructing a JSON array.",null,null],[3,"ObjectBuilder","","This structure provides a simple interface for constructing a JSON object.",null,null],[11,"default","","",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",0,{"inputs":[],"output":{"name":"arraybuilder"}}],[11,"build","","Return the constructed `Value`.",0,null],[11,"push","","Insert a value into the array.",0,null],[11,"push_array","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting array into\nthis array.",0,null],[11,"push_object","","Creates and passes an `ArrayBuilder` into a closure, then inserts the resulting object into\nthis array.",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"new","","Construct an `ObjectBuilder`.",1,{"inputs":[],"output":{"name":"objectbuilder"}}],[11,"build","","Return the constructed `Value`.",1,null],[11,"insert","","Insert a key-value pair into the object.",1,null],[11,"insert_array","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting array into\nthis object.",1,null],[11,"insert_object","","Creates and passes an `ObjectBuilder` into a closure, then inserts the resulting object into\nthis object.",1,null],[0,"de","serde_json","JSON Deserialization",null,null],[3,"Deserializer","serde_json::de","A structure that deserializes JSON into Rust values.",null,null],[3,"StreamDeserializer","","Iterator that deserializes a stream into multiple JSON values.",null,null],[5,"from_iter","","Decodes a json value from an iterator over an iterator\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"from_reader","","Decodes a json value from a `std::io::Read`.",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"from_slice","","Decodes a json value from a byte slice `&amp;[u8]`.",null,null],[5,"from_str","","Decodes a json value from a `&amp;str`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Creates the JSON parser from an `std::iter::Iterator`.",2,{"inputs":[{"name":"iter"}],"output":{"name":"self"}}],[11,"end","","The `Deserializer::end` method should be called after a value has been fully deserialized.\nThis allows the `Deserializer` to validate that the input stream is at the end or that it\nonly has trailing whitespace.",2,null],[11,"deserialize","","",2,null],[11,"deserialize_option","","Parses a `null` as a None, and any other values as a `Some(...)`.",2,null],[11,"deserialize_newtype_struct","","Parses a newtype struct as the underlying value.",2,null],[11,"deserialize_enum","","Parses an enum as an object like `{&quot;$KEY&quot;:$VALUE}`, where $VALUE is either a straight\nvalue, a `[..]`, or a `{..}`.",2,null],[11,"deserialize_bool","","",2,null],[11,"deserialize_usize","","",2,null],[11,"deserialize_u8","","",2,null],[11,"deserialize_u16","","",2,null],[11,"deserialize_u32","","",2,null],[11,"deserialize_u64","","",2,null],[11,"deserialize_isize","","",2,null],[11,"deserialize_i8","","",2,null],[11,"deserialize_i16","","",2,null],[11,"deserialize_i32","","",2,null],[11,"deserialize_i64","","",2,null],[11,"deserialize_f32","","",2,null],[11,"deserialize_f64","","",2,null],[11,"deserialize_char","","",2,null],[11,"deserialize_str","","",2,null],[11,"deserialize_string","","",2,null],[11,"deserialize_unit","","",2,null],[11,"deserialize_seq","","",2,null],[11,"deserialize_seq_fixed_size","","",2,null],[11,"deserialize_bytes","","",2,null],[11,"deserialize_map","","",2,null],[11,"deserialize_unit_struct","","",2,null],[11,"deserialize_tuple_struct","","",2,null],[11,"deserialize_struct","","",2,null],[11,"deserialize_struct_field","","",2,null],[11,"deserialize_tuple","","",2,null],[11,"deserialize_ignored_any","","",2,null],[11,"new","","Returns an `Iterator` of decoded JSON values from an iterator over\n`Iterator&lt;Item=io::Result&lt;u8&gt;&gt;`.",3,{"inputs":[{"name":"iter"}],"output":{"name":"streamdeserializer"}}],[11,"next","","",3,null],[0,"error","serde_json","JSON Errors",null,null],[4,"ErrorCode","serde_json::error","The errors that can arise while parsing a JSON stream.",null,null],[13,"Custom","","Catchall for syntax error messages",4,null],[13,"InvalidType","","Incorrect type from value",4,null],[13,"InvalidValue","","Incorrect value",4,null],[13,"InvalidLength","","Invalid length",4,null],[13,"UnknownVariant","","Unknown variant in an enum.",4,null],[13,"UnknownField","","Unknown field in struct.",4,null],[13,"MissingField","","Struct is missing a field.",4,null],[13,"EOFWhileParsingList","","EOF while parsing a list.",4,null],[13,"EOFWhileParsingObject","","EOF while parsing an object.",4,null],[13,"EOFWhileParsingString","","EOF while parsing a string.",4,null],[13,"EOFWhileParsingValue","","EOF while parsing a JSON value.",4,null],[13,"ExpectedColon","","Expected this character to be a `&#39;:&#39;`.",4,null],[13,"ExpectedListCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `]`.",4,null],[13,"ExpectedObjectCommaOrEnd","","Expected this character to be either a `&#39;,&#39;` or a `}`.",4,null],[13,"ExpectedSomeIdent","","Expected to parse either a `true`, `false`, or a `null`.",4,null],[13,"ExpectedSomeValue","","Expected this character to start a JSON value.",4,null],[13,"InvalidEscape","","Invalid hex escape code.",4,null],[13,"InvalidNumber","","Invalid number.",4,null],[13,"NumberOutOfRange","","Number is bigger than the maximum value of its type.",4,null],[13,"InvalidUnicodeCodePoint","","Invalid unicode code point.",4,null],[13,"KeyMustBeAString","","Object key is not a string.",4,null],[13,"LoneLeadingSurrogateInHexEscape","","Lone leading surrogate in hex escape.",4,null],[13,"TrailingCharacters","","JSON has non-whitespace trailing characters after the value.",4,null],[13,"UnexpectedEndOfHexEscape","","Unexpected end of hex excape.",4,null],[4,"Error","","This type represents all possible errors that can occur when serializing or deserializing a\nvalue into JSON.",null,null],[13,"Syntax","","The JSON value had some syntatic error.",5,null],[13,"Io","","Some IO error occurred when serializing or deserializing a value.",5,null],[6,"Result","","Helper alias for `Result` objects that return a JSON `Error`.",null,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"description","","",5,null],[11,"cause","","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"custom","","",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[11,"end_of_stream","","",5,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_type","","",5,{"inputs":[{"name":"type"}],"output":{"name":"error"}}],[11,"invalid_value","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"invalid_length","","",5,{"inputs":[{"name":"usize"}],"output":{"name":"error"}}],[11,"unknown_variant","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"unknown_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"missing_field","","",5,{"inputs":[{"name":"str"}],"output":{"name":"error"}}],[11,"custom","","Raised when there is general error when deserializing a type.",5,{"inputs":[{"name":"t"}],"output":{"name":"error"}}],[0,"ser","serde_json","JSON Serialization",null,null],[3,"Serializer","serde_json::ser","A structure for serializing Rust values into JSON.",null,null],[3,"CompactFormatter","","This structure compacts a JSON value with no extra whitespace.",null,null],[3,"PrettyFormatter","","This structure pretty prints a JSON value to make it human readable.",null,null],[5,"escape_str","","Serializes and escapes a `&amp;str` into a JSON string.",null,{"inputs":[{"name":"w"},{"name":"str"}],"output":{"name":"result"}}],[5,"to_writer","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_writer_pretty","","Encode the specified struct into a json `[u8]` writer.",null,{"inputs":[{"name":"w"},{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_vec_pretty","","Encode the specified struct into a json `[u8]` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[5,"to_string_pretty","","Encode the specified struct into a json `String` buffer.",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"Formatter","","This trait abstracts away serializing the JSON control characters, which allows the user to\noptionally pretty print the JSON output.",null,null],[10,"open","","Called when serializing a &#39;{&#39; or &#39;[&#39;.",6,null],[10,"comma","","Called when serializing a &#39;,&#39;.",6,null],[10,"colon","","Called when serializing a &#39;:&#39;.",6,null],[10,"close","","Called when serializing a &#39;}&#39; or &#39;]&#39;.",6,null],[11,"new","","Creates a new JSON serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"pretty","","Creates a new JSON pretty print serializer.",7,{"inputs":[{"name":"w"}],"output":{"name":"self"}}],[11,"with_formatter","","Creates a new JSON visitor whose output will be written to the writer\nspecified.",7,{"inputs":[{"name":"w"},{"name":"f"}],"output":{"name":"self"}}],[11,"into_inner","","Unwrap the `Writer` from the `Serializer`.",7,null],[11,"serialize_bool","","",7,null],[11,"serialize_isize","","",7,null],[11,"serialize_i8","","",7,null],[11,"serialize_i16","","",7,null],[11,"serialize_i32","","",7,null],[11,"serialize_i64","","",7,null],[11,"serialize_usize","","",7,null],[11,"serialize_u8","","",7,null],[11,"serialize_u16","","",7,null],[11,"serialize_u32","","",7,null],[11,"serialize_u64","","",7,null],[11,"serialize_f32","","",7,null],[11,"serialize_f64","","",7,null],[11,"serialize_char","","",7,null],[11,"serialize_str","","",7,null],[11,"serialize_bytes","","",7,null],[11,"serialize_unit","","",7,null],[11,"serialize_unit_struct","","",7,null],[11,"serialize_unit_variant","","",7,null],[11,"serialize_newtype_struct","","Serialize newtypes without an object wrapper.",7,null],[11,"serialize_newtype_variant","","",7,null],[11,"serialize_none","","",7,null],[11,"serialize_some","","",7,null],[11,"serialize_seq","","",7,null],[11,"serialize_seq_elt","","",7,null],[11,"serialize_seq_end","","",7,null],[11,"serialize_seq_fixed_size","","",7,null],[11,"serialize_tuple","","",7,null],[11,"serialize_tuple_elt","","",7,null],[11,"serialize_tuple_end","","",7,null],[11,"serialize_tuple_struct","","",7,null],[11,"serialize_tuple_struct_elt","","",7,null],[11,"serialize_tuple_struct_end","","",7,null],[11,"serialize_tuple_variant","","",7,null],[11,"serialize_tuple_variant_elt","","",7,null],[11,"serialize_tuple_variant_end","","",7,null],[11,"serialize_map","","",7,null],[11,"serialize_map_key","","",7,null],[11,"serialize_map_value","","",7,null],[11,"serialize_map_end","","",7,null],[11,"serialize_struct","","",7,null],[11,"serialize_struct_elt","","",7,null],[11,"serialize_struct_end","","",7,null],[11,"serialize_struct_variant","","",7,null],[11,"serialize_struct_variant_elt","","",7,null],[11,"serialize_struct_variant_end","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"open","","",8,null],[11,"comma","","",8,null],[11,"colon","","",8,null],[11,"close","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"new","","Construct a pretty printer formatter that defaults to using two spaces for indentation.",9,{"inputs":[],"output":{"name":"self"}}],[11,"with_indent","","Construct a pretty printer formatter that uses the `indent` string for indentation.",9,null],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"open","","",9,null],[11,"comma","","",9,null],[11,"colon","","",9,null],[11,"close","","",9,null],[0,"value","serde_json","JSON Value",null,null],[3,"Serializer","serde_json::value","Create a `serde::Serializer` that serializes a `Serialize`e into a `Value`.",null,null],[3,"Deserializer","","Creates a `serde::Deserializer` from a `json::Value` object.",null,null],[4,"Value","","Represents a JSON value",null,null],[13,"Null","","Represents a JSON null value",10,null],[13,"Bool","","Represents a JSON Boolean",10,null],[13,"I64","","Represents a JSON signed integer",10,null],[13,"U64","","Represents a JSON unsigned integer",10,null],[13,"F64","","Represents a JSON floating point number",10,null],[13,"String","","Represents a JSON string",10,null],[13,"Array","","Represents a JSON array",10,null],[13,"Object","","Represents a JSON object",10,null],[5,"to_value","","Shortcut function to encode a `T` into a JSON `Value`",null,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[5,"from_value","","Shortcut function to decode a JSON `Value` into a `T`",null,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[6,"Map","","Represents a key/value type.",null,null],[6,"MapIntoIter","","Represents the `IntoIter` type.",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",11,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"find","","If the `Value` is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",10,null],[11,"find_path","","Attempts to get a nested Value Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the `Value` associated with the final key.",10,null],[11,"lookup","","**Deprecated**: Use `Value.pointer()` and pointer syntax instead.",10,null],[11,"pointer","","Looks up a value by a JSON Pointer.",10,null],[11,"pointer_mut","","Looks up a value by a JSON Pointer and returns a mutable reference to\nthat value.",10,null],[11,"search","","If the `Value` is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the `Value` is not an Object, returns None.",10,null],[11,"is_object","","Returns true if the `Value` is an Object. Returns false otherwise.",10,null],[11,"as_object","","If the `Value` is an Object, returns the associated Map.\nReturns None otherwise.",10,null],[11,"as_object_mut","","If the `Value` is an Object, returns the associated mutable Map.\nReturns None otherwise.",10,null],[11,"is_array","","Returns true if the `Value` is an Array. Returns false otherwise.",10,null],[11,"as_array","","If the `Value` is an Array, returns the associated vector.\nReturns None otherwise.",10,null],[11,"as_array_mut","","If the `Value` is an Array, returns the associated mutable vector.\nReturns None otherwise.",10,null],[11,"is_string","","Returns true if the `Value` is a String. Returns false otherwise.",10,null],[11,"as_str","","If the `Value` is a String, returns the associated str.\nReturns None otherwise.",10,null],[11,"is_number","","Returns true if the `Value` is a Number. Returns false otherwise.",10,null],[11,"is_i64","","Returns true if the `Value` is a i64. Returns false otherwise.",10,null],[11,"is_u64","","Returns true if the `Value` is a u64. Returns false otherwise.",10,null],[11,"is_f64","","Returns true if the `Value` is a f64. Returns false otherwise.",10,null],[11,"as_i64","","If the `Value` is a number, return or cast it to a i64.\nReturns None otherwise.",10,null],[11,"as_u64","","If the `Value` is a number, return or cast it to a u64.\nReturns None otherwise.",10,null],[11,"as_f64","","If the `Value` is a number, return or cast it to a f64.\nReturns None otherwise.",10,null],[11,"is_boolean","","Returns true if the `Value` is a Boolean. Returns false otherwise.",10,null],[11,"as_bool","","If the `Value` is a Boolean, returns the associated bool.\nReturns None otherwise.",10,null],[11,"is_null","","Returns true if the `Value` is a Null. Returns false otherwise.",10,null],[11,"as_null","","If the `Value` is a Null, returns ().\nReturns None otherwise.",10,null],[11,"serialize","","",10,null],[11,"deserialize","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","Serializes a json value into a string",10,null],[11,"fmt","","Serializes a json value into a string",10,null],[11,"from_str","","",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new","","Construct a new `Serializer`.",12,{"inputs":[],"output":{"name":"serializer"}}],[11,"unwrap","","Unwrap the `Serializer` and return the `Value`.",12,null],[11,"default","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"serialize_bool","","",12,null],[11,"serialize_isize","","",12,null],[11,"serialize_i8","","",12,null],[11,"serialize_i16","","",12,null],[11,"serialize_i32","","",12,null],[11,"serialize_i64","","",12,null],[11,"serialize_usize","","",12,null],[11,"serialize_u8","","",12,null],[11,"serialize_u16","","",12,null],[11,"serialize_u32","","",12,null],[11,"serialize_u64","","",12,null],[11,"serialize_f32","","",12,null],[11,"serialize_f64","","",12,null],[11,"serialize_char","","",12,null],[11,"serialize_str","","",12,null],[11,"serialize_bytes","","",12,null],[11,"serialize_unit","","",12,null],[11,"serialize_unit_struct","","",12,null],[11,"serialize_unit_variant","","",12,null],[11,"serialize_newtype_struct","","",12,null],[11,"serialize_newtype_variant","","",12,null],[11,"serialize_none","","",12,null],[11,"serialize_some","","",12,null],[11,"serialize_seq","","",12,null],[11,"serialize_seq_elt","","",12,null],[11,"serialize_seq_end","","",12,null],[11,"serialize_seq_fixed_size","","",12,null],[11,"serialize_tuple","","",12,null],[11,"serialize_tuple_elt","","",12,null],[11,"serialize_tuple_end","","",12,null],[11,"serialize_tuple_struct","","",12,null],[11,"serialize_tuple_struct_elt","","",12,null],[11,"serialize_tuple_struct_end","","",12,null],[11,"serialize_tuple_variant","","",12,null],[11,"serialize_tuple_variant_elt","","",12,null],[11,"serialize_tuple_variant_end","","",12,null],[11,"serialize_map","","",12,null],[11,"serialize_map_key","","",12,null],[11,"serialize_map_value","","",12,null],[11,"serialize_map_end","","",12,null],[11,"serialize_struct","","",12,null],[11,"serialize_struct_elt","","",12,null],[11,"serialize_struct_end","","",12,null],[11,"serialize_struct_variant","","",12,null],[11,"serialize_struct_variant_elt","","",12,null],[11,"serialize_struct_variant_end","","",12,null],[11,"new","","Creates a new deserializer instance for deserializing the specified JSON value.",13,{"inputs":[{"name":"value"}],"output":{"name":"deserializer"}}],[11,"deserialize","","",13,null],[11,"deserialize_option","","",13,null],[11,"deserialize_enum","","",13,null],[11,"deserialize_newtype_struct","","",13,null],[11,"deserialize_bool","","",13,null],[11,"deserialize_usize","","",13,null],[11,"deserialize_u8","","",13,null],[11,"deserialize_u16","","",13,null],[11,"deserialize_u32","","",13,null],[11,"deserialize_u64","","",13,null],[11,"deserialize_isize","","",13,null],[11,"deserialize_i8","","",13,null],[11,"deserialize_i16","","",13,null],[11,"deserialize_i32","","",13,null],[11,"deserialize_i64","","",13,null],[11,"deserialize_f32","","",13,null],[11,"deserialize_f64","","",13,null],[11,"deserialize_char","","",13,null],[11,"deserialize_str","","",13,null],[11,"deserialize_string","","",13,null],[11,"deserialize_unit","","",13,null],[11,"deserialize_seq","","",13,null],[11,"deserialize_seq_fixed_size","","",13,null],[11,"deserialize_bytes","","",13,null],[11,"deserialize_map","","",13,null],[11,"deserialize_unit_struct","","",13,null],[11,"deserialize_tuple_struct","","",13,null],[11,"deserialize_struct","","",13,null],[11,"deserialize_struct_field","","",13,null],[11,"deserialize_tuple","","",13,null],[11,"deserialize_ignored_any","","",13,null]],"paths":[[3,"ArrayBuilder"],[3,"ObjectBuilder"],[3,"Deserializer"],[3,"StreamDeserializer"],[4,"ErrorCode"],[4,"Error"],[8,"Formatter"],[3,"Serializer"],[3,"CompactFormatter"],[3,"PrettyFormatter"],[4,"Value"],[8,"ToJson"],[3,"Serializer"],[3,"Deserializer"]]};
searchIndex["openssl_sys_extras"] = {"doc":"","items":[[5,"SSL_CTX_set_options","openssl_sys_extras","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"HMAC_Init_ex","","",null,null],[5,"HMAC_Final","","",null,null],[5,"HMAC_Update","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"BIO_eof","","",null,null],[5,"BIO_set_nbio","","",null,null],[5,"BIO_set_mem_eof_return","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"BIO_flush","","",null,null],[5,"SSL_CTX_set_options_shim","","",null,null],[5,"SSL_CTX_get_options_shim","","",null,null],[5,"SSL_CTX_clear_options_shim","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"X509_get_extensions","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_CTX_set_tlsext_servername_arg","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_DTLSv1","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"SSL_OP_NO_DTLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_2","","",null,null],[17,"SSL_OP_NO_TLSv1_1","","",null,null],[17,"SSL_OP_NETSCAPE_CA_DN_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_CRYPTOPRO_TLSEXT_BUG","","",null,null],[17,"SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG","","",null,null],[17,"SSL_OP_MSIE_SSLV2_RSA_PADDING","","",null,null],[17,"SSL_OP_PKCS1_CHECK_1","","",null,null],[17,"SSL_OP_PKCS1_CHECK_2","","",null,null],[17,"SSL_OP_EPHEMERAL_RSA","","",null,null]],"paths":[]};
searchIndex["openssl_sys"] = {"doc":"","items":[[3,"PKCS12","openssl_sys","",null,null],[3,"stack_st_X509","","",null,null],[12,"stack","","",0,null],[3,"stack_st_X509_EXTENSION","","",null,null],[12,"stack","","",1,null],[3,"stack_st_GENERAL_NAME","","",null,null],[12,"stack","","",2,null],[3,"stack_st_void","","",null,null],[12,"stack","","",3,null],[3,"BIO_METHOD","","",null,null],[12,"type_","","",4,null],[12,"name","","",4,null],[12,"bwrite","","",4,null],[12,"bread","","",4,null],[12,"bputs","","",4,null],[12,"bgets","","",4,null],[12,"ctrl","","",4,null],[12,"create","","",4,null],[12,"destroy","","",4,null],[12,"callback_ctrl","","",4,null],[3,"_STACK","","",null,null],[12,"num","","",5,null],[12,"data","","",5,null],[12,"sorted","","",5,null],[12,"num_alloc","","",5,null],[12,"comp","","",5,null],[3,"RSA","","",null,null],[12,"pad","","",6,null],[12,"version","","",6,null],[12,"meth","","",6,null],[12,"engine","","",6,null],[12,"n","","",6,null],[12,"e","","",6,null],[12,"d","","",6,null],[12,"p","","",6,null],[12,"q","","",6,null],[12,"dmp1","","",6,null],[12,"dmq1","","",6,null],[12,"iqmp","","",6,null],[12,"ex_data","","",6,null],[12,"references","","",6,null],[12,"flags","","",6,null],[12,"_method_mod_n","","",6,null],[12,"_method_mod_p","","",6,null],[12,"_method_mod_q","","",6,null],[12,"bignum_data","","",6,null],[12,"blinding","","",6,null],[12,"mt_blinding","","",6,null],[3,"DSA","","",null,null],[12,"pad","","",7,null],[12,"version","","",7,null],[12,"write_params","","",7,null],[12,"p","","",7,null],[12,"q","","",7,null],[12,"g","","",7,null],[12,"pub_key","","",7,null],[12,"priv_key","","",7,null],[12,"kinv","","",7,null],[12,"r","","",7,null],[12,"flags","","",7,null],[12,"_method_mont_p","","",7,null],[12,"references","","",7,null],[12,"ex_data","","",7,null],[12,"meth","","",7,null],[12,"engine","","",7,null],[3,"EVP_PKEY","","",null,null],[12,"type_","","",8,null],[12,"save_type","","",8,null],[12,"references","","",8,null],[12,"ameth","","",8,null],[12,"engine","","",8,null],[12,"pkey","","",8,null],[12,"save_parameters","","",8,null],[12,"attributes","","",8,null],[3,"BIO","","",null,null],[12,"method","","",9,null],[12,"callback","","",9,null],[12,"cb_arg","","",9,null],[12,"init","","",9,null],[12,"shutdown","","",9,null],[12,"flags","","",9,null],[12,"retry_reason","","",9,null],[12,"num","","",9,null],[12,"ptr","","",9,null],[12,"next_bio","","",9,null],[12,"prev_bio","","",9,null],[12,"references","","",9,null],[12,"num_read","","",9,null],[12,"num_write","","",9,null],[12,"ex_data","","",9,null],[3,"CRYPTO_EX_DATA","","",null,null],[12,"sk","","",10,null],[12,"dummy","","",10,null],[3,"EVP_MD_CTX","","",null,null],[3,"EVP_CIPHER","","",null,null],[12,"nid","","",11,null],[12,"block_size","","",11,null],[12,"key_len","","",11,null],[12,"iv_len","","",11,null],[12,"flags","","",11,null],[12,"init","","",11,null],[12,"do_cipher","","",11,null],[12,"cleanup","","",11,null],[12,"ctx_size","","",11,null],[12,"set_asn1_parameters","","",11,null],[12,"get_asn1_parameters","","",11,null],[12,"ctrl","","",11,null],[12,"app_data","","",11,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"GENERAL_NAME","","",null,null],[12,"type_","","",12,null],[12,"d","","",12,null],[3,"BIGNUM","","",null,null],[12,"d","","",13,null],[12,"top","","",13,null],[12,"dmax","","",13,null],[12,"neg","","",13,null],[12,"flags","","",13,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_get_mem_data","","",null,null],[5,"BIO_clear_retry_flags","","",null,null],[5,"BIO_set_retry_read","","",null,null],[5,"BIO_set_retry_write","","",null,null],[5,"SSL_CTX_set_mode","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"SSL_CTX_set_tmp_dh","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_tlsext_servername_callback","","",null,null],[5,"SSL_set_tlsext_host_name","","",null,null],[5,"EVP_CIPHER_block_size","","",null,null],[5,"EVP_CIPHER_key_length","","",null,null],[5,"EVP_CIPHER_iv_length","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"ASN1_TIME_print","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_new_fp","","",null,null],[5,"BIO_new_socket","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_file","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BIO_new_mem_buf","","",null,null],[5,"BIO_set_flags","","",null,null],[5,"BIO_clear_flags","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_set_id_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"DH_free","","",null,null],[5,"DH_new_from_params","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_128_cfb1","","",null,null],[5,"EVP_aes_128_cfb128","","",null,null],[5,"EVP_aes_128_cfb8","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_aes_256_cfb1","","",null,null],[5,"EVP_aes_256_cfb128","","",null,null],[5,"EVP_aes_256_cfb8","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_des_cbc","","",null,null],[5,"EVP_des_ecb","","",null,null],[5,"EVP_BytesToKey","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_set_key_length","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherInit_ex","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_copy_parameters","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"EVP_PKEY_cmp","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"PEM_read_bio_DHparams","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_X509_REQ","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_read_bio_PUBKEY","","",null,null],[5,"PEM_read_bio_RSAPrivateKey","","",null,null],[5,"PEM_read_bio_RSA_PUBKEY","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PUBKEY","","",null,null],[5,"PEM_write_bio_RSAPrivateKey","","",null,null],[5,"PEM_write_bio_RSAPublicKey","","",null,null],[5,"PEM_write_bio_RSA_PUBKEY","","",null,null],[5,"PEM_read_bio_DSAPrivateKey","","",null,null],[5,"PEM_read_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_DSAPrivateKey","","",null,null],[5,"PEM_write_bio_DSA_PUBKEY","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PEM_write_bio_X509_REQ","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_new","","",null,null],[5,"RSA_free","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_generate_key_ex","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_decrypt","","",null,null],[5,"RSA_private_encrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"DSA_new","","",null,null],[5,"DSA_free","","",null,null],[5,"DSA_size","","",null,null],[5,"DSA_generate_parameters_ex","","",null,null],[5,"DSA_generate_key","","",null,null],[5,"DSA_sign","","",null,null],[5,"DSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"OPENSSL_add_all_algorithms_noconf","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_pending","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_do_handshake","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_set_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_get_ssl_method","","",null,null],[5,"SSL_get_version","","",null,null],[5,"SSL_state_string","","",null,null],[5,"SSL_state_string_long","","",null,null],[5,"SSL_set_verify","","",null,null],[5,"SSL_get_ex_new_index","","",null,null],[5,"SSL_set_ex_data","","",null,null],[5,"SSL_get_ex_data","","",null,null],[5,"SSL_get_servername","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_get_current_cipher","","",null,null],[5,"SSL_CIPHER_get_name","","",null,null],[5,"SSL_CIPHER_get_bits","","",null,null],[5,"SSL_CIPHER_get_version","","",null,null],[5,"SSL_CIPHER_description","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"SSL_CTX_callback_ctrl","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_set_default_verify_paths","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_set_session_id_context","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate_chain_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_REQ_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_to_X509_REQ","","",null,null],[5,"X509_get_ext_d2i","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"ASN1_STRING_length","","",null,null],[5,"ASN1_STRING_data","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509_STORE_CTX_get_error_depth","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_EXT_conf","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"X509_REQ_add_extensions","","",null,null],[5,"X509_REQ_sign","","",null,null],[5,"d2i_X509","","",null,null],[5,"i2d_X509_bio","","",null,null],[5,"i2d_X509_REQ_bio","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[5,"d2i_PKCS12","","",null,null],[5,"PKCS12_parse","","",null,null],[5,"PKCS12_free","","",null,null],[5,"sk_free","","",null,null],[5,"sk_pop_free","","",null,null],[5,"sk_pop","","",null,null],[5,"GENERAL_NAME_free","","",null,null],[5,"SSLeay","","",null,null],[5,"SSLeay_version","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",14,null],[12,"cert_dir","","",14,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"ASN1_TYPE","","",null,null],[6,"BN_CTX","","",null,null],[6,"BN_GENCB","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"DH","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CIPHER","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"bio_st","","",null,null],[6,"bio_info_cb","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_TYPE_NONE","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"BIO_CTRL_INFO","","",null,null],[17,"BIO_CTRL_FLUSH","","",null,null],[17,"BIO_C_SET_BUF_MEM_EOF_RETURN","","",null,null],[17,"BIO_FLAGS_READ","","",null,null],[17,"BIO_FLAGS_WRITE","","",null,null],[17,"BIO_FLAGS_IO_SPECIAL","","",null,null],[17,"BIO_FLAGS_RWS","","",null,null],[17,"BIO_FLAGS_SHOULD_RETRY","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"EVP_MAX_MD_SIZE","","",null,null],[17,"EVP_PKEY_RSA","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_rsaEncryption","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"PKCS5_SALT_LEN","","",null,null],[17,"RSA_F4","","",null,null],[17,"SSL_CTRL_SET_TMP_DH","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_MODE","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_CB","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_SERVERNAME_ARG","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER","","",null,null],[17,"SSL_MODE_AUTO_RETRY","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"SSL_OP_MICROSOFT_SESS_ID_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_CHALLENGE_BUG","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLv2","","",null,null],[17,"SSL_OP_NO_SSLv3","","",null,null],[17,"SSL_OP_NO_TLSv1","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"SSLEAY_VERSION","","",null,null],[17,"SSLEAY_CFLAGS","","",null,null],[17,"SSLEAY_BUILT_ON","","",null,null],[17,"SSLEAY_PLATFORM","","",null,null],[17,"SSLEAY_DIR","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[17,"GEN_OTHERNAME","","",null,null],[17,"GEN_EMAIL","","",null,null],[17,"GEN_DNS","","",null,null],[17,"GEN_X400","","",null,null],[17,"GEN_DIRNAME","","",null,null],[17,"GEN_EDIPARTY","","",null,null],[17,"GEN_URI","","",null,null],[17,"GEN_IPADD","","",null,null],[17,"GEN_RID","","",null,null],[11,"clone","","",4,null],[11,"clone","","",15,null],[11,"clone","","",11,null],[11,"clone","","",16,null],[11,"clone","","",12,null],[11,"clone","","",17,null],[11,"clone","","",13,null]],"paths":[[3,"stack_st_X509"],[3,"stack_st_X509_EXTENSION"],[3,"stack_st_GENERAL_NAME"],[3,"stack_st_void"],[3,"BIO_METHOD"],[3,"_STACK"],[3,"RSA"],[3,"DSA"],[3,"EVP_PKEY"],[3,"BIO"],[3,"CRYPTO_EX_DATA"],[3,"EVP_CIPHER"],[3,"GENERAL_NAME"],[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex["url"] = {"doc":"&lt;a href=&quot;https://github.com/servo/rust-url&quot;&gt;&lt;img style=&quot;position: absolute; top: 0; left: 0; border: 0;&quot; src=&quot;../github.png&quot; alt=&quot;Fork me on GitHub&quot;&gt;&lt;/a&gt;\n&lt;style&gt;.sidebar { margin-top: 53px }&lt;/style&gt;","items":[[3,"Url","url","The parsed representation of an absolute URL.",null,null],[12,"scheme","","The scheme (a.k.a. protocol) of the URL, in ASCII lower case.",0,null],[12,"scheme_data","","The components of the URL whose representation depends on where the scheme is *relative*.",0,null],[12,"query","","The query string of the URL.",0,null],[12,"fragment","","The fragment identifier of the URL.",0,null],[3,"OpaqueOrigin","","Opaque identifier for URLs that have file or other schemes",null,null],[3,"RelativeSchemeData","","Components for URLs in a *relative* scheme such as HTTP.",null,null],[12,"username","","The username of the URL, as a possibly empty, percent-encoded string.",1,null],[12,"password","","The password of the URL.",1,null],[12,"host","","The host of the URL, either a domain name or an IPv4 address",1,null],[12,"port","","The port number of the URL.\n`None` for file-like schemes, or to indicate the default port number.",1,null],[12,"default_port","","The default port number for the URL’s scheme.\n`None` for file-like schemes.",1,null],[12,"path","","The path of the URL, as vector of percent-encoded strings.",1,null],[3,"UrlParser","","A set of optional parameters for URL parsing.",null,null],[4,"Host","","The host name of an URL.",null,null],[13,"Domain","","A (DNS) domain name.",2,null],[13,"Ipv4","","A IPv4 address, represented by four sequences of up to three ASCII digits.",2,null],[13,"Ipv6","","An IPv6 address, represented inside `[...]` square brackets\nso that `:` colon characters in the address are not ambiguous\nwith the port number delimiter.",2,null],[4,"ParseError","","Errors that can occur during parsing.",null,null],[13,"EmptyHost","","",3,null],[13,"InvalidScheme","","",3,null],[13,"InvalidPort","","",3,null],[13,"InvalidIpv4Address","","",3,null],[13,"InvalidIpv6Address","","",3,null],[13,"InvalidDomainCharacter","","",3,null],[13,"InvalidCharacter","","",3,null],[13,"InvalidBackslash","","",3,null],[13,"InvalidPercentEncoded","","",3,null],[13,"InvalidAtSymbolInUser","","",3,null],[13,"ExpectedTwoSlashes","","",3,null],[13,"ExpectedInitialSlash","","",3,null],[13,"NonUrlCodePoint","","",3,null],[13,"RelativeUrlWithScheme","","",3,null],[13,"RelativeUrlWithoutBase","","",3,null],[13,"RelativeUrlWithNonRelativeBase","","",3,null],[13,"NonAsciiDomainsNotSupportedYet","","",3,null],[13,"CannotSetJavascriptFragment","","",3,null],[13,"CannotSetPortWithFileLikeScheme","","",3,null],[13,"CannotSetUsernameWithNonRelativeScheme","","",3,null],[13,"CannotSetPasswordWithNonRelativeScheme","","",3,null],[13,"CannotSetHostPortWithNonRelativeScheme","","",3,null],[13,"CannotSetHostWithNonRelativeScheme","","",3,null],[13,"CannotSetPortWithNonRelativeScheme","","",3,null],[13,"CannotSetPathWithNonRelativeScheme","","",3,null],[4,"Origin","","The origin of the URL",null,null],[13,"UID","","A globally unique identifier",4,null],[13,"Tuple","","Consists of the URL&#39;s scheme, host and port",4,null],[4,"SchemeData","","The components of the URL whose representation depends on where the scheme is *relative*.",null,null],[13,"Relative","","Components for URLs in a *relative* scheme such as HTTP.",5,null],[13,"NonRelative","","No further structure is assumed for *non-relative* schemes such as `data` and `mailto`.",5,null],[4,"SchemeType","","Determines the behavior of the URL parser for a given scheme.",null,null],[13,"NonRelative","","Indicate that the scheme is *non-relative*.",6,null],[13,"Relative","","Indicate that the scheme is *relative*, and what the default port number is.",6,null],[13,"FileLike","","Indicate a *relative* scheme similar to the *file* scheme.",6,null],[5,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",null,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[5,"whatwg_scheme_type_mapper","","http://url.spec.whatwg.org/#special-scheme",null,{"inputs":[{"name":"str"}],"output":{"name":"schemetype"}}],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"cmp","","",2,null],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",2,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"serialize","","Serialize the host as a string.",2,null],[11,"fmt","","",2,null],[11,"eq","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"urlutils","","These methods are not meant for use in Rust code,\nonly to help implement the JavaScript URLUtils API: http://url.spec.whatwg.org/#urlutils",null,null],[3,"UrlUtilsWrapper","url::urlutils","",null,null],[12,"url","","",7,null],[12,"parser","","",7,null],[0,"percent_encoding","url","",null,null],[3,"EncodeSet","url::percent_encoding","Represents a set of characters / bytes that should be percent-encoded.",null,null],[5,"percent_encode_to","","Percent-encode the given bytes, and push the result to `output`.",null,null],[5,"percent_encode","","Percent-encode the given bytes.",null,null],[5,"utf8_percent_encode_to","","Percent-encode the UTF-8 encoding of the given string, and push the result to `output`.",null,{"inputs":[{"name":"str"},{"name":"encodeset"},{"name":"string"}],"output":null}],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",null,{"inputs":[{"name":"str"},{"name":"encodeset"}],"output":{"name":"string"}}],[5,"percent_decode_to","","Percent-decode the given bytes, and push the result to `output`.",null,null],[5,"percent_decode","","Percent-decode the given bytes.",null,null],[5,"lossy_utf8_percent_decode","","Percent-decode the given bytes, and decode the result as UTF-8.",null,null],[5,"from_hex","","Convert the given hex character into its numeric value.",null,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[7,"SIMPLE_ENCODE_SET","","This encode set is used for fragment identifier and non-relative scheme data.",null,null],[7,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",null,null],[7,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",null,null],[7,"USERINFO_ENCODE_SET","","This encode set is used in the URL parser for usernames and passwords.",null,null],[7,"PASSWORD_ENCODE_SET","","This encode set should be used when setting the password field of a parsed URL.",null,null],[7,"USERNAME_ENCODE_SET","","This encode set should be used when setting the username field of a parsed URL.",null,null],[7,"FORM_URLENCODED_ENCODE_SET","","This encode set is used in `application/x-www-form-urlencoded` serialization.",null,null],[7,"HTTP_VALUE_ENCODE_SET","","This encode set is used for HTTP header values and is defined at\nhttps://tools.ietf.org/html/rfc5987#section-3.2",null,null],[11,"clone","","",8,null],[0,"form_urlencoded","url","Parser and serializer for the [`application/x-www-form-urlencoded` format](\nhttp://url.spec.whatwg.org/#application/x-www-form-urlencoded),\nas used by HTML forms.",null,null],[5,"parse","url::form_urlencoded","Convert a byte string in the `application/x-www-form-urlencoded` format\ninto a vector of (name, value) pairs.",null,null],[5,"serialize","","Convert an iterator of (name, value) pairs\ninto a string in the `application/x-www-form-urlencoded` format.",null,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[0,"punycode","url","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","url::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"format","url","Formatting utilities for URLs.",null,null],[3,"PathFormatter","url::format","Formatter and serializer for URL path data.",null,null],[12,"path","","The path as a slice of string-like objects (String or &amp;str).",9,null],[3,"UserInfoFormatter","","Formatter and serializer for URL username and password data.",null,null],[12,"username","","URL username as a string slice.",10,null],[12,"password","","URL password as an optional string slice.",10,null],[3,"UrlNoFragmentFormatter","","Formatter for URLs which ignores the fragment field.",null,null],[12,"url","","",11,null],[11,"fmt","","",9,null],[11,"fmt","","",10,null],[11,"fmt","","",11,null],[0,"idna","url","International domain names",null,null],[3,"Uts46Flags","url::idna","",null,null],[12,"use_std3_ascii_rules","","",12,null],[12,"transitional_processing","","",12,null],[12,"verify_dns_length","","",12,null],[4,"Error","","",null,null],[13,"PunycodeError","","",13,null],[13,"ValidityCriteria","","",13,null],[13,"DissallowedByStd3AsciiRules","","",13,null],[13,"DissallowedMappedInStd3","","",13,null],[13,"DissallowedCharacter","","",13,null],[13,"TooLongForDns","","",13,null],[5,"uts46_to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"uts46flags"}],"output":{"name":"result"}}],[5,"domain_to_ascii","","https://url.spec.whatwg.org/#concept-domain-to-ascii",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"uts46_to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[5,"domain_to_unicode","","https://url.spec.whatwg.org/#concept-domain-to-unicode",null,null],[11,"clone","","",12,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[6,"ErrorHandler","url","This is called on non-fatal parse errors.",null,null],[6,"ParseResult","","",null,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"new","","Creates a new opaque origin with a random UUID.",14,{"inputs":[],"output":{"name":"opaqueorigin"}}],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"hash","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"hash","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"new","","Return a new UrlParser with default parameters.",15,{"inputs":[],"output":{"name":"urlparser"}}],[11,"base_url","","Set the base URL used for resolving relative URL references, and return the `UrlParser`.\nThe default is no base URL, so that relative URLs references fail to parse.",15,null],[11,"error_handler","","Set an error handler for non-fatal parse errors, and return the `UrlParser`.",15,null],[11,"scheme_type_mapper","","Set a *scheme type mapper*, and return the `UrlParser`.",15,null],[11,"parse","","Parse `input` as an URL, with all the parameters previously set in the `UrlParser`.",15,null],[11,"parse_path","","Parse `input` as a “standalone” URL path,\nwith an optional query string and fragment identifier.",15,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"hash","","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"cmp","","",6,null],[11,"default_port","","",6,null],[11,"same_as","","",6,null],[11,"parse","","Parse an URL with the default `UrlParser` parameters.",0,{"inputs":[{"name":"str"}],"output":{"name":"parseresult"}}],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",0,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",0,null],[11,"serialize","","Return the serialization of this URL as a string.",0,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",0,null],[11,"serialize_no_fragment","","Return the serialization of this URL, without the fragment identifier, as a string",0,null],[11,"non_relative_scheme_data","","If the URL is *non-relative*, return the string scheme data.",0,null],[11,"non_relative_scheme_data_mut","","If the URL is *non-relative*, return a mutable reference to the string scheme data.",0,null],[11,"relative_scheme_data","","If the URL is in a *relative scheme*, return the structured scheme data.",0,null],[11,"relative_scheme_data_mut","","If the URL is in a *relative scheme*,\nreturn a mutable reference to the structured scheme data.",0,null],[11,"username","","If the URL is in a *relative scheme*, return its username.",0,null],[11,"username_mut","","If the URL is in a *relative scheme*, return a mutable reference to its username.",0,null],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username, if any.",0,null],[11,"password","","If the URL is in a *relative scheme*, return its password, if any.",0,null],[11,"password_mut","","If the URL is in a *relative scheme*, return a mutable reference to its password, if any.",0,null],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",0,null],[11,"serialize_userinfo","","Serialize the URL&#39;s username and password, if any.",0,null],[11,"host","","If the URL is in a *relative scheme*, return its structured host.",0,null],[11,"host_mut","","If the URL is in a *relative scheme*, return a mutable reference to its structured host.",0,null],[11,"domain","","If the URL is in a *relative scheme* and its host is a domain,\nreturn the domain as a string.",0,null],[11,"domain_mut","","If the URL is in a *relative scheme* and its host is a domain,\nreturn a mutable reference to the domain string.",0,null],[11,"serialize_host","","If the URL is in a *relative scheme*, serialize its host as a string.",0,null],[11,"port","","If the URL is in a *relative scheme* and has a port number, return it.",0,null],[11,"port_mut","","If the URL is in a *relative scheme*, return a mutable reference to its port.",0,null],[11,"port_or_default","","If the URL is in a *relative scheme* that is not a file-like,\nreturn its port number, even if it is the default.",0,null],[11,"path","","If the URL is in a *relative scheme*, return its path components.",0,null],[11,"path_mut","","If the URL is in a *relative scheme*, return a mutable reference to its path components.",0,null],[11,"serialize_path","","If the URL is in a *relative scheme*, serialize its path as a string.",0,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return a vector of (key, value) pairs.",0,null],[11,"set_query_from_pairs","","Serialize an iterator of (key, value) pairs as `application/x-www-form-urlencoded`\nand set it as the URL’s query string.",0,null],[11,"lossy_percent_decode_query","","Percent-decode the URL’s query string, if any.",0,null],[11,"lossy_percent_decode_fragment","","Percent-decode the URL’s fragment identifier, if any.",0,null],[11,"join","","Join a path with a base URL.",0,null],[11,"encode","","",0,null],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"fmt","","",5,null],[11,"lossy_percent_decode_username","","Percent-decode the URL’s username.",1,null],[11,"lossy_percent_decode_password","","Percent-decode the URL’s password, if any.",1,null],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",1,null],[11,"domain","","If the host is a domain, return the domain as a string.",1,null],[11,"domain_mut","","If the host is a domain, return a mutable reference to the domain string.",1,null],[11,"port_or_default","","Return the port number of the URL, even if it is the default.\nReturn `None` for file-like URLs.",1,null],[11,"serialize_path","","Serialize the path as a string.",1,null],[11,"serialize_userinfo","","Serialize the userinfo as a string.",1,null],[11,"fmt","","",1,null]],"paths":[[3,"Url"],[3,"RelativeSchemeData"],[4,"Host"],[4,"ParseError"],[4,"Origin"],[4,"SchemeData"],[4,"SchemeType"],[3,"UrlUtilsWrapper"],[3,"EncodeSet"],[3,"PathFormatter"],[3,"UserInfoFormatter"],[3,"UrlNoFragmentFormatter"],[3,"Uts46Flags"],[4,"Error"],[3,"OpaqueOrigin"],[3,"UrlParser"]]};
searchIndex["idna"] = {"doc":"This Rust crate implements IDNA\n[per the WHATWG URL Standard](https://url.spec.whatwg.org/#idna).","items":[[5,"domain_to_ascii","idna","The [domain to ASCII](https://url.spec.whatwg.org/#concept-domain-to-ascii) algorithm.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"domain_to_unicode","","The [domain to Unicode](https://url.spec.whatwg.org/#concept-domain-to-unicode) algorithm.",null,null],[0,"punycode","","Punycode ([RFC 3492](http://tools.ietf.org/html/rfc3492)) implementation.",null,null],[5,"decode_to_string","idna::punycode","Convert Punycode to an Unicode `String`.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"decode","","Convert Punycode to Unicode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode_str","","Convert an Unicode `str` to Punycode.",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"encode","","Convert Unicode to Punycode.",null,null],[0,"uts46","idna","[*Unicode IDNA Compatibility Processing*\n(Unicode Technical Standard #46)](http://www.unicode.org/reports/tr46/)",null,null],[3,"Flags","idna::uts46","",null,null],[12,"use_std3_ascii_rules","","",0,null],[12,"transitional_processing","","",0,null],[12,"verify_dns_length","","",0,null],[3,"Errors","","Errors recorded during UTS #46 processing.",null,null],[5,"to_ascii","","http://www.unicode.org/reports/tr46/#ToASCII",null,{"inputs":[{"name":"str"},{"name":"flags"}],"output":{"name":"result"}}],[5,"to_unicode","","http://www.unicode.org/reports/tr46/#ToUnicode",null,null],[11,"clone","","",0,null],[11,"fmt","","",1,null]],"paths":[[3,"Flags"],[3,"Errors"]]};
searchIndex["uuid"] = {"doc":"Generate and parse UUIDs","items":[[3,"Uuid","uuid","A Universally Unique Identifier (UUID).",null,null],[3,"Simple","","An adaptor for formatting a `Uuid` as a simple string.",null,null],[3,"Hyphenated","","An adaptor for formatting a `Uuid` as a hyphenated string.",null,null],[3,"Urn","","An adaptor for formatting a `Uuid` as a URN string.",null,null],[4,"UuidVersion","","The version of the UUID, denoting the generating algorithm.",null,null],[13,"Mac","","Version 1: MAC address",0,null],[13,"Dce","","Version 2: DCE Security",0,null],[13,"Md5","","Version 3: MD5 hash",0,null],[13,"Random","","Version 4: Random",0,null],[13,"Sha1","","Version 5: SHA-1 hash",0,null],[4,"UuidVariant","","The reserved variants of UUIDs.",null,null],[13,"NCS","","Reserved by the NCS for backward compatibility",1,null],[13,"RFC4122","","As described in the RFC4122 Specification (default)",1,null],[13,"Microsoft","","Reserved by Microsoft for backward compatibility",1,null],[13,"Future","","Reserved for future expansion",1,null],[4,"ParseError","","Error details for string parsing failures.",null,null],[13,"InvalidLength","","",2,null],[13,"InvalidCharacter","","",2,null],[13,"InvalidGroups","","",2,null],[13,"InvalidGroupLength","","",2,null],[6,"UuidBytes","","A 128-bit (16 byte) buffer containing the ID.",null,null],[17,"NAMESPACE_DNS","","A UUID of the namespace of fully-qualified domain names",null,null],[17,"NAMESPACE_URL","","A UUID of the namespace of URLs",null,null],[17,"NAMESPACE_OID","","A UUID of the namespace of ISO OIDs",null,null],[17,"NAMESPACE_X500","","A UUID of the namespace of X.500 DNs (in DER or a text output format)",null,null],[11,"eq","","",0,null],[11,"clone","","",0,null],[11,"eq","","",1,null],[11,"clone","","",1,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"partial_cmp","","",3,null],[11,"lt","","",3,null],[11,"le","","",3,null],[11,"gt","","",3,null],[11,"ge","","",3,null],[11,"cmp","","",3,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"nil","","The &#39;nil UUID&#39;.",3,{"inputs":[],"output":{"name":"uuid"}}],[11,"new","","Creates a new `Uuid`.",3,{"inputs":[{"name":"uuidversion"}],"output":{"name":"option"}}],[11,"new_v4","","Creates a random `Uuid`.",3,{"inputs":[],"output":{"name":"uuid"}}],[11,"from_fields","","Creates a `Uuid` from four field values.",3,null],[11,"from_bytes","","Creates a `Uuid` using the supplied bytes.",3,null],[11,"get_variant","","Returns the variant of the `Uuid` structure.",3,null],[11,"get_version_num","","Returns the version number of the `Uuid`.",3,null],[11,"get_version","","Returns the version of the `Uuid`.",3,null],[11,"as_bytes","","Return an array of 16 octets containing the UUID data",3,null],[11,"simple","","Returns a wrapper which when formatted via `fmt::Display` will format a\nstring of 32 hexadecimal digits.",3,null],[11,"hyphenated","","Returns a wrapper which when formatted via `fmt::Display` will format a\nstring of hexadecimal digits separated into gropus with a hyphen.",3,null],[11,"urn","","Returns a wrapper which when formatted via `fmt::Display` will format a\nstring of the UUID as a full URN string.",3,null],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with optional hyphens.",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_nil","","Tests if the UUID is nil",3,null],[11,"default","","Returns the nil UUID, which is all zeroes",3,{"inputs":[],"output":{"name":"uuid"}}],[11,"from_str","","Parse a hex string and interpret as a `Uuid`.",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"fmt","","",4,null],[11,"fmt","","",5,null],[11,"fmt","","",6,null],[11,"rand","","",3,{"inputs":[{"name":"r"}],"output":{"name":"uuid"}}]],"paths":[[4,"UuidVersion"],[4,"UuidVariant"],[4,"ParseError"],[3,"Uuid"],[3,"Simple"],[3,"Hyphenated"],[3,"Urn"]]};
searchIndex["rand"] = {"doc":"Utilities for random number generation","items":[[3,"Generator","rand","Iterator which will generate a stream of random items.",null,null],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",null,null],[3,"XorShiftRng","","An Xorshift[1] random number\ngenerator.",null,null],[3,"Open01","","A wrapper for generating floating point numbers uniformly in the\nopen interval `(0,1)` (not including either endpoint).",null,null],[12,"0","","",0,null],[3,"Closed01","","A wrapper for generating floating point numbers uniformly in the\nclosed interval `[0,1]` (including both endpoints).",null,null],[12,"0","","",1,null],[3,"StdRng","","The standard RNG. This is designed to be efficient on the current\nplatform.",null,null],[3,"ThreadRng","","The thread-local RNG.",null,null],[5,"weak_rng","","Create a weak random number generator with a default algorithm and seed.",null,{"inputs":[],"output":{"name":"xorshiftrng"}}],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number\ngenerator, seeded by the system. Intended to be used in method\nchaining style, e.g. `thread_rng().gen::&lt;i32&gt;()`.",null,{"inputs":[],"output":{"name":"threadrng"}}],[5,"random","","Generates a random value using the thread-local random number generator.",null,{"inputs":[],"output":{"name":"t"}}],[5,"sample","","Randomly sample up to `amount` elements from an iterator.",null,{"inputs":[{"name":"r"},{"name":"i"},{"name":"usize"}],"output":{"name":"vec"}}],[0,"distributions","","Sampling from random distributions.",null,null],[3,"RandSample","rand::distributions","A wrapper for generating types that implement `Rand` via the\n`Sample` &amp; `IndependentSample` traits.",null,null],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",null,null],[12,"weight","","The numerical weight of this item",2,null],[12,"item","","The actual item which is being weighted",2,null],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",null,null],[0,"range","","Generating numbers between two others.",null,null],[3,"Range","rand::distributions::range","Sample values uniformly between two bounds.",null,null],[8,"SampleRange","","The helper trait for types that have a sensible way to sample\nuniformly between two values. This should not be used directly,\nand is only to facilitate `Range`.",null,null],[10,"construct_range","","Construct the `Range` object that `sample_range`\nrequires. This should not ever be called directly, only via\n`Range::new`, which will check that `low &lt; high`, so this\nfunction doesn&#39;t have to repeat the check.",3,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"range"}}],[10,"sample_range","","Sample a value from the given `Range` with the given `Rng` as\na source of randomness.",3,{"inputs":[{"name":"range"},{"name":"r"}],"output":{"name":"self"}}],[11,"clone","","",4,null],[11,"new","","Create a new `Range` instance that samples uniformly from\n`[low, high)`. Panics if `low &gt;= high`.",4,{"inputs":[{"name":"x"},{"name":"x"}],"output":{"name":"range"}}],[11,"sample","","",4,null],[11,"ind_sample","","",4,null],[0,"gamma","rand::distributions","The Gamma and derived distributions.",null,null],[3,"Gamma","rand::distributions::gamma","The Gamma distribution `Gamma(shape, scale)` distribution.",null,null],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of\nfreedom.",null,null],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",null,null],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of\nfreedom.",null,null],[11,"clone","","",5,null],[11,"new","","Construct an object representing the `Gamma(shape, scale)`\ndistribution.",5,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"gamma"}}],[11,"sample","","",5,null],[11,"ind_sample","","",5,null],[11,"clone","","",6,null],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom\n`k`. Panics if `k &lt; 0`.",6,{"inputs":[{"name":"f64"}],"output":{"name":"chisquared"}}],[11,"sample","","",6,null],[11,"ind_sample","","",6,null],[11,"clone","","",7,null],[11,"new","","Create a new `FisherF` distribution, with the given\nparameter. Panics if either `m` or `n` are not positive.",7,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"fisherf"}}],[11,"sample","","",7,null],[11,"ind_sample","","",7,null],[11,"clone","","",8,null],[11,"new","","Create a new Student t distribution with `n` degrees of\nfreedom. Panics if `n &lt;= 0`.",8,{"inputs":[{"name":"f64"}],"output":{"name":"studentt"}}],[11,"sample","","",8,null],[11,"ind_sample","","",8,null],[0,"normal","rand::distributions","The normal and derived distributions.",null,null],[3,"StandardNormal","rand::distributions::normal","A wrapper around an `f64` to generate N(0, 1) random numbers\n(a.k.a.  a standard normal, or Gaussian).",null,null],[12,"0","","",9,null],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",null,null],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",null,null],[11,"clone","","",9,null],[11,"rand","","",9,{"inputs":[{"name":"r"}],"output":{"name":"standardnormal"}}],[11,"clone","","",10,null],[11,"new","","Construct a new `Normal` distribution with the given mean and\nstandard deviation.",10,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"normal"}}],[11,"sample","","",10,null],[11,"ind_sample","","",10,null],[11,"clone","","",11,null],[11,"new","","Construct a new `LogNormal` distribution with the given mean\nand standard deviation.",11,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"lognormal"}}],[11,"sample","","",11,null],[11,"ind_sample","","",11,null],[0,"exponential","rand::distributions","The exponential distribution.",null,null],[3,"Exp1","rand::distributions::exponential","A wrapper around an `f64` to generate Exp(1) random numbers.",null,null],[12,"0","","",12,null],[3,"Exp","","The exponential distribution `Exp(lambda)`.",null,null],[11,"clone","","",12,null],[11,"rand","","",12,{"inputs":[{"name":"r"}],"output":{"name":"exp1"}}],[11,"clone","","",13,null],[11,"new","","Construct a new `Exp` with the given shape parameter\n`lambda`. Panics if `lambda &lt;= 0`.",13,{"inputs":[{"name":"f64"}],"output":{"name":"exp"}}],[11,"sample","","",13,null],[11,"ind_sample","","",13,null],[8,"Sample","rand::distributions","Types that can be used to create a random instance of `Support`.",null,null],[10,"sample","","Generate a random value of `Support`, using `rng` as the\nsource of randomness.",14,null],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",null,null],[10,"ind_sample","","Generate a random value.",15,null],[11,"clone","","",16,null],[11,"sample","","",16,null],[11,"ind_sample","","",16,null],[11,"new","","",16,{"inputs":[],"output":{"name":"randsample"}}],[11,"clone","","",2,null],[11,"new","","Create a new `WeightedChoice`.",17,null],[11,"sample","","",17,null],[11,"ind_sample","","",17,null],[0,"isaac","rand","The ISAAC random number generator.",null,null],[3,"IsaacRng","rand::isaac","A random number generator that uses the ISAAC algorithm[1].",null,null],[3,"Isaac64Rng","","A random number generator that uses ISAAC-64[1], the 64-bit\nvariant of the ISAAC algorithm.",null,null],[11,"new_unseeded","","Create an ISAAC random number generator using the default\nfixed seed.",18,{"inputs":[],"output":{"name":"isaacrng"}}],[11,"clone","","",18,null],[11,"next_u32","","",18,null],[11,"reseed","","",18,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",18,null],[11,"rand","","",18,{"inputs":[{"name":"r"}],"output":{"name":"isaacrng"}}],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the\ndefault fixed seed.",19,{"inputs":[],"output":{"name":"isaac64rng"}}],[11,"clone","","",19,null],[11,"next_u32","","",19,null],[11,"next_u64","","",19,null],[11,"reseed","","",19,null],[11,"from_seed","","Create an ISAAC random number generator with a seed. This can\nbe any length, although the maximum number of elements used is\n256 and any more will be silently ignored. A generator\nconstructed with a given seed will generate the same sequence\nof values as all other generators constructed with that seed.",19,null],[11,"rand","","",19,{"inputs":[{"name":"r"}],"output":{"name":"isaac64rng"}}],[0,"chacha","rand","The ChaCha random number generator.",null,null],[3,"ChaChaRng","rand::chacha","A random number generator that uses the ChaCha20 algorithm [1].",null,null],[11,"clone","","",20,null],[11,"new_unseeded","","Create an ChaCha random number generator using the default\nfixed key of 8 zero words.",20,{"inputs":[],"output":{"name":"chacharng"}}],[11,"set_counter","","Sets the internal 128-bit ChaCha counter to\na user-provided value. This permits jumping\narbitrarily ahead (or backwards) in the pseudorandom stream.",20,null],[11,"next_u32","","",20,null],[11,"reseed","","",20,null],[11,"from_seed","","Create a ChaCha generator from a seed,\nobtained from a variable-length u32 array.\nOnly up to 8 words are used; if less than 8\nwords are used, the remaining are set to zero.",20,null],[11,"rand","","",20,{"inputs":[{"name":"r"}],"output":{"name":"chacharng"}}],[0,"reseeding","rand","A wrapper around another RNG that reseeds it after it\ngenerates a certain number of random bytes.",null,null],[3,"ReseedingRng","rand::reseeding","A wrapper around any RNG which reseeds the underlying RNG after it\nhas generated a certain number of random bytes.",null,null],[12,"reseeder","","Controls the behaviour when reseeding the RNG.",21,null],[3,"ReseedWithDefault","","Reseed an RNG using a `Default` instance. This reseeds by\nreplacing the RNG with the result of a `Default::default` call.",null,null],[8,"Reseeder","","Something that can be used to reseed an RNG via `ReseedingRng`.",null,null],[10,"reseed","","Reseed the given RNG.",22,null],[11,"new","","Create a new `ReseedingRng` with the given parameters.",21,{"inputs":[{"name":"r"},{"name":"u64"},{"name":"rsdr"}],"output":{"name":"reseedingrng"}}],[11,"reseed_if_necessary","","Reseed the internal RNG if the number of bytes that have been\ngenerated exceed the threshold.",21,null],[11,"next_u32","","",21,null],[11,"next_u64","","",21,null],[11,"fill_bytes","","",21,null],[11,"reseed","","",21,null],[11,"from_seed","","Create a new `ReseedingRng` from the given reseeder and\nseed. This uses a default value for `generation_threshold`.",21,null],[11,"clone","","",23,null],[11,"reseed","","",23,null],[11,"default","","",23,{"inputs":[],"output":{"name":"reseedwithdefault"}}],[11,"rand","rand","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[11,"rand","","",0,{"inputs":[{"name":"r"}],"output":{"name":"open01"}}],[11,"rand","","",1,{"inputs":[{"name":"r"}],"output":{"name":"closed01"}}],[0,"os","","Interfaces to the operating system provided random number\ngenerators.",null,null],[3,"OsRng","rand::os","A random number generator that retrieves randomness straight from\nthe operating system. Platform sources:",null,null],[11,"new","","Create a new `OsRng`.",24,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",24,null],[11,"next_u64","","",24,null],[11,"fill_bytes","","",24,null],[0,"read","rand","A wrapper around any Read to treat it as an RNG.",null,null],[3,"ReadRng","rand::read","An RNG that reads random bytes straight from a `Read`. This will\nwork best with an infinite reader, but this is not required.",null,null],[11,"new","","Create a new `ReadRng` from a `Read`.",25,{"inputs":[{"name":"r"}],"output":{"name":"readrng"}}],[11,"next_u32","","",25,null],[11,"next_u64","","",25,null],[11,"fill_bytes","","",25,null],[8,"Rand","rand","A type that can be randomly generated using an `Rng`.",null,null],[10,"rand","","Generates a random instance of this type using the specified source of\nrandomness.",26,{"inputs":[{"name":"r"}],"output":{"name":"self"}}],[8,"Rng","","A random number generator.",null,null],[10,"next_u32","","Return the next random u32.",27,null],[11,"next_u64","","Return the next random u64.",27,null],[11,"next_f32","","Return the next random f32 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"next_f64","","Return the next random f64 selected from the half-open\ninterval `[0, 1)`.",27,null],[11,"fill_bytes","","Fill `dest` with random data.",27,null],[11,"gen","","Return a random value of a `Rand` type.",27,null],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly\ngenerated items.",27,null],[11,"gen_range","","Generate a random value in the range [`low`, `high`).",27,null],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",27,null],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",27,null],[11,"choose","","Return a random element from `values`.",27,null],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",27,null],[11,"shuffle","","Shuffle a mutable slice in place.",27,null],[8,"SeedableRng","","A random number generator that can be explicitly seeded to produce\nthe same stream of randomness multiple times.",null,null],[10,"reseed","","Reseed an RNG with the given seed.",28,null],[10,"from_seed","","Create a new RNG with the given seed.",28,{"inputs":[{"name":"seed"}],"output":{"name":"self"}}],[11,"next","","",29,null],[11,"next","","",30,null],[11,"clone","","",31,null],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",31,{"inputs":[],"output":{"name":"xorshiftrng"}}],[11,"next_u32","","",31,null],[11,"reseed","","Reseed an XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"from_seed","","Create a new XorShiftRng. This will panic if `seed` is entirely 0.",31,null],[11,"rand","","",31,{"inputs":[{"name":"r"}],"output":{"name":"xorshiftrng"}}],[11,"clone","","",32,null],[11,"new","","Create a randomly seeded instance of `StdRng`.",32,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",32,null],[11,"next_u64","","",32,null],[11,"reseed","","",32,null],[11,"from_seed","","",32,null],[11,"clone","","",33,null],[11,"next_u32","","",33,null],[11,"next_u64","","",33,null],[11,"fill_bytes","","",33,null]],"paths":[[3,"Open01"],[3,"Closed01"],[3,"Weighted"],[8,"SampleRange"],[3,"Range"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[8,"Sample"],[8,"IndependentSample"],[3,"RandSample"],[3,"WeightedChoice"],[3,"IsaacRng"],[3,"Isaac64Rng"],[3,"ChaChaRng"],[3,"ReseedingRng"],[8,"Reseeder"],[3,"ReseedWithDefault"],[3,"OsRng"],[3,"ReadRng"],[8,"Rand"],[8,"Rng"],[8,"SeedableRng"],[3,"Generator"],[3,"AsciiGenerator"],[3,"XorShiftRng"],[3,"StdRng"],[3,"ThreadRng"]]};
searchIndex["unicode_bidi"] = {"doc":"This crate implements the [Unicode Bidirectional Algorithm][tr9] for display of mixed\nright-to-left and left-to-right text.  It is written in safe Rust, compatible with the\ncurrent stable release.","items":[[3,"BidiInfo","unicode_bidi","Output of `process_text`",null,null],[12,"classes","","The BidiClass of the character at each byte in the text.",0,null],[12,"levels","","The directional embedding level of each byte in the text.",0,null],[12,"paragraphs","","The boundaries and paragraph embedding level of each paragraph within the text.",0,null],[3,"ParagraphInfo","","Info about a single paragraph",null,null],[12,"range","","The paragraphs boundaries within the text, as byte indices.",1,null],[12,"level","","The paragraph embedding level. http://www.unicode.org/reports/tr9/#BD4",1,null],[3,"InitialProperties","","Output of `initial_scan`",null,null],[12,"initial_classes","","The BidiClass of the character at each byte in the text.\nIf a character is multiple bytes, its class will appear multiple times in the vector.",2,null],[12,"paragraphs","","The boundaries and level of each paragraph within the text.",2,null],[5,"process_text","","Determine the bidirectional embedding levels for a single paragraph.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"bidiinfo"}}],[5,"is_ltr","","Even embedding levels are left-to-right.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"is_rtl","","Odd levels are right-to-left.",null,{"inputs":[{"name":"u8"}],"output":{"name":"bool"}}],[5,"reorder_line","","Re-order a line based on resolved levels.",null,null],[5,"visual_runs","","Find the level runs within a line and return them in visual order.",null,null],[5,"initial_scan","","Find the paragraphs and BidiClasses in a string of text.",null,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"initialproperties"}}],[0,"tables","","",null,null],[4,"BidiClass","unicode_bidi::tables","Represents the Unicode character property **Bidi_Class**, also known as\nthe *bidirectional character type*.",null,null],[13,"AL","","",3,null],[13,"AN","","",3,null],[13,"B","","",3,null],[13,"BN","","",3,null],[13,"CS","","",3,null],[13,"EN","","",3,null],[13,"ES","","",3,null],[13,"ET","","",3,null],[13,"FSI","","",3,null],[13,"L","","",3,null],[13,"LRE","","",3,null],[13,"LRI","","",3,null],[13,"LRO","","",3,null],[13,"NSM","","",3,null],[13,"ON","","",3,null],[13,"PDF","","",3,null],[13,"PDI","","",3,null],[13,"R","","",3,null],[13,"RLE","","",3,null],[13,"RLI","","",3,null],[13,"RLO","","",3,null],[13,"S","","",3,null],[13,"WS","","",3,null],[5,"bidi_class","","Find the BidiClass of a single char.",null,{"inputs":[{"name":"char"}],"output":{"name":"bidiclass"}}],[17,"UNICODE_VERSION","","The version of [Unicode](http://www.unicode.org/)\nthat the `bidi_class` function is based on.",null,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",3,null],[6,"LevelRun","unicode_bidi","A maximal substring of characters with the same embedding level.",null,null],[11,"fmt","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"BidiInfo"],[3,"ParagraphInfo"],[3,"InitialProperties"],[4,"BidiClass"]]};
searchIndex["matches"] = {"doc":"","items":[[14,"matches","matches","",null,null],[14,"_matches_tt_as_expr_hack","","Work around &quot;error: unexpected token: `an interpolated tt`&quot;, whatever that means.",null,null],[14,"assert_matches","","",null,null],[14,"debug_assert_matches","","",null,null]],"paths":[]};
searchIndex["unicode_normalization"] = {"doc":"Unicode character composition and decomposition utilities\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).","items":[[3,"Decompositions","unicode_normalization","External iterator for a string decomposition&#39;s characters.",null,null],[3,"Recompositions","","External iterator for a string recomposition&#39;s characters.",null,null],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[0,"char","","Methods for composing and decomposing characters.",null,null],[5,"decompose_canonical","unicode_normalization::char","Compute canonical Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"decompose_compatible","","Compute canonical or compatible Unicode decomposition for character.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"f"}],"output":null}],[5,"compose","","Compose two characters into a single character, if possible.\nSee [Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/)\nfor more information.",null,{"inputs":[{"name":"char"},{"name":"char"}],"output":{"name":"option"}}],[5,"canonical_combining_class","","",null,{"inputs":[{"name":"char"}],"output":{"name":"u8"}}],[5,"is_combining_mark","","Return whether the given character is a combining mark (`General_Category=Mark`)",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"UNICODE_VERSION","unicode_normalization","The version of [Unicode](http://www.unicode.org/)\nthat this version of unicode-normalization is based on.",null,null],[8,"UnicodeNormalization","","Methods for iterating over strings while applying Unicode normalizations\nas described in\n[Unicode Standard Annex #15](http://www.unicode.org/reports/tr15/).",null,null],[10,"nfd","","Returns an iterator over the string in Unicode Normalization Form D\n(canonical decomposition).",2,null],[10,"nfkd","","Returns an iterator over the string in Unicode Normalization Form KD\n(compatibility decomposition).",2,null],[10,"nfc","","An Iterator over the string in Unicode Normalization Form C\n(canonical decomposition followed by canonical composition).",2,null],[10,"nfkc","","An Iterator over the string in Unicode Normalization Form KC\n(compatibility decomposition followed by canonical composition).",2,null]],"paths":[[3,"Decompositions"],[3,"Recompositions"],[8,"UnicodeNormalization"]]};
searchIndex["num_cpus"] = {"doc":"Replaces the deprecated functionality of std::os::num_cpus.","items":[[5,"get","num_cpus","Returns the number of CPUs of the current machine.",null,{"inputs":[],"output":{"name":"usize"}}]],"paths":[]};
searchIndex["winapi"] = {"doc":"","items":[],"paths":[]};
searchIndex["traitobject"] = {"doc":"# traitobject","items":[[5,"data","traitobject","Get the data pointer from this trait object.",null,null],[5,"data_mut","","Get the data pointer from this trait object, mutably.",null,null]],"paths":[]};
searchIndex["mime"] = {"doc":"# Mime","items":[[3,"Mime","mime","Mime, or Media Type. Encapsulates common registers types.",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[12,"2","","",0,null],[4,"TopLevel","","",null,null],[13,"Star","","",1,null],[13,"Text","","",1,null],[13,"Image","","",1,null],[13,"Audio","","",1,null],[13,"Video","","",1,null],[13,"Application","","",1,null],[13,"Multipart","","",1,null],[13,"Message","","",1,null],[13,"Model","","",1,null],[13,"Ext","","",1,null],[4,"SubLevel","","",null,null],[13,"Star","","",2,null],[13,"Plain","","",2,null],[13,"Html","","",2,null],[13,"Xml","","",2,null],[13,"Javascript","","",2,null],[13,"Css","","",2,null],[13,"EventStream","","",2,null],[13,"Json","","",2,null],[13,"WwwFormUrlEncoded","","",2,null],[13,"Msgpack","","",2,null],[13,"OctetStream","","",2,null],[13,"FormData","","",2,null],[13,"Png","","",2,null],[13,"Gif","","",2,null],[13,"Bmp","","",2,null],[13,"Jpeg","","",2,null],[13,"Ext","","",2,null],[4,"Attr","","",null,null],[13,"Charset","","",3,null],[13,"Boundary","","",3,null],[13,"Q","","",3,null],[13,"Ext","","",3,null],[4,"Value","","",null,null],[13,"Utf8","","",4,null],[13,"Ext","","",4,null],[6,"Param","","",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",1,null],[11,"as_str","","",1,null],[11,"deref","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"hash","","",2,null],[11,"as_str","","",2,null],[11,"deref","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"eq","","",2,null],[11,"fmt","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"hash","","",3,null],[11,"as_str","","",3,null],[11,"deref","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"hash","","",4,null],[11,"as_str","","",4,null],[11,"deref","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"eq","","",4,null],[11,"fmt","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"get_param","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[14,"mime","","Easily create a Mime without having to import so many enums.",null,null]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","items":[[3,"LogRecord","log","The &quot;payload&quot; of a log message.",null,null],[3,"LogMetadata","","Metadata about a log message.",null,null],[3,"LogLocation","","The location of a log message.",null,null],[3,"MaxLogLevelFilter","","A token providing read and write access to the global maximum log level\nfilter.",null,null],[3,"SetLoggerError","","The type returned by `set_logger` if `set_logger` has already been called.",null,null],[3,"ShutdownLoggerError","","The type returned by `shutdown_logger_raw` if `shutdown_logger_raw` has\nalready been called or if `set_logger_raw` has not been called yet.",null,null],[4,"LogLevel","","An enum representing the available verbosity levels of the logging framework",null,null],[13,"Error","","The &quot;error&quot; level.",0,null],[13,"Warn","","The &quot;warn&quot; level.",0,null],[13,"Info","","The &quot;info&quot; level.",0,null],[13,"Debug","","The &quot;debug&quot; level.",0,null],[13,"Trace","","The &quot;trace&quot; level.",0,null],[4,"LogLevelFilter","","An enum representing the available verbosity level filters of the logging\nframework.",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"max_log_level","","Returns the current maximum log level.",null,{"inputs":[],"output":{"name":"loglevelfilter"}}],[5,"set_logger","","Sets the global logger.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"set_logger_raw","","Sets the global logger from a raw pointer.",null,{"inputs":[{"name":"m"}],"output":{"name":"result"}}],[5,"shutdown_logger","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[5,"shutdown_logger_raw","","Shuts down the global logger.",null,{"inputs":[],"output":{"name":"result"}}],[8,"Log","","A trait encapsulating the operations required of a logger",null,null],[10,"enabled","","Determines if a log message with the specified metadata would be\nlogged.",2,null],[10,"log","","Logs the `LogRecord`.",2,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"eq","","",0,null],[11,"partial_cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"cmp","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"max","","Returns the most verbose logging level.",0,{"inputs":[],"output":{"name":"loglevel"}}],[11,"to_log_level_filter","","Converts the `LogLevel` to the equivalent `LogLevelFilter`.",0,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"eq","","",1,null],[11,"partial_cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"cmp","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"max","","Returns the most verbose logging level filter.",1,{"inputs":[],"output":{"name":"loglevelfilter"}}],[11,"to_log_level","","Converts `self` to the equivalent `LogLevel`.",1,null],[11,"args","","The message body.",3,null],[11,"metadata","","Metadata about the log directive.",3,null],[11,"location","","The location of the log directive.",3,null],[11,"level","","The verbosity level of the message.",3,null],[11,"target","","The name of the target of the directive.",3,null],[11,"level","","The verbosity level of the message.",4,null],[11,"target","","The name of the target of the directive.",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"module_path","","The module path of the message.",5,null],[11,"file","","The source file containing the message.",5,null],[11,"line","","The line containing the message.",5,null],[11,"fmt","","",6,null],[11,"get","","Gets the current maximum log level filter.",6,null],[11,"set","","Sets the maximum log level.",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"description","","",7,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"description","","",8,null],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in that module will\nbe logged.",null,null]],"paths":[[4,"LogLevel"],[4,"LogLevelFilter"],[8,"Log"],[3,"LogRecord"],[3,"LogMetadata"],[3,"LogLocation"],[3,"MaxLogLevelFilter"],[3,"SetLoggerError"],[3,"ShutdownLoggerError"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",16,null],[12,"sa_data","","",16,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",17,null],[12,"sin_port","","",17,null],[12,"sin_addr","","",17,null],[12,"sin_zero","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",19,null],[12,"sun_path","","",19,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",20,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",21,null],[12,"ai_family","","",21,null],[12,"ai_socktype","","",21,null],[12,"ai_protocol","","",21,null],[12,"ai_addrlen","","",21,null],[12,"ai_addr","","",21,null],[12,"ai_canonname","","",21,null],[12,"ai_next","","",21,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",22,null],[12,"nl_pid","","",22,null],[12,"nl_groups","","",22,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",23,null],[12,"sll_protocol","","",23,null],[12,"sll_ifindex","","",23,null],[12,"sll_hatype","","",23,null],[12,"sll_pkttype","","",23,null],[12,"sll_halen","","",23,null],[12,"sll_addr","","",23,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",24,null],[12,"tm_min","","",24,null],[12,"tm_hour","","",24,null],[12,"tm_mday","","",24,null],[12,"tm_mon","","",24,null],[12,"tm_year","","",24,null],[12,"tm_wday","","",24,null],[12,"tm_yday","","",24,null],[12,"tm_isdst","","",24,null],[12,"tm_gmtoff","","",24,null],[12,"tm_zone","","",24,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",25,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",26,null],[12,"dli_fbase","","",26,null],[12,"dli_sname","","",26,null],[12,"dli_saddr","","",26,null],[3,"epoll_event","","",null,null],[12,"events","","",27,null],[12,"u64","","",27,null],[3,"utsname","","",null,null],[12,"sysname","","",28,null],[12,"nodename","","",28,null],[12,"release","","",28,null],[12,"version","","",28,null],[12,"machine","","",28,null],[12,"domainname","","",28,null],[3,"lconv","","",null,null],[12,"decimal_point","","",29,null],[12,"thousands_sep","","",29,null],[12,"grouping","","",29,null],[12,"int_curr_symbol","","",29,null],[12,"currency_symbol","","",29,null],[12,"mon_decimal_point","","",29,null],[12,"mon_thousands_sep","","",29,null],[12,"mon_grouping","","",29,null],[12,"positive_sign","","",29,null],[12,"negative_sign","","",29,null],[12,"int_frac_digits","","",29,null],[12,"frac_digits","","",29,null],[12,"p_cs_precedes","","",29,null],[12,"p_sep_by_space","","",29,null],[12,"n_cs_precedes","","",29,null],[12,"n_sep_by_space","","",29,null],[12,"p_sign_posn","","",29,null],[12,"n_sign_posn","","",29,null],[12,"int_p_cs_precedes","","",29,null],[12,"int_p_sep_by_space","","",29,null],[12,"int_n_cs_precedes","","",29,null],[12,"int_n_sep_by_space","","",29,null],[12,"int_p_sign_posn","","",29,null],[12,"int_n_sign_posn","","",29,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",30,null],[12,"sigev_signo","","",30,null],[12,"sigev_notify","","",30,null],[12,"sigev_notify_thread_id","","",30,null],[3,"dirent","","",null,null],[12,"d_ino","","",31,null],[12,"d_off","","",31,null],[12,"d_reclen","","",31,null],[12,"d_type","","",31,null],[12,"d_name","","",31,null],[3,"dirent64","","",null,null],[12,"d_ino","","",32,null],[12,"d_off","","",32,null],[12,"d_reclen","","",32,null],[12,"d_type","","",32,null],[12,"d_name","","",32,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",33,null],[12,"rlim_max","","",33,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",34,null],[12,"gl_pathv","","",34,null],[12,"gl_offs","","",34,null],[12,"gl_flags","","",34,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",35,null],[12,"ifa_name","","",35,null],[12,"ifa_flags","","",35,null],[12,"ifa_addr","","",35,null],[12,"ifa_netmask","","",35,null],[12,"ifa_ifu","","",35,null],[12,"ifa_data","","",35,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",36,null],[12,"pw_passwd","","",36,null],[12,"pw_uid","","",36,null],[12,"pw_gid","","",36,null],[12,"pw_gecos","","",36,null],[12,"pw_dir","","",36,null],[12,"pw_shell","","",36,null],[3,"spwd","","",null,null],[12,"sp_namp","","",37,null],[12,"sp_pwdp","","",37,null],[12,"sp_lstchg","","",37,null],[12,"sp_min","","",37,null],[12,"sp_max","","",37,null],[12,"sp_warn","","",37,null],[12,"sp_inact","","",37,null],[12,"sp_expire","","",37,null],[12,"sp_flag","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",39,null],[12,"dqb_bsoftlimit","","",39,null],[12,"dqb_curspace","","",39,null],[12,"dqb_ihardlimit","","",39,null],[12,"dqb_isoftlimit","","",39,null],[12,"dqb_curinodes","","",39,null],[12,"dqb_btime","","",39,null],[12,"dqb_itime","","",39,null],[12,"dqb_valid","","",39,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",40,null],[12,"ssi_errno","","",40,null],[12,"ssi_code","","",40,null],[12,"ssi_pid","","",40,null],[12,"ssi_uid","","",40,null],[12,"ssi_fd","","",40,null],[12,"ssi_tid","","",40,null],[12,"ssi_band","","",40,null],[12,"ssi_overrun","","",40,null],[12,"ssi_trapno","","",40,null],[12,"ssi_status","","",40,null],[12,"ssi_int","","",40,null],[12,"ssi_ptr","","",40,null],[12,"ssi_utime","","",40,null],[12,"ssi_stime","","",40,null],[12,"ssi_addr","","",40,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",41,null],[12,"mq_maxmsg","","",41,null],[12,"mq_msgsize","","",41,null],[12,"mq_curmsgs","","",41,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",42,null],[12,"if_name","","",42,null],[3,"msginfo","","",null,null],[12,"msgpool","","",43,null],[12,"msgmap","","",43,null],[12,"msgmax","","",43,null],[12,"msgmnb","","",43,null],[12,"msgmni","","",43,null],[12,"msgssz","","",43,null],[12,"msgtql","","",43,null],[12,"msgseg","","",43,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",44,null],[12,"aio_lio_opcode","","",44,null],[12,"aio_reqprio","","",44,null],[12,"aio_buf","","",44,null],[12,"aio_nbytes","","",44,null],[12,"aio_sigevent","","",44,null],[12,"aio_offset","","",44,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",45,null],[12,"e_exit","","",45,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",46,null],[12,"tv_usec","","",46,null],[3,"utmpx","","",null,null],[12,"ut_type","","",47,null],[12,"ut_pid","","",47,null],[12,"ut_line","","",47,null],[12,"ut_id","","",47,null],[12,"ut_user","","",47,null],[12,"ut_host","","",47,null],[12,"ut_exit","","",47,null],[12,"ut_session","","",47,null],[12,"ut_tv","","",47,null],[12,"ut_addr_v6","","",47,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",48,null],[12,"sa_mask","","",48,null],[12,"sa_flags","","",48,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",49,null],[12,"ss_flags","","",49,null],[12,"ss_size","","",49,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",50,null],[12,"si_errno","","",50,null],[12,"si_code","","",50,null],[12,"_pad","","",50,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",51,null],[12,"gl_pathv","","",51,null],[12,"gl_offs","","",51,null],[12,"gl_flags","","",51,null],[3,"ucred","","",null,null],[12,"pid","","",52,null],[12,"uid","","",52,null],[12,"gid","","",52,null],[3,"statfs","","",null,null],[12,"f_type","","",53,null],[12,"f_bsize","","",53,null],[12,"f_blocks","","",53,null],[12,"f_bfree","","",53,null],[12,"f_bavail","","",53,null],[12,"f_files","","",53,null],[12,"f_ffree","","",53,null],[12,"f_fsid","","",53,null],[12,"f_namelen","","",53,null],[12,"f_frsize","","",53,null],[3,"msghdr","","",null,null],[12,"msg_name","","",54,null],[12,"msg_namelen","","",54,null],[12,"msg_iov","","",54,null],[12,"msg_iovlen","","",54,null],[12,"msg_control","","",54,null],[12,"msg_controllen","","",54,null],[12,"msg_flags","","",54,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",55,null],[12,"cmsg_level","","",55,null],[12,"cmsg_type","","",55,null],[3,"termios","","",null,null],[12,"c_iflag","","",56,null],[12,"c_oflag","","",56,null],[12,"c_cflag","","",56,null],[12,"c_lflag","","",56,null],[12,"c_line","","",56,null],[12,"c_cc","","",56,null],[12,"c_ispeed","","",56,null],[12,"c_ospeed","","",56,null],[3,"flock","","",null,null],[12,"l_type","","",57,null],[12,"l_whence","","",57,null],[12,"l_start","","",57,null],[12,"l_len","","",57,null],[12,"l_pid","","",57,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",58,null],[12,"loads","","",58,null],[12,"totalram","","",58,null],[12,"freeram","","",58,null],[12,"sharedram","","",58,null],[12,"bufferram","","",58,null],[12,"totalswap","","",58,null],[12,"freeswap","","",58,null],[12,"procs","","",58,null],[12,"pad","","",58,null],[12,"totalhigh","","",58,null],[12,"freehigh","","",58,null],[12,"mem_unit","","",58,null],[12,"_f","","",58,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",59,null],[12,"msg_stime","","",59,null],[12,"msg_rtime","","",59,null],[12,"msg_ctime","","",59,null],[12,"msg_qnum","","",59,null],[12,"msg_qbytes","","",59,null],[12,"msg_lspid","","",59,null],[12,"msg_lrpid","","",59,null],[3,"stat","","",null,null],[12,"st_dev","","",60,null],[12,"st_ino","","",60,null],[12,"st_nlink","","",60,null],[12,"st_mode","","",60,null],[12,"st_uid","","",60,null],[12,"st_gid","","",60,null],[12,"st_rdev","","",60,null],[12,"st_size","","",60,null],[12,"st_blksize","","",60,null],[12,"st_blocks","","",60,null],[12,"st_atime","","",60,null],[12,"st_atime_nsec","","",60,null],[12,"st_mtime","","",60,null],[12,"st_mtime_nsec","","",60,null],[12,"st_ctime","","",60,null],[12,"st_ctime_nsec","","",60,null],[3,"stat64","","",null,null],[12,"st_dev","","",61,null],[12,"st_ino","","",61,null],[12,"st_nlink","","",61,null],[12,"st_mode","","",61,null],[12,"st_uid","","",61,null],[12,"st_gid","","",61,null],[12,"st_rdev","","",61,null],[12,"st_size","","",61,null],[12,"st_blksize","","",61,null],[12,"st_blocks","","",61,null],[12,"st_atime","","",61,null],[12,"st_atime_nsec","","",61,null],[12,"st_mtime","","",61,null],[12,"st_mtime_nsec","","",61,null],[12,"st_ctime","","",61,null],[12,"st_ctime_nsec","","",61,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",62,null],[12,"exponent","","",62,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",63,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",64,null],[12,"swd","","",64,null],[12,"ftw","","",64,null],[12,"fop","","",64,null],[12,"rip","","",64,null],[12,"rdp","","",64,null],[12,"mxcsr","","",64,null],[12,"mxcr_mask","","",64,null],[12,"_st","","",64,null],[12,"_xmm","","",64,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",65,null],[12,"fpregs","","",65,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",66,null],[12,"uc_link","","",66,null],[12,"uc_stack","","",66,null],[12,"uc_mcontext","","",66,null],[12,"uc_sigmask","","",66,null],[3,"ipc_perm","","",null,null],[12,"__key","","",67,null],[12,"uid","","",67,null],[12,"gid","","",67,null],[12,"cuid","","",67,null],[12,"cgid","","",67,null],[12,"mode","","",67,null],[12,"__seq","","",67,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",68,null],[12,"shm_segsz","","",68,null],[12,"shm_atime","","",68,null],[12,"shm_dtime","","",68,null],[12,"shm_ctime","","",68,null],[12,"shm_cpid","","",68,null],[12,"shm_lpid","","",68,null],[12,"shm_nattch","","",68,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_settime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"initgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"mknodat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"sethostname","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"clone","","",60,null],[11,"clone","","",61,null],[11,"clone","","",69,null],[11,"clone","","",62,null],[11,"clone","","",63,null],[11,"clone","","",64,null],[11,"clone","","",65,null],[11,"clone","","",66,null],[11,"clone","","",67,null],[11,"clone","","",68,null],[11,"clone","","",70,null],[11,"clone","","",58,null],[11,"clone","","",59,null],[11,"clone","","",44,null],[11,"clone","","",45,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"clone","","",48,null],[11,"clone","","",49,null],[11,"clone","","",50,null],[11,"clone","","",51,null],[11,"clone","","",52,null],[11,"clone","","",53,null],[11,"clone","","",54,null],[11,"clone","","",55,null],[11,"clone","","",56,null],[11,"clone","","",57,null],[11,"clone","","",71,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",72,null],[11,"clone","","",73,null],[11,"clone","","",74,null],[11,"clone","","",75,null],[11,"clone","","",76,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",77,null],[11,"clone","","",41,null],[11,"clone","","",78,null],[11,"clone","","",42,null],[11,"clone","","",43,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",79,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[14,"bitflags","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
searchIndex["serde"] = {"doc":"Serde Serialization Framework","items":[[0,"bytes","serde","Helper module to enable serializing bytes more efficiently",null,null],[3,"ByteBuf","serde::bytes","`ByteBuf` wraps a `Vec&lt;u8&gt;` and serializes as a byte array.",null,null],[3,"ByteBufVisitor","","This type implements the `serde::de::Visitor` trait for a `ByteBuf`.",null,null],[3,"Bytes","","`Bytes` wraps a `&amp;[u8]` in order to serialize into a byte array.",null,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"bytebuf"}}],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"cmp","","",0,null],[11,"new","","Construct a new, empty `ByteBuf`.",0,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified capacity.",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"from","","Wrap existing bytes in a `ByteBuf`.",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",0,null],[11,"into","","",0,null],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"as_ref","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"as_mut","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"serialize","","",0,null],[11,"visit_unit","","",1,null],[11,"visit_seq","","",1,null],[11,"visit_bytes","","",1,null],[11,"visit_byte_buf","","",1,null],[11,"visit_str","","",1,null],[11,"visit_string","","",1,null],[11,"deserialize","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",2,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"partial_cmp","","",2,null],[11,"lt","","",2,null],[11,"le","","",2,null],[11,"gt","","",2,null],[11,"ge","","",2,null],[11,"cmp","","",2,null],[11,"new","","Wrap an existing `&amp;[u8]`.",2,null],[11,"fmt","","",2,null],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"into","","",2,null],[11,"deref","","",2,null],[11,"serialize","","",2,null],[0,"de","serde","Generic deserialization framework.",null,null],[4,"Type","serde::de","`Type` represents all the primitive types that can be deserialized. This is used by\n`Error::invalid_type`.",null,null],[13,"Bool","","Represents a `bool` type.",3,null],[13,"Usize","","Represents a `usize` type.",3,null],[13,"U8","","Represents a `u8` type.",3,null],[13,"U16","","Represents a `u16` type.",3,null],[13,"U32","","Represents a `u32` type.",3,null],[13,"U64","","Represents a `u64` type.",3,null],[13,"Isize","","Represents a `isize` type.",3,null],[13,"I8","","Represents a `i8` type.",3,null],[13,"I16","","Represents a `i16` type.",3,null],[13,"I32","","Represents a `i32` type.",3,null],[13,"I64","","Represents a `i64` type.",3,null],[13,"F32","","Represents a `f32` type.",3,null],[13,"F64","","Represents a `f64` type.",3,null],[13,"Char","","Represents a `char` type.",3,null],[13,"Str","","Represents a `&amp;str` type.",3,null],[13,"String","","Represents a `String` type.",3,null],[13,"Unit","","Represents a `()` type.",3,null],[13,"Option","","Represents an `Option&lt;T&gt;` type.",3,null],[13,"Seq","","Represents a sequence type.",3,null],[13,"Map","","Represents a map type.",3,null],[13,"UnitStruct","","Represents a unit struct type.",3,null],[13,"NewtypeStruct","","Represents a newtype type.",3,null],[13,"TupleStruct","","Represents a tuple struct type.",3,null],[13,"Struct","","Represents a struct type.",3,null],[13,"FieldName","","Represents a struct field name.",3,null],[13,"Tuple","","Represents a tuple type.",3,null],[13,"Enum","","Represents an `enum` type.",3,null],[13,"VariantName","","Represents an enum variant name.",3,null],[13,"StructVariant","","Represents a struct variant.",3,null],[13,"TupleVariant","","Represents a tuple variant.",3,null],[13,"UnitVariant","","Represents a unit variant.",3,null],[13,"Bytes","","Represents a `&amp;[u8]` type.",3,null],[0,"impls","","This module contains `Deserialize` and `Visitor` implementations.",null,null],[3,"UnitVisitor","serde::de::impls","A visitor that produces a `()`.",null,null],[3,"BoolVisitor","","A visitor that produces a `bool`.",null,null],[3,"PhantomDataVisitor","","A visitor that produces a `PhantomData`.",null,null],[3,"BinaryHeapVisitor","","A visitor that produces a sequence.",null,null],[3,"BTreeSetVisitor","","A visitor that produces a sequence.",null,null],[3,"LinkedListVisitor","","A visitor that produces a sequence.",null,null],[3,"HashSetVisitor","","A visitor that produces a sequence.",null,null],[3,"VecVisitor","","A visitor that produces a sequence.",null,null],[3,"VecDequeVisitor","","A visitor that produces a sequence.",null,null],[3,"TupleVisitor1","","Construct a tuple visitor.",null,null],[3,"TupleVisitor2","","Construct a tuple visitor.",null,null],[3,"TupleVisitor3","","Construct a tuple visitor.",null,null],[3,"TupleVisitor4","","Construct a tuple visitor.",null,null],[3,"TupleVisitor5","","Construct a tuple visitor.",null,null],[3,"TupleVisitor6","","Construct a tuple visitor.",null,null],[3,"TupleVisitor7","","Construct a tuple visitor.",null,null],[3,"TupleVisitor8","","Construct a tuple visitor.",null,null],[3,"TupleVisitor9","","Construct a tuple visitor.",null,null],[3,"TupleVisitor10","","Construct a tuple visitor.",null,null],[3,"TupleVisitor11","","Construct a tuple visitor.",null,null],[3,"TupleVisitor12","","Construct a tuple visitor.",null,null],[3,"TupleVisitor13","","Construct a tuple visitor.",null,null],[3,"TupleVisitor14","","Construct a tuple visitor.",null,null],[3,"TupleVisitor15","","Construct a tuple visitor.",null,null],[3,"TupleVisitor16","","Construct a tuple visitor.",null,null],[3,"BTreeMapVisitor","","A visitor that produces a map.",null,null],[3,"HashMapVisitor","","A visitor that produces a map.",null,null],[3,"IgnoredAny","","A target for deserializers that want to ignore data. Implements\nDeserialize and silently eats data given to it.",null,null],[11,"visit_unit","","",4,null],[11,"visit_seq","","",4,null],[11,"visit_bool","","",5,null],[11,"visit_str","","",5,null],[11,"visit_unit","","",6,null],[11,"new","","Construct a new sequence visitor.",7,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",7,null],[11,"visit_seq","","",7,null],[11,"new","","Construct a new sequence visitor.",8,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",8,null],[11,"visit_seq","","",8,null],[11,"new","","Construct a new sequence visitor.",9,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",9,null],[11,"visit_seq","","",9,null],[11,"new","","Construct a new sequence visitor.",10,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",10,null],[11,"visit_seq","","",10,null],[11,"new","","Construct a new sequence visitor.",11,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",11,null],[11,"visit_seq","","",11,null],[11,"new","","Construct a new sequence visitor.",12,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",12,null],[11,"visit_seq","","",12,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",13,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",13,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",14,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",14,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",15,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",15,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",16,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",16,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",17,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",17,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",18,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",18,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",19,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",19,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",20,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",20,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",21,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",21,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",22,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",22,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",23,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",23,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",24,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",24,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",25,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",25,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",26,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",26,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",27,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",27,null],[11,"new","","Construct a `TupleVisitor*&lt;T&gt;`.",28,{"inputs":[],"output":{"name":"self"}}],[11,"visit_seq","","",28,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",29,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",29,null],[11,"visit_map","","",29,null],[11,"new","","Construct a `MapVisitor*&lt;T&gt;`.",30,{"inputs":[],"output":{"name":"self"}}],[11,"visit_unit","","",30,null],[11,"visit_map","","",30,null],[11,"deserialize","","",31,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[0,"value","serde::de","This module supports deserializing from primitives with the `ValueDeserializer` trait.",null,null],[3,"UnitDeserializer","serde::de::value","A helper deserializer that deserializes a `()`.",null,null],[3,"BoolDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"I64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"IsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U8Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U16Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"U64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"UsizeDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F32Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"F64Deserializer","","A helper deserializer that deserializes a number.",null,null],[3,"CharDeserializer","","A helper deserializer that deserializes a number.",null,null],[3,"StrDeserializer","","A helper deserializer that deserializes a `&amp;str`.",null,null],[3,"StringDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"CowStrDeserializer","","A helper deserializer that deserializes a `String`.",null,null],[3,"SeqDeserializer","","A helper deserializer that deserializes a sequence.",null,null],[3,"SeqVisitorDeserializer","","A helper deserializer that deserializes a sequence using a `SeqVisitor`.",null,null],[3,"MapDeserializer","","A helper deserializer that deserializes a map.",null,null],[3,"MapVisitorDeserializer","","A helper deserializer that deserializes a map using a `MapVisitor`.",null,null],[3,"BytesDeserializer","","A helper deserializer that deserializes a `&amp;[u8]`.",null,null],[3,"ByteBufDeserializer","","A helper deserializer that deserializes a `Vec&lt;u8&gt;`.",null,null],[4,"Error","","This represents all the possible errors that can occur using the `ValueDeserializer`.",null,null],[13,"Custom","","The value had some custom error.",32,null],[13,"InvalidType","","The value had an incorrect type.",32,null],[13,"InvalidLength","","The value had an invalid length.",32,null],[13,"InvalidValue","","The value is invalid and cannot be deserialized.",32,null],[13,"EndOfStream","","EOF while deserializing a value.",32,null],[13,"UnknownVariant","","Unknown variant in enum.",32,null],[13,"UnknownField","","Unknown field in struct.",32,null],[13,"MissingField","","Struct is missing a field.",32,null],[8,"ValueDeserializer","","This trait converts primitive types into a deserializer.",null,null],[16,"Deserializer","","The actual deserializer type.",33,null],[10,"into_deserializer","","Convert this value into a deserializer.",33,null],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"custom","","",32,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"end_of_stream","","",32,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","",32,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","",32,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","",32,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"fmt","","",32,null],[11,"description","","",32,null],[11,"cause","","",32,null],[11,"deserialize_bool","","",34,null],[11,"deserialize_usize","","",34,null],[11,"deserialize_u8","","",34,null],[11,"deserialize_u16","","",34,null],[11,"deserialize_u32","","",34,null],[11,"deserialize_u64","","",34,null],[11,"deserialize_isize","","",34,null],[11,"deserialize_i8","","",34,null],[11,"deserialize_i16","","",34,null],[11,"deserialize_i32","","",34,null],[11,"deserialize_i64","","",34,null],[11,"deserialize_f32","","",34,null],[11,"deserialize_f64","","",34,null],[11,"deserialize_char","","",34,null],[11,"deserialize_str","","",34,null],[11,"deserialize_string","","",34,null],[11,"deserialize_unit","","",34,null],[11,"deserialize_seq","","",34,null],[11,"deserialize_seq_fixed_size","","",34,null],[11,"deserialize_bytes","","",34,null],[11,"deserialize_map","","",34,null],[11,"deserialize_unit_struct","","",34,null],[11,"deserialize_newtype_struct","","",34,null],[11,"deserialize_tuple_struct","","",34,null],[11,"deserialize_struct","","",34,null],[11,"deserialize_struct_field","","",34,null],[11,"deserialize_tuple","","",34,null],[11,"deserialize_enum","","",34,null],[11,"deserialize_ignored_any","","",34,null],[11,"deserialize","","",34,null],[11,"deserialize_option","","",34,null],[11,"deserialize_bool","","",35,null],[11,"deserialize_usize","","",35,null],[11,"deserialize_u8","","",35,null],[11,"deserialize_u16","","",35,null],[11,"deserialize_u32","","",35,null],[11,"deserialize_u64","","",35,null],[11,"deserialize_isize","","",35,null],[11,"deserialize_i8","","",35,null],[11,"deserialize_i16","","",35,null],[11,"deserialize_i32","","",35,null],[11,"deserialize_i64","","",35,null],[11,"deserialize_f32","","",35,null],[11,"deserialize_f64","","",35,null],[11,"deserialize_char","","",35,null],[11,"deserialize_str","","",35,null],[11,"deserialize_string","","",35,null],[11,"deserialize_unit","","",35,null],[11,"deserialize_option","","",35,null],[11,"deserialize_seq","","",35,null],[11,"deserialize_seq_fixed_size","","",35,null],[11,"deserialize_bytes","","",35,null],[11,"deserialize_map","","",35,null],[11,"deserialize_unit_struct","","",35,null],[11,"deserialize_newtype_struct","","",35,null],[11,"deserialize_tuple_struct","","",35,null],[11,"deserialize_struct","","",35,null],[11,"deserialize_struct_field","","",35,null],[11,"deserialize_tuple","","",35,null],[11,"deserialize_enum","","",35,null],[11,"deserialize_ignored_any","","",35,null],[11,"deserialize","","",35,null],[11,"deserialize_bool","","",36,null],[11,"deserialize_usize","","",36,null],[11,"deserialize_u8","","",36,null],[11,"deserialize_u16","","",36,null],[11,"deserialize_u32","","",36,null],[11,"deserialize_u64","","",36,null],[11,"deserialize_isize","","",36,null],[11,"deserialize_i8","","",36,null],[11,"deserialize_i16","","",36,null],[11,"deserialize_i32","","",36,null],[11,"deserialize_i64","","",36,null],[11,"deserialize_f32","","",36,null],[11,"deserialize_f64","","",36,null],[11,"deserialize_char","","",36,null],[11,"deserialize_str","","",36,null],[11,"deserialize_string","","",36,null],[11,"deserialize_unit","","",36,null],[11,"deserialize_option","","",36,null],[11,"deserialize_seq","","",36,null],[11,"deserialize_seq_fixed_size","","",36,null],[11,"deserialize_bytes","","",36,null],[11,"deserialize_map","","",36,null],[11,"deserialize_unit_struct","","",36,null],[11,"deserialize_newtype_struct","","",36,null],[11,"deserialize_tuple_struct","","",36,null],[11,"deserialize_struct","","",36,null],[11,"deserialize_struct_field","","",36,null],[11,"deserialize_tuple","","",36,null],[11,"deserialize_enum","","",36,null],[11,"deserialize_ignored_any","","",36,null],[11,"deserialize","","",36,null],[11,"deserialize_bool","","",37,null],[11,"deserialize_usize","","",37,null],[11,"deserialize_u8","","",37,null],[11,"deserialize_u16","","",37,null],[11,"deserialize_u32","","",37,null],[11,"deserialize_u64","","",37,null],[11,"deserialize_isize","","",37,null],[11,"deserialize_i8","","",37,null],[11,"deserialize_i16","","",37,null],[11,"deserialize_i32","","",37,null],[11,"deserialize_i64","","",37,null],[11,"deserialize_f32","","",37,null],[11,"deserialize_f64","","",37,null],[11,"deserialize_char","","",37,null],[11,"deserialize_str","","",37,null],[11,"deserialize_string","","",37,null],[11,"deserialize_unit","","",37,null],[11,"deserialize_option","","",37,null],[11,"deserialize_seq","","",37,null],[11,"deserialize_seq_fixed_size","","",37,null],[11,"deserialize_bytes","","",37,null],[11,"deserialize_map","","",37,null],[11,"deserialize_unit_struct","","",37,null],[11,"deserialize_newtype_struct","","",37,null],[11,"deserialize_tuple_struct","","",37,null],[11,"deserialize_struct","","",37,null],[11,"deserialize_struct_field","","",37,null],[11,"deserialize_tuple","","",37,null],[11,"deserialize_enum","","",37,null],[11,"deserialize_ignored_any","","",37,null],[11,"deserialize","","",37,null],[11,"deserialize_bool","","",38,null],[11,"deserialize_usize","","",38,null],[11,"deserialize_u8","","",38,null],[11,"deserialize_u16","","",38,null],[11,"deserialize_u32","","",38,null],[11,"deserialize_u64","","",38,null],[11,"deserialize_isize","","",38,null],[11,"deserialize_i8","","",38,null],[11,"deserialize_i16","","",38,null],[11,"deserialize_i32","","",38,null],[11,"deserialize_i64","","",38,null],[11,"deserialize_f32","","",38,null],[11,"deserialize_f64","","",38,null],[11,"deserialize_char","","",38,null],[11,"deserialize_str","","",38,null],[11,"deserialize_string","","",38,null],[11,"deserialize_unit","","",38,null],[11,"deserialize_option","","",38,null],[11,"deserialize_seq","","",38,null],[11,"deserialize_seq_fixed_size","","",38,null],[11,"deserialize_bytes","","",38,null],[11,"deserialize_map","","",38,null],[11,"deserialize_unit_struct","","",38,null],[11,"deserialize_newtype_struct","","",38,null],[11,"deserialize_tuple_struct","","",38,null],[11,"deserialize_struct","","",38,null],[11,"deserialize_struct_field","","",38,null],[11,"deserialize_tuple","","",38,null],[11,"deserialize_enum","","",38,null],[11,"deserialize_ignored_any","","",38,null],[11,"deserialize","","",38,null],[11,"deserialize_bool","","",39,null],[11,"deserialize_usize","","",39,null],[11,"deserialize_u8","","",39,null],[11,"deserialize_u16","","",39,null],[11,"deserialize_u32","","",39,null],[11,"deserialize_u64","","",39,null],[11,"deserialize_isize","","",39,null],[11,"deserialize_i8","","",39,null],[11,"deserialize_i16","","",39,null],[11,"deserialize_i32","","",39,null],[11,"deserialize_i64","","",39,null],[11,"deserialize_f32","","",39,null],[11,"deserialize_f64","","",39,null],[11,"deserialize_char","","",39,null],[11,"deserialize_str","","",39,null],[11,"deserialize_string","","",39,null],[11,"deserialize_unit","","",39,null],[11,"deserialize_option","","",39,null],[11,"deserialize_seq","","",39,null],[11,"deserialize_seq_fixed_size","","",39,null],[11,"deserialize_bytes","","",39,null],[11,"deserialize_map","","",39,null],[11,"deserialize_unit_struct","","",39,null],[11,"deserialize_newtype_struct","","",39,null],[11,"deserialize_tuple_struct","","",39,null],[11,"deserialize_struct","","",39,null],[11,"deserialize_struct_field","","",39,null],[11,"deserialize_tuple","","",39,null],[11,"deserialize_enum","","",39,null],[11,"deserialize_ignored_any","","",39,null],[11,"deserialize","","",39,null],[11,"deserialize_bool","","",40,null],[11,"deserialize_usize","","",40,null],[11,"deserialize_u8","","",40,null],[11,"deserialize_u16","","",40,null],[11,"deserialize_u32","","",40,null],[11,"deserialize_u64","","",40,null],[11,"deserialize_isize","","",40,null],[11,"deserialize_i8","","",40,null],[11,"deserialize_i16","","",40,null],[11,"deserialize_i32","","",40,null],[11,"deserialize_i64","","",40,null],[11,"deserialize_f32","","",40,null],[11,"deserialize_f64","","",40,null],[11,"deserialize_char","","",40,null],[11,"deserialize_str","","",40,null],[11,"deserialize_string","","",40,null],[11,"deserialize_unit","","",40,null],[11,"deserialize_option","","",40,null],[11,"deserialize_seq","","",40,null],[11,"deserialize_seq_fixed_size","","",40,null],[11,"deserialize_bytes","","",40,null],[11,"deserialize_map","","",40,null],[11,"deserialize_unit_struct","","",40,null],[11,"deserialize_newtype_struct","","",40,null],[11,"deserialize_tuple_struct","","",40,null],[11,"deserialize_struct","","",40,null],[11,"deserialize_struct_field","","",40,null],[11,"deserialize_tuple","","",40,null],[11,"deserialize_enum","","",40,null],[11,"deserialize_ignored_any","","",40,null],[11,"deserialize","","",40,null],[11,"deserialize_bool","","",41,null],[11,"deserialize_usize","","",41,null],[11,"deserialize_u8","","",41,null],[11,"deserialize_u16","","",41,null],[11,"deserialize_u32","","",41,null],[11,"deserialize_u64","","",41,null],[11,"deserialize_isize","","",41,null],[11,"deserialize_i8","","",41,null],[11,"deserialize_i16","","",41,null],[11,"deserialize_i32","","",41,null],[11,"deserialize_i64","","",41,null],[11,"deserialize_f32","","",41,null],[11,"deserialize_f64","","",41,null],[11,"deserialize_char","","",41,null],[11,"deserialize_str","","",41,null],[11,"deserialize_string","","",41,null],[11,"deserialize_unit","","",41,null],[11,"deserialize_option","","",41,null],[11,"deserialize_seq","","",41,null],[11,"deserialize_seq_fixed_size","","",41,null],[11,"deserialize_bytes","","",41,null],[11,"deserialize_map","","",41,null],[11,"deserialize_unit_struct","","",41,null],[11,"deserialize_newtype_struct","","",41,null],[11,"deserialize_tuple_struct","","",41,null],[11,"deserialize_struct","","",41,null],[11,"deserialize_struct_field","","",41,null],[11,"deserialize_tuple","","",41,null],[11,"deserialize_enum","","",41,null],[11,"deserialize_ignored_any","","",41,null],[11,"deserialize","","",41,null],[11,"deserialize_bool","","",42,null],[11,"deserialize_usize","","",42,null],[11,"deserialize_u8","","",42,null],[11,"deserialize_u16","","",42,null],[11,"deserialize_u32","","",42,null],[11,"deserialize_u64","","",42,null],[11,"deserialize_isize","","",42,null],[11,"deserialize_i8","","",42,null],[11,"deserialize_i16","","",42,null],[11,"deserialize_i32","","",42,null],[11,"deserialize_i64","","",42,null],[11,"deserialize_f32","","",42,null],[11,"deserialize_f64","","",42,null],[11,"deserialize_char","","",42,null],[11,"deserialize_str","","",42,null],[11,"deserialize_string","","",42,null],[11,"deserialize_unit","","",42,null],[11,"deserialize_option","","",42,null],[11,"deserialize_seq","","",42,null],[11,"deserialize_seq_fixed_size","","",42,null],[11,"deserialize_bytes","","",42,null],[11,"deserialize_map","","",42,null],[11,"deserialize_unit_struct","","",42,null],[11,"deserialize_newtype_struct","","",42,null],[11,"deserialize_tuple_struct","","",42,null],[11,"deserialize_struct","","",42,null],[11,"deserialize_struct_field","","",42,null],[11,"deserialize_tuple","","",42,null],[11,"deserialize_enum","","",42,null],[11,"deserialize_ignored_any","","",42,null],[11,"deserialize","","",42,null],[11,"deserialize_bool","","",43,null],[11,"deserialize_usize","","",43,null],[11,"deserialize_u8","","",43,null],[11,"deserialize_u16","","",43,null],[11,"deserialize_u32","","",43,null],[11,"deserialize_u64","","",43,null],[11,"deserialize_isize","","",43,null],[11,"deserialize_i8","","",43,null],[11,"deserialize_i16","","",43,null],[11,"deserialize_i32","","",43,null],[11,"deserialize_i64","","",43,null],[11,"deserialize_f32","","",43,null],[11,"deserialize_f64","","",43,null],[11,"deserialize_char","","",43,null],[11,"deserialize_str","","",43,null],[11,"deserialize_string","","",43,null],[11,"deserialize_unit","","",43,null],[11,"deserialize_option","","",43,null],[11,"deserialize_seq","","",43,null],[11,"deserialize_seq_fixed_size","","",43,null],[11,"deserialize_bytes","","",43,null],[11,"deserialize_map","","",43,null],[11,"deserialize_unit_struct","","",43,null],[11,"deserialize_newtype_struct","","",43,null],[11,"deserialize_tuple_struct","","",43,null],[11,"deserialize_struct","","",43,null],[11,"deserialize_struct_field","","",43,null],[11,"deserialize_tuple","","",43,null],[11,"deserialize_enum","","",43,null],[11,"deserialize_ignored_any","","",43,null],[11,"deserialize","","",43,null],[11,"deserialize_bool","","",44,null],[11,"deserialize_usize","","",44,null],[11,"deserialize_u8","","",44,null],[11,"deserialize_u16","","",44,null],[11,"deserialize_u32","","",44,null],[11,"deserialize_u64","","",44,null],[11,"deserialize_isize","","",44,null],[11,"deserialize_i8","","",44,null],[11,"deserialize_i16","","",44,null],[11,"deserialize_i32","","",44,null],[11,"deserialize_i64","","",44,null],[11,"deserialize_f32","","",44,null],[11,"deserialize_f64","","",44,null],[11,"deserialize_char","","",44,null],[11,"deserialize_str","","",44,null],[11,"deserialize_string","","",44,null],[11,"deserialize_unit","","",44,null],[11,"deserialize_option","","",44,null],[11,"deserialize_seq","","",44,null],[11,"deserialize_seq_fixed_size","","",44,null],[11,"deserialize_bytes","","",44,null],[11,"deserialize_map","","",44,null],[11,"deserialize_unit_struct","","",44,null],[11,"deserialize_newtype_struct","","",44,null],[11,"deserialize_tuple_struct","","",44,null],[11,"deserialize_struct","","",44,null],[11,"deserialize_struct_field","","",44,null],[11,"deserialize_tuple","","",44,null],[11,"deserialize_enum","","",44,null],[11,"deserialize_ignored_any","","",44,null],[11,"deserialize","","",44,null],[11,"deserialize_bool","","",45,null],[11,"deserialize_usize","","",45,null],[11,"deserialize_u8","","",45,null],[11,"deserialize_u16","","",45,null],[11,"deserialize_u32","","",45,null],[11,"deserialize_u64","","",45,null],[11,"deserialize_isize","","",45,null],[11,"deserialize_i8","","",45,null],[11,"deserialize_i16","","",45,null],[11,"deserialize_i32","","",45,null],[11,"deserialize_i64","","",45,null],[11,"deserialize_f32","","",45,null],[11,"deserialize_f64","","",45,null],[11,"deserialize_char","","",45,null],[11,"deserialize_str","","",45,null],[11,"deserialize_string","","",45,null],[11,"deserialize_unit","","",45,null],[11,"deserialize_option","","",45,null],[11,"deserialize_seq","","",45,null],[11,"deserialize_seq_fixed_size","","",45,null],[11,"deserialize_bytes","","",45,null],[11,"deserialize_map","","",45,null],[11,"deserialize_unit_struct","","",45,null],[11,"deserialize_newtype_struct","","",45,null],[11,"deserialize_tuple_struct","","",45,null],[11,"deserialize_struct","","",45,null],[11,"deserialize_struct_field","","",45,null],[11,"deserialize_tuple","","",45,null],[11,"deserialize_enum","","",45,null],[11,"deserialize_ignored_any","","",45,null],[11,"deserialize","","",45,null],[11,"deserialize_bool","","",46,null],[11,"deserialize_usize","","",46,null],[11,"deserialize_u8","","",46,null],[11,"deserialize_u16","","",46,null],[11,"deserialize_u32","","",46,null],[11,"deserialize_u64","","",46,null],[11,"deserialize_isize","","",46,null],[11,"deserialize_i8","","",46,null],[11,"deserialize_i16","","",46,null],[11,"deserialize_i32","","",46,null],[11,"deserialize_i64","","",46,null],[11,"deserialize_f32","","",46,null],[11,"deserialize_f64","","",46,null],[11,"deserialize_char","","",46,null],[11,"deserialize_str","","",46,null],[11,"deserialize_string","","",46,null],[11,"deserialize_unit","","",46,null],[11,"deserialize_option","","",46,null],[11,"deserialize_seq","","",46,null],[11,"deserialize_seq_fixed_size","","",46,null],[11,"deserialize_bytes","","",46,null],[11,"deserialize_map","","",46,null],[11,"deserialize_unit_struct","","",46,null],[11,"deserialize_newtype_struct","","",46,null],[11,"deserialize_tuple_struct","","",46,null],[11,"deserialize_struct","","",46,null],[11,"deserialize_struct_field","","",46,null],[11,"deserialize_tuple","","",46,null],[11,"deserialize_enum","","",46,null],[11,"deserialize_ignored_any","","",46,null],[11,"deserialize","","",46,null],[11,"deserialize_bool","","",47,null],[11,"deserialize_usize","","",47,null],[11,"deserialize_u8","","",47,null],[11,"deserialize_u16","","",47,null],[11,"deserialize_u32","","",47,null],[11,"deserialize_u64","","",47,null],[11,"deserialize_isize","","",47,null],[11,"deserialize_i8","","",47,null],[11,"deserialize_i16","","",47,null],[11,"deserialize_i32","","",47,null],[11,"deserialize_i64","","",47,null],[11,"deserialize_f32","","",47,null],[11,"deserialize_f64","","",47,null],[11,"deserialize_char","","",47,null],[11,"deserialize_str","","",47,null],[11,"deserialize_string","","",47,null],[11,"deserialize_unit","","",47,null],[11,"deserialize_option","","",47,null],[11,"deserialize_seq","","",47,null],[11,"deserialize_seq_fixed_size","","",47,null],[11,"deserialize_bytes","","",47,null],[11,"deserialize_map","","",47,null],[11,"deserialize_unit_struct","","",47,null],[11,"deserialize_newtype_struct","","",47,null],[11,"deserialize_tuple_struct","","",47,null],[11,"deserialize_struct","","",47,null],[11,"deserialize_struct_field","","",47,null],[11,"deserialize_tuple","","",47,null],[11,"deserialize_enum","","",47,null],[11,"deserialize_ignored_any","","",47,null],[11,"deserialize","","",47,null],[11,"deserialize_bool","","",48,null],[11,"deserialize_usize","","",48,null],[11,"deserialize_u8","","",48,null],[11,"deserialize_u16","","",48,null],[11,"deserialize_u32","","",48,null],[11,"deserialize_u64","","",48,null],[11,"deserialize_isize","","",48,null],[11,"deserialize_i8","","",48,null],[11,"deserialize_i16","","",48,null],[11,"deserialize_i32","","",48,null],[11,"deserialize_i64","","",48,null],[11,"deserialize_f32","","",48,null],[11,"deserialize_f64","","",48,null],[11,"deserialize_char","","",48,null],[11,"deserialize_str","","",48,null],[11,"deserialize_string","","",48,null],[11,"deserialize_unit","","",48,null],[11,"deserialize_option","","",48,null],[11,"deserialize_seq","","",48,null],[11,"deserialize_seq_fixed_size","","",48,null],[11,"deserialize_bytes","","",48,null],[11,"deserialize_map","","",48,null],[11,"deserialize_unit_struct","","",48,null],[11,"deserialize_newtype_struct","","",48,null],[11,"deserialize_tuple_struct","","",48,null],[11,"deserialize_struct","","",48,null],[11,"deserialize_struct_field","","",48,null],[11,"deserialize_tuple","","",48,null],[11,"deserialize_enum","","",48,null],[11,"deserialize_ignored_any","","",48,null],[11,"deserialize","","",48,null],[11,"deserialize","","",49,null],[11,"deserialize_enum","","",49,null],[11,"deserialize_bool","","",49,null],[11,"deserialize_usize","","",49,null],[11,"deserialize_u8","","",49,null],[11,"deserialize_u16","","",49,null],[11,"deserialize_u32","","",49,null],[11,"deserialize_u64","","",49,null],[11,"deserialize_isize","","",49,null],[11,"deserialize_i8","","",49,null],[11,"deserialize_i16","","",49,null],[11,"deserialize_i32","","",49,null],[11,"deserialize_i64","","",49,null],[11,"deserialize_f32","","",49,null],[11,"deserialize_f64","","",49,null],[11,"deserialize_char","","",49,null],[11,"deserialize_str","","",49,null],[11,"deserialize_string","","",49,null],[11,"deserialize_unit","","",49,null],[11,"deserialize_option","","",49,null],[11,"deserialize_seq","","",49,null],[11,"deserialize_seq_fixed_size","","",49,null],[11,"deserialize_bytes","","",49,null],[11,"deserialize_map","","",49,null],[11,"deserialize_unit_struct","","",49,null],[11,"deserialize_newtype_struct","","",49,null],[11,"deserialize_tuple_struct","","",49,null],[11,"deserialize_struct","","",49,null],[11,"deserialize_struct_field","","",49,null],[11,"deserialize_tuple","","",49,null],[11,"deserialize_ignored_any","","",49,null],[11,"visit_variant","","",49,null],[11,"visit_unit","","",49,null],[11,"visit_newtype","","",49,null],[11,"visit_tuple","","",49,null],[11,"visit_struct","","",49,null],[11,"deserialize","","",50,null],[11,"deserialize_enum","","",50,null],[11,"deserialize_bool","","",50,null],[11,"deserialize_usize","","",50,null],[11,"deserialize_u8","","",50,null],[11,"deserialize_u16","","",50,null],[11,"deserialize_u32","","",50,null],[11,"deserialize_u64","","",50,null],[11,"deserialize_isize","","",50,null],[11,"deserialize_i8","","",50,null],[11,"deserialize_i16","","",50,null],[11,"deserialize_i32","","",50,null],[11,"deserialize_i64","","",50,null],[11,"deserialize_f32","","",50,null],[11,"deserialize_f64","","",50,null],[11,"deserialize_char","","",50,null],[11,"deserialize_str","","",50,null],[11,"deserialize_string","","",50,null],[11,"deserialize_unit","","",50,null],[11,"deserialize_option","","",50,null],[11,"deserialize_seq","","",50,null],[11,"deserialize_seq_fixed_size","","",50,null],[11,"deserialize_bytes","","",50,null],[11,"deserialize_map","","",50,null],[11,"deserialize_unit_struct","","",50,null],[11,"deserialize_newtype_struct","","",50,null],[11,"deserialize_tuple_struct","","",50,null],[11,"deserialize_struct","","",50,null],[11,"deserialize_struct_field","","",50,null],[11,"deserialize_tuple","","",50,null],[11,"deserialize_ignored_any","","",50,null],[11,"visit_variant","","",50,null],[11,"visit_unit","","",50,null],[11,"visit_newtype","","",50,null],[11,"visit_tuple","","",50,null],[11,"visit_struct","","",50,null],[11,"deserialize","","",51,null],[11,"deserialize_enum","","",51,null],[11,"deserialize_bool","","",51,null],[11,"deserialize_usize","","",51,null],[11,"deserialize_u8","","",51,null],[11,"deserialize_u16","","",51,null],[11,"deserialize_u32","","",51,null],[11,"deserialize_u64","","",51,null],[11,"deserialize_isize","","",51,null],[11,"deserialize_i8","","",51,null],[11,"deserialize_i16","","",51,null],[11,"deserialize_i32","","",51,null],[11,"deserialize_i64","","",51,null],[11,"deserialize_f32","","",51,null],[11,"deserialize_f64","","",51,null],[11,"deserialize_char","","",51,null],[11,"deserialize_str","","",51,null],[11,"deserialize_string","","",51,null],[11,"deserialize_unit","","",51,null],[11,"deserialize_option","","",51,null],[11,"deserialize_seq","","",51,null],[11,"deserialize_seq_fixed_size","","",51,null],[11,"deserialize_bytes","","",51,null],[11,"deserialize_map","","",51,null],[11,"deserialize_unit_struct","","",51,null],[11,"deserialize_newtype_struct","","",51,null],[11,"deserialize_tuple_struct","","",51,null],[11,"deserialize_struct","","",51,null],[11,"deserialize_struct_field","","",51,null],[11,"deserialize_tuple","","",51,null],[11,"deserialize_ignored_any","","",51,null],[11,"visit_variant","","",51,null],[11,"visit_unit","","",51,null],[11,"visit_newtype","","",51,null],[11,"visit_tuple","","",51,null],[11,"visit_struct","","",51,null],[11,"new","","Construct a new `SeqDeserializer&lt;I&gt;`.",52,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"deserialize","","",52,null],[11,"deserialize_bool","","",52,null],[11,"deserialize_usize","","",52,null],[11,"deserialize_u8","","",52,null],[11,"deserialize_u16","","",52,null],[11,"deserialize_u32","","",52,null],[11,"deserialize_u64","","",52,null],[11,"deserialize_isize","","",52,null],[11,"deserialize_i8","","",52,null],[11,"deserialize_i16","","",52,null],[11,"deserialize_i32","","",52,null],[11,"deserialize_i64","","",52,null],[11,"deserialize_f32","","",52,null],[11,"deserialize_f64","","",52,null],[11,"deserialize_char","","",52,null],[11,"deserialize_str","","",52,null],[11,"deserialize_string","","",52,null],[11,"deserialize_unit","","",52,null],[11,"deserialize_option","","",52,null],[11,"deserialize_seq","","",52,null],[11,"deserialize_seq_fixed_size","","",52,null],[11,"deserialize_bytes","","",52,null],[11,"deserialize_map","","",52,null],[11,"deserialize_unit_struct","","",52,null],[11,"deserialize_newtype_struct","","",52,null],[11,"deserialize_tuple_struct","","",52,null],[11,"deserialize_struct","","",52,null],[11,"deserialize_struct_field","","",52,null],[11,"deserialize_tuple","","",52,null],[11,"deserialize_enum","","",52,null],[11,"deserialize_ignored_any","","",52,null],[11,"visit","","",52,null],[11,"end","","",52,null],[11,"size_hint","","",52,null],[11,"new","","Construct a new `SeqVisitorDeserializer&lt;V_, E&gt;`.",53,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",53,null],[11,"deserialize_bool","","",53,null],[11,"deserialize_usize","","",53,null],[11,"deserialize_u8","","",53,null],[11,"deserialize_u16","","",53,null],[11,"deserialize_u32","","",53,null],[11,"deserialize_u64","","",53,null],[11,"deserialize_isize","","",53,null],[11,"deserialize_i8","","",53,null],[11,"deserialize_i16","","",53,null],[11,"deserialize_i32","","",53,null],[11,"deserialize_i64","","",53,null],[11,"deserialize_f32","","",53,null],[11,"deserialize_f64","","",53,null],[11,"deserialize_char","","",53,null],[11,"deserialize_str","","",53,null],[11,"deserialize_string","","",53,null],[11,"deserialize_unit","","",53,null],[11,"deserialize_option","","",53,null],[11,"deserialize_seq","","",53,null],[11,"deserialize_seq_fixed_size","","",53,null],[11,"deserialize_bytes","","",53,null],[11,"deserialize_map","","",53,null],[11,"deserialize_unit_struct","","",53,null],[11,"deserialize_newtype_struct","","",53,null],[11,"deserialize_tuple_struct","","",53,null],[11,"deserialize_struct","","",53,null],[11,"deserialize_struct_field","","",53,null],[11,"deserialize_tuple","","",53,null],[11,"deserialize_enum","","",53,null],[11,"deserialize_ignored_any","","",53,null],[11,"new","","Construct a new `MapDeserializer&lt;I, K, V, E&gt;` with a specific length.",54,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"self"}}],[11,"unbounded","","Construct a new `MapDeserializer&lt;I, K, V, E&gt;` that is not bounded\nby a specific length and that delegates to `iter` for its size hint.",54,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deserialize","","",54,null],[11,"deserialize_seq","","",54,null],[11,"deserialize_seq_fixed_size","","",54,null],[11,"deserialize_bool","","",54,null],[11,"deserialize_usize","","",54,null],[11,"deserialize_u8","","",54,null],[11,"deserialize_u16","","",54,null],[11,"deserialize_u32","","",54,null],[11,"deserialize_u64","","",54,null],[11,"deserialize_isize","","",54,null],[11,"deserialize_i8","","",54,null],[11,"deserialize_i16","","",54,null],[11,"deserialize_i32","","",54,null],[11,"deserialize_i64","","",54,null],[11,"deserialize_f32","","",54,null],[11,"deserialize_f64","","",54,null],[11,"deserialize_char","","",54,null],[11,"deserialize_str","","",54,null],[11,"deserialize_string","","",54,null],[11,"deserialize_unit","","",54,null],[11,"deserialize_option","","",54,null],[11,"deserialize_bytes","","",54,null],[11,"deserialize_map","","",54,null],[11,"deserialize_unit_struct","","",54,null],[11,"deserialize_newtype_struct","","",54,null],[11,"deserialize_tuple_struct","","",54,null],[11,"deserialize_struct","","",54,null],[11,"deserialize_struct_field","","",54,null],[11,"deserialize_tuple","","",54,null],[11,"deserialize_enum","","",54,null],[11,"deserialize_ignored_any","","",54,null],[11,"visit_key","","",54,null],[11,"visit_value","","",54,null],[11,"end","","",54,null],[11,"size_hint","","",54,null],[11,"visit","","",54,null],[11,"end","","",54,null],[11,"size_hint","","",54,null],[11,"new","","Construct a new `MapVisitorDeserializer&lt;V_, E&gt;`.",55,{"inputs":[{"name":"v_"}],"output":{"name":"self"}}],[11,"deserialize","","",55,null],[11,"deserialize_bool","","",55,null],[11,"deserialize_usize","","",55,null],[11,"deserialize_u8","","",55,null],[11,"deserialize_u16","","",55,null],[11,"deserialize_u32","","",55,null],[11,"deserialize_u64","","",55,null],[11,"deserialize_isize","","",55,null],[11,"deserialize_i8","","",55,null],[11,"deserialize_i16","","",55,null],[11,"deserialize_i32","","",55,null],[11,"deserialize_i64","","",55,null],[11,"deserialize_f32","","",55,null],[11,"deserialize_f64","","",55,null],[11,"deserialize_char","","",55,null],[11,"deserialize_str","","",55,null],[11,"deserialize_string","","",55,null],[11,"deserialize_unit","","",55,null],[11,"deserialize_option","","",55,null],[11,"deserialize_seq","","",55,null],[11,"deserialize_seq_fixed_size","","",55,null],[11,"deserialize_bytes","","",55,null],[11,"deserialize_map","","",55,null],[11,"deserialize_unit_struct","","",55,null],[11,"deserialize_newtype_struct","","",55,null],[11,"deserialize_tuple_struct","","",55,null],[11,"deserialize_struct","","",55,null],[11,"deserialize_struct_field","","",55,null],[11,"deserialize_tuple","","",55,null],[11,"deserialize_enum","","",55,null],[11,"deserialize_ignored_any","","",55,null],[11,"into_deserializer","serde::bytes","",2,null],[11,"deserialize","serde::de::value","",56,null],[11,"deserialize_bool","","",56,null],[11,"deserialize_usize","","",56,null],[11,"deserialize_u8","","",56,null],[11,"deserialize_u16","","",56,null],[11,"deserialize_u32","","",56,null],[11,"deserialize_u64","","",56,null],[11,"deserialize_isize","","",56,null],[11,"deserialize_i8","","",56,null],[11,"deserialize_i16","","",56,null],[11,"deserialize_i32","","",56,null],[11,"deserialize_i64","","",56,null],[11,"deserialize_f32","","",56,null],[11,"deserialize_f64","","",56,null],[11,"deserialize_char","","",56,null],[11,"deserialize_str","","",56,null],[11,"deserialize_string","","",56,null],[11,"deserialize_unit","","",56,null],[11,"deserialize_option","","",56,null],[11,"deserialize_seq","","",56,null],[11,"deserialize_seq_fixed_size","","",56,null],[11,"deserialize_bytes","","",56,null],[11,"deserialize_map","","",56,null],[11,"deserialize_unit_struct","","",56,null],[11,"deserialize_newtype_struct","","",56,null],[11,"deserialize_tuple_struct","","",56,null],[11,"deserialize_struct","","",56,null],[11,"deserialize_struct_field","","",56,null],[11,"deserialize_tuple","","",56,null],[11,"deserialize_enum","","",56,null],[11,"deserialize_ignored_any","","",56,null],[11,"into_deserializer","serde::bytes","",0,null],[11,"deserialize","serde::de::value","",57,null],[11,"deserialize_bool","","",57,null],[11,"deserialize_usize","","",57,null],[11,"deserialize_u8","","",57,null],[11,"deserialize_u16","","",57,null],[11,"deserialize_u32","","",57,null],[11,"deserialize_u64","","",57,null],[11,"deserialize_isize","","",57,null],[11,"deserialize_i8","","",57,null],[11,"deserialize_i16","","",57,null],[11,"deserialize_i32","","",57,null],[11,"deserialize_i64","","",57,null],[11,"deserialize_f32","","",57,null],[11,"deserialize_f64","","",57,null],[11,"deserialize_char","","",57,null],[11,"deserialize_str","","",57,null],[11,"deserialize_string","","",57,null],[11,"deserialize_unit","","",57,null],[11,"deserialize_option","","",57,null],[11,"deserialize_seq","","",57,null],[11,"deserialize_seq_fixed_size","","",57,null],[11,"deserialize_bytes","","",57,null],[11,"deserialize_map","","",57,null],[11,"deserialize_unit_struct","","",57,null],[11,"deserialize_newtype_struct","","",57,null],[11,"deserialize_tuple_struct","","",57,null],[11,"deserialize_struct","","",57,null],[11,"deserialize_struct_field","","",57,null],[11,"deserialize_tuple","","",57,null],[11,"deserialize_enum","","",57,null],[11,"deserialize_ignored_any","","",57,null],[8,"Error","serde::de","`Error` is a trait that allows a `Deserialize` to generically create a\n`Deserializer` error.",null,null],[10,"custom","","Raised when there is general error when deserializing a type.",58,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[10,"end_of_stream","","Raised when a `Deserialize` type unexpectedly hit the end of the stream.",58,{"inputs":[],"output":{"name":"self"}}],[11,"invalid_type","","Raised when a `Deserialize` was passed an incorrect type.",58,{"inputs":[{"name":"type"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Deserialize` was passed an incorrect value.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"invalid_length","","Raised when a fixed sized sequence or map was passed in the wrong amount of arguments.",58,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"unknown_variant","","Raised when a `Deserialize` enum type received an unexpected variant.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"unknown_field","","Raised when a `Deserialize` struct type received an unexpected struct field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"missing_field","","raised when a `deserialize` struct type did not receive a field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the\nsame struct field.",58,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Deserialize","","`Deserialize` represents a type that can be deserialized.",null,null],[10,"deserialize","","Deserialize this value given this `Deserializer`.",59,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Deserializer","","`Deserializer` is a trait that can deserialize values by threading a `Visitor` trait through a\nvalue. It supports two entry point styles which enables different kinds of deserialization.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",60,null],[10,"deserialize","","This method walks a visitor through a value as it is being deserialized.",60,null],[10,"deserialize_bool","","This method hints that the `Deserialize` type is expecting a `bool` value.",60,null],[10,"deserialize_usize","","This method hints that the `Deserialize` type is expecting an `usize` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u8","","This method hints that the `Deserialize` type is expecting an `u8` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u16","","This method hints that the `Deserialize` type is expecting an `u16` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u32","","This method hints that the `Deserialize` type is expecting an `u32` value.\nA reasonable default is to forward to `deserialize_u64`.",60,null],[10,"deserialize_u64","","This method hints that the `Deserialize` type is expecting an `u64` value.",60,null],[10,"deserialize_isize","","This method hints that the `Deserialize` type is expecting an `isize` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i8","","This method hints that the `Deserialize` type is expecting an `i8` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i16","","This method hints that the `Deserialize` type is expecting an `i16` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i32","","This method hints that the `Deserialize` type is expecting an `i32` value.\nA reasonable default is to forward to `deserialize_i64`.",60,null],[10,"deserialize_i64","","This method hints that the `Deserialize` type is expecting an `i64` value.",60,null],[10,"deserialize_f32","","This method hints that the `Deserialize` type is expecting a `f32` value.\nA reasonable default is to forward to `deserialize_f64`.",60,null],[10,"deserialize_f64","","This method hints that the `Deserialize` type is expecting a `f64` value.",60,null],[10,"deserialize_char","","This method hints that the `Deserialize` type is expecting a `char` value.",60,null],[10,"deserialize_str","","This method hints that the `Deserialize` type is expecting a `&amp;str` value.",60,null],[10,"deserialize_string","","This method hints that the `Deserialize` type is expecting a `String` value.",60,null],[10,"deserialize_unit","","This method hints that the `Deserialize` type is expecting an `unit` value.",60,null],[10,"deserialize_option","","This method hints that the `Deserialize` type is expecting an `Option` value. This allows\ndeserializers that encode an optional value as a nullable value to convert the null value\ninto a `None`, and a regular value as `Some(value)`.",60,null],[10,"deserialize_seq","","This method hints that the `Deserialize` type is expecting a sequence value. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",60,null],[10,"deserialize_seq_fixed_size","","This method hints that the `Deserialize` type is expecting a fixed size array. This allows\ndeserializers to parse arrays that aren&#39;t tagged as arrays.",60,null],[10,"deserialize_bytes","","This method hints that the `Deserialize` type is expecting a `Vec&lt;u8&gt;`. This allows\ndeserializers that provide a custom byte vector serialization to properly deserialize the\ntype.",60,null],[10,"deserialize_map","","This method hints that the `Deserialize` type is expecting a map of values. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",60,null],[10,"deserialize_unit_struct","","This method hints that the `Deserialize` type is expecting a unit struct. This allows\ndeserializers to a unit struct that aren&#39;t tagged as a unit struct.",60,null],[10,"deserialize_newtype_struct","","This method hints that the `Deserialize` type is expecting a newtype struct. This allows\ndeserializers to a newtype struct that aren&#39;t tagged as a newtype struct.\nA reasonable default is to simply deserialize the expected value directly.",60,null],[10,"deserialize_tuple_struct","","This method hints that the `Deserialize` type is expecting a tuple struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as sequences.",60,null],[10,"deserialize_struct","","This method hints that the `Deserialize` type is expecting a struct. This allows\ndeserializers to parse sequences that aren&#39;t tagged as maps.",60,null],[10,"deserialize_struct_field","","This method hints that the `Deserialize` type is expecting some sort of struct field\nname.  This allows deserializers to choose between &amp;str, usize, or &amp;[u8] to properly\ndeserialize a struct field.",60,null],[10,"deserialize_tuple","","This method hints that the `Deserialize` type is expecting a tuple value. This allows\ndeserializers that provide a custom tuple serialization to properly deserialize the type.",60,null],[10,"deserialize_enum","","This method hints that the `Deserialize` type is expecting an enum value. This allows\ndeserializers that provide a custom enumeration serialization to properly deserialize the\ntype.",60,null],[10,"deserialize_ignored_any","","This method hints that the `Deserialize` type needs to deserialize a value whose type\ndoesn&#39;t matter because it is ignored.",60,null],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",null,null],[16,"Value","","The value produced by this visitor.",61,null],[11,"visit_bool","","`visit_bool` deserializes a `bool` into a `Value`.",61,null],[11,"visit_isize","","`visit_isize` deserializes a `isize` into a `Value`.",61,null],[11,"visit_i8","","`visit_i8` deserializes a `i8` into a `Value`.",61,null],[11,"visit_i16","","`visit_i16` deserializes a `i16` into a `Value`.",61,null],[11,"visit_i32","","`visit_i32` deserializes a `i32` into a `Value`.",61,null],[11,"visit_i64","","`visit_i64` deserializes a `i64` into a `Value`.",61,null],[11,"visit_usize","","`visit_usize` deserializes a `usize` into a `Value`.",61,null],[11,"visit_u8","","`visit_u8` deserializes a `u8` into a `Value`.",61,null],[11,"visit_u16","","`visit_u16` deserializes a `u16` into a `Value`.",61,null],[11,"visit_u32","","`visit_u32` deserializes a `u32` into a `Value`.",61,null],[11,"visit_u64","","`visit_u64` deserializes a `u64` into a `Value`.",61,null],[11,"visit_f32","","`visit_f32` deserializes a `f32` into a `Value`.",61,null],[11,"visit_f64","","`visit_f64` deserializes a `f64` into a `Value`.",61,null],[11,"visit_char","","`visit_char` deserializes a `char` into a `Value`.",61,null],[11,"visit_str","","`visit_str` deserializes a `&amp;str` into a `Value`.",61,null],[11,"visit_string","","`visit_string` deserializes a `String` into a `Value`.  This allows a deserializer to avoid\na copy if it is deserializing a string from a `String` type.  By default it passes a `&amp;str`\nto the `visit_str` method.",61,null],[11,"visit_unit","","`visit_unit` deserializes a `()` into a `Value`.",61,null],[11,"visit_unit_struct","","`visit_unit_struct` deserializes a unit struct into a `Value`.",61,null],[11,"visit_none","","`visit_none` deserializes a none value into a `Value`.",61,null],[11,"visit_some","","`visit_some` deserializes a value into a `Value`.",61,null],[11,"visit_newtype_struct","","`visit_newtype_struct` deserializes a value into a `Value`.",61,null],[11,"visit_seq","","`visit_seq` deserializes a `SeqVisitor` into a `Value`.",61,null],[11,"visit_map","","`visit_map` deserializes a `MapVisitor` into a `Value`.",61,null],[11,"visit_bytes","","`visit_bytes` deserializes a `&amp;[u8]` into a `Value`.",61,null],[11,"visit_byte_buf","","`visit_byte_buf` deserializes a `Vec&lt;u8&gt;` into a `Value`.",61,null],[8,"SeqVisitor","","`SeqVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",62,null],[10,"visit","","This returns a `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there\nare no more remaining items.",62,null],[10,"end","","This signals to the `SeqVisitor` that the `Visitor` does not expect any more items.",62,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",62,null],[8,"MapVisitor","","`MapVisitor` visits each item in a sequence.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",63,null],[11,"visit","","This returns a `Ok(Some((key, value)))` for the next (key-value) pair in the map, or\n`Ok(None)` if there are no more remaining items.",63,null],[10,"visit_key","","This returns a `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no\nmore remaining items.",63,null],[10,"visit_value","","This returns a `Ok(value)` for the next value in the map.",63,null],[10,"end","","This signals to the `MapVisitor` that the `Visitor` does not expect any more items.",63,null],[11,"size_hint","","Return the lower and upper bound of items remaining in the sequence.",63,null],[11,"missing_field","","Report that the struct has a field that wasn&#39;t deserialized",63,null],[8,"EnumVisitor","","`EnumVisitor` is a visitor that is created by the `Deserialize` and passed to the\n`Deserializer` in order to deserialize enums.",null,null],[16,"Value","","The value produced by this visitor.",64,null],[10,"visit","","Visit the specific variant with the `VariantVisitor`.",64,null],[8,"VariantVisitor","","`VariantVisitor` is a visitor that is created by the `Deserializer` and passed to the\n`Deserialize` in order to deserialize a specific enum variant.",null,null],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",65,null],[10,"visit_variant","","`visit_variant` is called to identify which variant to deserialize.",65,null],[11,"visit_unit","","`visit_unit` is called when deserializing a variant with no values.",65,null],[10,"visit_newtype","","`visit_newtype` is called when deserializing a variant with a single value.\nA good default is often to use the `visit_tuple` method to deserialize a `(value,)`.",65,null],[10,"visit_tuple","","`visit_tuple` is called when deserializing a tuple-like variant.\nIf no tuple variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::TupleVariant))`",65,null],[10,"visit_struct","","`visit_struct` is called when deserializing a struct-like variant.\nIf no struct variants are expected, yield a\n`Err(serde::de::Error::invalid_type(serde::de::Type::StructVariant))`",65,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[0,"iter","serde","Module that contains helper iterators.",null,null],[3,"LineColIterator","serde::iter","Iterator over a byte stream that tracks the current position&#39;s line and column.",null,null],[11,"new","","Construct a new `LineColIterator&lt;Iter&gt;`.",66,{"inputs":[{"name":"iter"}],"output":{"name":"linecoliterator"}}],[11,"line","","Report the current line inside the iterator.",66,null],[11,"col","","Report the current column inside the iterator.",66,null],[11,"get_ref","","Gets a reference to the underlying iterator.",66,null],[11,"get_mut","","Gets a mutable reference to the underlying iterator.",66,null],[11,"into_inner","","Unwraps this `LineColIterator`, returning the underlying iterator.",66,null],[11,"peek","","peeks at the next value",66,null],[11,"next","","",66,null],[0,"ser","serde","Generic serialization framework.\n# For Developers who want to serialize objects\nImplement the `Serialize` trait for the type of objects you want to serialize. Call methods of\nthe `serializer` object. For which methods to call and how to do so, look at the documentation\nof the `Serializer` trait.",null,null],[0,"impls","serde::ser","Implementations for all of Rust&#39;s builtin types. Tuples implement the `Serialize` trait if they\nhave at most 16 fields. Arrays implement the `Serialize` trait if their length is 32 or less.\nYou can always forward array serialization to slice serialization, which works for any length.\nLong tuples are best replaced by tuple structs, for which you can use `derive(Serialize)`. In\nthat case the number of fields is irrelevant.",null,null],[8,"Error","","`Error` is a trait that allows a `Serialize` to generically create a\n`Serializer` error.",null,null],[10,"custom","","Raised when there is a general error when serializing a type.",67,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"invalid_value","","Raised when a `Serialize` was passed an incorrect value.",67,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[8,"Serialize","","A trait that describes a type that can be serialized by a `Serializer`.",null,null],[10,"serialize","","Serializes this value into this serializer.",68,null],[8,"Serializer","","A trait that describes a type that can serialize a stream of values into the underlying format.",null,null],[16,"Error","","The error type that can be returned if some error occurs during serialization.",69,null],[16,"SeqState","","A state object that is initialized by `serialize_seq`, passed to\n`serialize_seq_elt`, and consumed by `serialize_seq_end`. Use `()` if no\nstate is required.",69,null],[16,"TupleState","","A state object that is initialized by `serialize_tuple`, passed to\n`serialize_tuple_elt`, and consumed by `serialize_tuple_end`. Use `()`\nif no state is required.",69,null],[16,"TupleStructState","","A state object that is initialized by `serialize_tuple_struct`, passed\nto `serialize_tuple_struct_elt`, and consumed by\n`serialize_tuple_struct_end`. Use `()` if no state is required.",69,null],[16,"TupleVariantState","","A state object that is initialized by `serialize_tuple_variant`, passed\nto `serialize_tuple_variant_elt`, and consumed by\n`serialize_tuple_variant_end`. Use `()` if no state is required.",69,null],[16,"MapState","","A state object that is initialized by `serialize_map`, passed to\n`serialize_map_elt`, and consumed by `serialize_map_end`. Use `()` if no\nstate is required.",69,null],[16,"StructState","","A state object that is initialized by `serialize_struct`, passed to\n`serialize_struct_elt`, and consumed by `serialize_struct_end`. Use `()`\nif no state is required.",69,null],[16,"StructVariantState","","A state object that is initialized by `serialize_struct_variant`, passed\nto `serialize_struct_variant_elt`, and consumed by\n`serialize_struct_variant_end`. Use `()` if no state is required.",69,null],[10,"serialize_bool","","Serializes a `bool` value.",69,null],[10,"serialize_isize","","Serializes an `isize` value. If the format does not differentiate\nbetween `isize` and `i64`, a reasonable implementation would be to cast\nthe value to `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i8","","Serializes an `i8` value. If the format does not differentiate between\n`i8` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i16","","Serializes an `i16` value. If the format does not differentiate between\n`i16` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i32","","Serializes an `i32` value. If the format does not differentiate between\n`i32` and `i64`, a reasonable implementation would be to cast the value\nto `i64` and forward to `serialize_i64`.",69,null],[10,"serialize_i64","","Serializes an `i64` value.",69,null],[10,"serialize_usize","","Serializes a `usize` value. If the format does not differentiate between\n`usize` and `u64`, a reasonable implementation would be to cast the\nvalue to `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u8","","Serializes a `u8` value. If the format does not differentiate between\n`u8` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u16","","Serializes a `u16` value. If the format does not differentiate between\n`u16` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u32","","Serializes a `u32` value. If the format does not differentiate between\n`u32` and `u64`, a reasonable implementation would be to cast the value\nto `u64` and forward to `serialize_u64`.",69,null],[10,"serialize_u64","","`Serializes a `u64` value.",69,null],[10,"serialize_f32","","Serializes an `f32` value. If the format does not differentiate between\n`f32` and `f64`, a reasonable implementation would be to cast the value\nto `f64` and forward to `serialize_f64`.",69,null],[10,"serialize_f64","","Serializes an `f64` value.",69,null],[10,"serialize_char","","Serializes a character. If the format does not support characters,\nit is reasonable to serialize it as a single element `str` or a `u32`.",69,null],[10,"serialize_str","","Serializes a `&amp;str`.",69,null],[10,"serialize_bytes","","Enables serializers to serialize byte slices more compactly or more\nefficiently than other types of slices. If no efficient implementation\nis available, a reasonable implementation would be to forward to\n`serialize_seq`. If forwarded, the implementation looks usually just like this:\n```rust\nlet mut state = try!(self.serialize_seq(value));\nfor b in value {\n    try!(self.serialize_seq_elt(&amp;mut state, b));\n}\nself.serialize_seq_end(state)\n```",69,null],[10,"serialize_unit","","Serializes a `()` value. It&#39;s reasonable to just not serialize anything.",69,null],[10,"serialize_unit_struct","","Serializes a unit struct value. A reasonable implementation would be to\nforward to `serialize_unit`.",69,null],[10,"serialize_unit_variant","","Serializes a unit variant, otherwise known as a variant with no\narguments. A reasonable implementation would be to forward to\n`serialize_unit`.",69,null],[10,"serialize_newtype_struct","","Allows a tuple struct with a single element, also known as a newtype\nstruct, to be more efficiently serialized than a tuple struct with\nmultiple items. A reasonable implementation would be to forward to\n`serialize_tuple_struct` or to just serialize the inner value without wrapping.",69,null],[10,"serialize_newtype_variant","","Allows a variant with a single item to be more efficiently serialized\nthan a variant with multiple items. A reasonable implementation would be\nto forward to `serialize_tuple_variant`.",69,null],[10,"serialize_none","","Serializes a `None` value.",69,null],[10,"serialize_some","","Serializes a `Some(...)` value.",69,null],[10,"serialize_seq","","Begins to serialize a sequence. This call must be followed by zero or\nmore calls to `serialize_seq_elt`, then a call to `serialize_seq_end`.",69,null],[10,"serialize_seq_elt","","Serializes a sequence element. Must have previously called\n`serialize_seq`.",69,null],[10,"serialize_seq_end","","Finishes serializing a sequence.",69,null],[10,"serialize_seq_fixed_size","","Begins to serialize a sequence whose length will be known at\ndeserialization time. This call must be followed by zero or more calls\nto `serialize_seq_elt`, then a call to `serialize_seq_end`. A reasonable\nimplementation would be to forward to `serialize_seq`.",69,null],[10,"serialize_tuple","","Begins to serialize a tuple. This call must be followed by zero or more\ncalls to `serialize_tuple_elt`, then a call to `serialize_tuple_end`. A\nreasonable implementation would be to forward to `serialize_seq`.",69,null],[10,"serialize_tuple_elt","","Serializes a tuple element. Must have previously called\n`serialize_tuple`.",69,null],[10,"serialize_tuple_end","","Finishes serializing a tuple.",69,null],[10,"serialize_tuple_struct","","Begins to serialize a tuple struct. This call must be followed by zero\nor more calls to `serialize_tuple_struct_elt`, then a call to\n`serialize_tuple_struct_end`. A reasonable implementation would be to\nforward to `serialize_tuple`.",69,null],[10,"serialize_tuple_struct_elt","","Serializes a tuple struct element. Must have previously called\n`serialize_tuple_struct`.",69,null],[10,"serialize_tuple_struct_end","","Finishes serializing a tuple struct.",69,null],[10,"serialize_tuple_variant","","Begins to serialize a tuple variant. This call must be followed by zero\nor more calls to `serialize_tuple_variant_elt`, then a call to\n`serialize_tuple_variant_end`. A reasonable implementation would be to\nforward to `serialize_tuple_struct`.",69,null],[10,"serialize_tuple_variant_elt","","Serializes a tuple variant element. Must have previously called\n`serialize_tuple_variant`.",69,null],[10,"serialize_tuple_variant_end","","Finishes serializing a tuple variant.",69,null],[10,"serialize_map","","Begins to serialize a map. This call must be followed by zero or more\ncalls to `serialize_map_key` and `serialize_map_value`, then a call to\n`serialize_map_end`.",69,null],[10,"serialize_map_key","","Serialize a map key. Must have previously called `serialize_map`.",69,null],[10,"serialize_map_value","","Serialize a map value. Must have previously called `serialize_map`.",69,null],[10,"serialize_map_end","","Finishes serializing a map.",69,null],[10,"serialize_struct","","Begins to serialize a struct. This call must be followed by zero or more\ncalls to `serialize_struct_elt`, then a call to `serialize_struct_end`.",69,null],[10,"serialize_struct_elt","","Serializes a struct field. Must have previously called\n`serialize_struct`.",69,null],[10,"serialize_struct_end","","Finishes serializing a struct.",69,null],[10,"serialize_struct_variant","","Begins to serialize a struct variant. This call must be followed by zero\nor more calls to `serialize_struct_variant_elt`, then a call to\n`serialize_struct_variant_end`.",69,null],[10,"serialize_struct_variant_elt","","Serialize a struct variant element. Must have previously called\n`serialize_struct_variant`.",69,null],[10,"serialize_struct_variant_end","","Finishes serializing a struct variant.",69,null],[14,"forward_to_deserialize","serde","Helper to forward `Deserializer` methods to `Deserializer::deserialize`.\nEvery given method ignores all arguments and forwards to `deserialize`.\nNote that `deserialize_enum` simply returns an `Error::invalid_type`; a\nbetter approach is tracked in [serde-rs/serde#521][1].",null,null]],"paths":[[3,"ByteBuf"],[3,"ByteBufVisitor"],[3,"Bytes"],[4,"Type"],[3,"UnitVisitor"],[3,"BoolVisitor"],[3,"PhantomDataVisitor"],[3,"BinaryHeapVisitor"],[3,"BTreeSetVisitor"],[3,"LinkedListVisitor"],[3,"HashSetVisitor"],[3,"VecVisitor"],[3,"VecDequeVisitor"],[3,"TupleVisitor1"],[3,"TupleVisitor2"],[3,"TupleVisitor3"],[3,"TupleVisitor4"],[3,"TupleVisitor5"],[3,"TupleVisitor6"],[3,"TupleVisitor7"],[3,"TupleVisitor8"],[3,"TupleVisitor9"],[3,"TupleVisitor10"],[3,"TupleVisitor11"],[3,"TupleVisitor12"],[3,"TupleVisitor13"],[3,"TupleVisitor14"],[3,"TupleVisitor15"],[3,"TupleVisitor16"],[3,"BTreeMapVisitor"],[3,"HashMapVisitor"],[3,"IgnoredAny"],[4,"Error"],[8,"ValueDeserializer"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U32Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"SeqDeserializer"],[3,"SeqVisitorDeserializer"],[3,"MapDeserializer"],[3,"MapVisitorDeserializer"],[3,"BytesDeserializer"],[3,"ByteBufDeserializer"],[8,"Error"],[8,"Deserialize"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqVisitor"],[8,"MapVisitor"],[8,"EnumVisitor"],[8,"VariantVisitor"],[3,"LineColIterator"],[8,"Error"],[8,"Serialize"],[8,"Serializer"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","items":[[8,"__Deref","lazy_static","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",0,null],[10,"deref","","The method called to dereference a value",0,null],[0,"lazy","","",null,null],[3,"Lazy","lazy_static::lazy","",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[11,"get","","",1,null],[14,"__lazy_static_create","lazy_static","",null,null],[14,"lazy_static","","",null,null]],"paths":[[8,"__Deref"],[3,"Lazy"]]};
searchIndex["num"] = {"doc":"A collection of numeric types and traits for Rust.","items":[[8,"Integer","num","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[8,"Num","","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",1,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",1,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[8,"Bounded","","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",5,{"inputs":[],"output":{"name":"self"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"zero","","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"abs","","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Saturating","","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",6,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",6,null],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",7,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",8,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",9,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",10,null],[8,"PrimInt","","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",11,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",11,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",11,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",11,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",11,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",11,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",11,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",11,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",11,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",11,null],[10,"swap_bytes","","Reverses the byte order of the integer.",11,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",11,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",11,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",11,null],[8,"Float","","",null,null],[10,"nan","","Returns the `NaN` value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",12,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",12,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",12,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",12,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",12,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",12,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",12,null],[10,"floor","","Returns the largest integer less than or equal to a number.",12,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",12,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",12,null],[10,"trunc","","Return the integer part of a number.",12,null],[10,"fract","","Returns the fractional part of a number.",12,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",12,null],[10,"signum","","Returns a number that represents the sign of `self`.",12,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",12,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",12,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",12,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",12,null],[10,"powi","","Raise a number to an integer power.",12,null],[10,"powf","","Raise a number to a floating point power.",12,null],[10,"sqrt","","Take the square root of a number.",12,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",12,null],[10,"exp2","","Returns `2^(self)`.",12,null],[10,"ln","","Returns the natural logarithm of the number.",12,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",12,null],[10,"log2","","Returns the base 2 logarithm of the number.",12,null],[10,"log10","","Returns the base 10 logarithm of the number.",12,null],[11,"to_degrees","","Converts radians to degrees.",12,null],[11,"to_radians","","Converts degrees to radians.",12,null],[10,"max","","Returns the maximum of the two numbers.",12,null],[10,"min","","Returns the minimum of the two numbers.",12,null],[10,"abs_sub","","The positive difference of two numbers.",12,null],[10,"cbrt","","Take the cubic root of a number.",12,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",12,null],[10,"sin","","Computes the sine of a number (in radians).",12,null],[10,"cos","","Computes the cosine of a number (in radians).",12,null],[10,"tan","","Computes the tangent of a number (in radians).",12,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",12,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",12,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",12,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",12,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",12,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",12,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",12,null],[10,"sinh","","Hyperbolic sine function.",12,null],[10,"cosh","","Hyperbolic cosine function.",12,null],[10,"tanh","","Hyperbolic tangent function.",12,null],[10,"asinh","","Inverse hyperbolic sine function.",12,null],[10,"acosh","","Inverse hyperbolic cosine function.",12,null],[10,"atanh","","Inverse hyperbolic tangent function.",12,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",12,null],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"cast","","",null,null],[8,"ToPrimitive","num::cast","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[5,"cast","","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"pow","num","",null,null],[5,"pow","num::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[5,"checked_pow","num","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[0,"integer","","",null,null],[0,"iter","","",null,null],[0,"traits","","",null,null]],"paths":[[8,"Integer"],[8,"Num"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Bounded"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Float"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"]]};
searchIndex["num_iter"] = {"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,null],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,null],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting\nat start (inclusive), and ending at stop (exclusive)).",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"range"}}],[5,"range_inclusive","","Return an iterator over the range [start, stop]",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestep"}}],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",null,{"inputs":[{"name":"a"},{"name":"a"},{"name":"a"}],"output":{"name":"rangestepinclusive"}}],[11,"clone","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"clone","","",1,null],[11,"next","","",1,null],[11,"size_hint","","",1,null],[11,"next_back","","",1,null],[11,"clone","","",2,null],[11,"next","","",2,null],[11,"clone","","",3,null],[11,"next","","",3,null]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["itoa"] = {"doc":"","items":[[5,"write","itoa","",null,{"inputs":[{"name":"w"},{"name":"v"}],"output":{"name":"result"}}],[8,"Integer","","",null,null],[10,"write","","",0,null]],"paths":[[8,"Integer"]]};
searchIndex["typeable"] = {"doc":"Exposes `Typeable`, which exposes the `get_type` method, which gives\nthe `TypeId` of any &#39;static type.","items":[[8,"Typeable","typeable","Universal mixin trait for adding a `get_type` method.",null,null],[11,"get_type","","Get the `TypeId` of this object.",0,null]],"paths":[[8,"Typeable"]]};
searchIndex["num_integer"] = {"doc":"Integer trait and functions.","items":[[5,"div_rem","num_integer","Simultaneous integer division and modulus",null,null],[5,"div_floor","","Floored integer division",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"mod_floor","","Floored integer modulus",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",null,null],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The\nresult is always positive.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[8,"Integer","","",null,null],[10,"div_floor","","Floored integer division.",0,null],[10,"mod_floor","","Floored integer modulo, satisfying:",0,null],[10,"gcd","","Greatest Common Divisor (GCD).",0,null],[10,"lcm","","Lowest Common Multiple (LCM).",0,null],[10,"divides","","Deprecated, use `is_multiple_of` instead.",0,null],[10,"is_multiple_of","","Returns `true` if `other` is a multiple of `self`.",0,null],[10,"is_even","","Returns `true` if the number is even.",0,null],[10,"is_odd","","Returns `true` if the number is odd.",0,null],[10,"div_rem","","Simultaneous truncated integer division and modulus.\nReturns `(quotient, remainder)`.",0,null],[11,"div_mod_floor","","Simultaneous floored integer division and modulus.\nReturns `(quotient, remainder)`.",0,null]],"paths":[[8,"Integer"]]};
searchIndex["rustc_serialize"] = {"doc":"Support code for encoding and decoding types.","items":[[0,"base64","rustc_serialize","Base64 binary-to-text encoding",null,null],[3,"Config","rustc_serialize::base64","Contains configuration parameters for `to_base64`.",null,null],[12,"char_set","","Character set to use",0,null],[12,"newline","","Newline to use",0,null],[12,"pad","","True to pad output with `=` characters",0,null],[12,"line_length","","`Some(len)` to wrap lines at `len`, `None` to disable line wrapping",0,null],[4,"CharacterSet","","Available encoding character sets",null,null],[13,"Standard","","The standard character set (uses `+` and `/`)",1,null],[13,"UrlSafe","","The URL safe character set (uses `-` and `_`)",1,null],[4,"Newline","","Available newline types",null,null],[13,"LF","","A linefeed (i.e. Unix-style newline)",2,null],[13,"CRLF","","A carriage return and a linefeed (i.e. Windows-style newline)",2,null],[4,"FromBase64Error","","Errors that can occur when decoding a base64 encoded string",null,null],[13,"InvalidBase64Byte","","The input contained a character not part of the base64 format",3,null],[13,"InvalidBase64Length","","The input had an invalid length",3,null],[7,"STANDARD","","Configuration for RFC 4648 standard base64 encoding",null,null],[7,"URL_SAFE","","Configuration for RFC 4648 base64url encoding",null,null],[7,"MIME","","Configuration for RFC 2045 MIME base64 encoding",null,null],[8,"ToBase64","","A trait for converting a value to base64 encoding.",null,null],[10,"to_base64","","Converts the value of `self` to a base64 value following the specified\nformat configuration, returning the owned string.",4,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",5,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",3,null],[0,"hex","rustc_serialize","Hex binary-to-text encoding",null,null],[4,"FromHexError","rustc_serialize::hex","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",6,null],[13,"InvalidHexLength","","The input had an invalid length",6,null],[8,"ToHex","","A trait for converting a value to hexadecimal encoding",null,null],[10,"to_hex","","Converts the value of `self` to a hex value, returning the owned\nstring.",7,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",8,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"description","","",6,null],[11,"fmt","","",6,null],[0,"json","rustc_serialize","JSON parsing and serialization",null,null],[3,"PrettyJson","rustc_serialize::json","",null,null],[3,"AsJson","","",null,null],[3,"AsPrettyJson","","",null,null],[3,"Encoder","","A structure for implementing serialization to JSON.",null,null],[3,"Stack","","A Stack represents the current position of the parser in the logical\nstructure of the JSON stream.\nFor example foo.bar[3].x",null,null],[3,"Parser","","A streaming JSON parser implemented as an iterator of JsonEvent, consuming\nan iterator of char.",null,null],[3,"Builder","","A Builder consumes a json::Parser to create a generic Json structure.",null,null],[3,"Decoder","","A structure to decode JSON to values in rust.",null,null],[4,"Json","","Represents a json value",null,null],[13,"I64","","",9,null],[13,"U64","","",9,null],[13,"F64","","",9,null],[13,"String","","",9,null],[13,"Boolean","","",9,null],[13,"Array","","",9,null],[13,"Object","","",9,null],[13,"Null","","",9,null],[4,"ErrorCode","","The errors that can arise while parsing a JSON stream.",null,null],[13,"InvalidSyntax","","",10,null],[13,"InvalidNumber","","",10,null],[13,"EOFWhileParsingObject","","",10,null],[13,"EOFWhileParsingArray","","",10,null],[13,"EOFWhileParsingValue","","",10,null],[13,"EOFWhileParsingString","","",10,null],[13,"KeyMustBeAString","","",10,null],[13,"ExpectedColon","","",10,null],[13,"TrailingCharacters","","",10,null],[13,"TrailingComma","","",10,null],[13,"InvalidEscape","","",10,null],[13,"InvalidUnicodeCodePoint","","",10,null],[13,"LoneLeadingSurrogateInHexEscape","","",10,null],[13,"UnexpectedEndOfHexEscape","","",10,null],[13,"UnrecognizedHex","","",10,null],[13,"NotFourDigit","","",10,null],[13,"ControlCharacterInString","","",10,null],[13,"NotUtf8","","",10,null],[4,"ParserError","","",null,null],[13,"SyntaxError","","msg, line, col",11,null],[13,"IoError","","",11,null],[4,"DecoderError","","",null,null],[13,"ParseError","","",12,null],[13,"ExpectedError","","",12,null],[13,"MissingFieldError","","",12,null],[13,"UnknownVariantError","","",12,null],[13,"ApplicationError","","",12,null],[13,"EOF","","",12,null],[4,"EncoderError","","",null,null],[13,"FmtError","","",13,null],[13,"BadHashmapKey","","",13,null],[4,"JsonEvent","","The output of the streaming parser.",null,null],[13,"ObjectStart","","",14,null],[13,"ObjectEnd","","",14,null],[13,"ArrayStart","","",14,null],[13,"ArrayEnd","","",14,null],[13,"BooleanValue","","",14,null],[13,"I64Value","","",14,null],[13,"U64Value","","",14,null],[13,"F64Value","","",14,null],[13,"StringValue","","",14,null],[13,"NullValue","","",14,null],[13,"Error","","",14,null],[4,"StackElement","","StackElements compose a Stack.\nFor example, Key(&quot;foo&quot;), Key(&quot;bar&quot;), Index(3) and Key(&quot;x&quot;) are the\nStackElements compositing the stack that represents foo.bar[3].x",null,null],[13,"Index","","",15,null],[13,"Key","","",15,null],[5,"error_str","","Returns a readable error string for a given error code.",null,{"inputs":[{"name":"errorcode"}],"output":{"name":"str"}}],[5,"decode","","Shortcut function to decode a JSON `&amp;str` into an object",null,{"inputs":[{"name":"str"}],"output":{"name":"decoderesult"}}],[5,"encode","","Shortcut function to encode a `T` into a JSON `String`",null,{"inputs":[{"name":"t"}],"output":{"name":"encoderesult"}}],[5,"as_json","","Create an `AsJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asjson"}}],[5,"as_pretty_json","","Create an `AsPrettyJson` wrapper which can be used to print a value as JSON\non-the-fly via `write!`",null,{"inputs":[{"name":"t"}],"output":{"name":"asprettyjson"}}],[6,"Array","","",null,null],[6,"Object","","",null,null],[6,"BuilderError","","",null,null],[6,"EncodeResult","","",null,null],[6,"DecodeResult","","",null,null],[8,"ToJson","","A trait for converting values to JSON",null,null],[10,"to_json","","Converts the value of `self` to an instance of JSON",16,null],[11,"clone","","",9,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"partial_cmp","","",9,null],[11,"lt","","",9,null],[11,"le","","",9,null],[11,"gt","","",9,null],[11,"ge","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"eq","","",10,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"fmt","","",12,null],[11,"fmt","","",13,null],[11,"eq","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",10,null],[11,"description","","",12,null],[11,"cause","","",12,null],[11,"fmt","","",12,null],[11,"from","","",12,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",11,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",17,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",17,null],[11,"emit_nil","","",17,null],[11,"emit_usize","","",17,null],[11,"emit_u64","","",17,null],[11,"emit_u32","","",17,null],[11,"emit_u16","","",17,null],[11,"emit_u8","","",17,null],[11,"emit_isize","","",17,null],[11,"emit_i64","","",17,null],[11,"emit_i32","","",17,null],[11,"emit_i16","","",17,null],[11,"emit_i8","","",17,null],[11,"emit_bool","","",17,null],[11,"emit_f64","","",17,null],[11,"emit_f32","","",17,null],[11,"emit_char","","",17,null],[11,"emit_str","","",17,null],[11,"emit_enum","","",17,null],[11,"emit_enum_variant","","",17,null],[11,"emit_enum_variant_arg","","",17,null],[11,"emit_enum_struct_variant","","",17,null],[11,"emit_enum_struct_variant_field","","",17,null],[11,"emit_struct","","",17,null],[11,"emit_struct_field","","",17,null],[11,"emit_tuple","","",17,null],[11,"emit_tuple_arg","","",17,null],[11,"emit_tuple_struct","","",17,null],[11,"emit_tuple_struct_arg","","",17,null],[11,"emit_option","","",17,null],[11,"emit_option_none","","",17,null],[11,"emit_option_some","","",17,null],[11,"emit_seq","","",17,null],[11,"emit_seq_elt","","",17,null],[11,"emit_map","","",17,null],[11,"emit_map_elt_key","","",17,null],[11,"emit_map_elt_val","","",17,null],[11,"encode","","",9,null],[11,"from_reader","","Decodes a json value from an `&amp;mut io::Read`",9,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",9,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",9,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",9,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",9,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",9,null],[11,"as_object","","If the Json value is an Object, returns a reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"as_object_mut","","If the Json value is an Object, returns a mutable reference to the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"into_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",9,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",9,null],[11,"as_array","","If the Json value is an Array, returns a reference to the associated vector.\nReturns None otherwise.",9,null],[11,"as_array_mut","","If the Json value is an Array, returns a mutable reference to the associated vector.\nReturns None otherwise.",9,null],[11,"into_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",9,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",9,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",9,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",9,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",9,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",9,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",9,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",9,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",9,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",9,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",9,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",9,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",9,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",9,null],[11,"index","","",9,null],[11,"index","","",9,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"new","","",18,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",18,null],[11,"is_empty","","Returns true if the stack is empty.",18,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",18,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",18,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",18,null],[11,"top","","Returns the top-most element (if any).",18,null],[11,"next","","",19,null],[11,"new","","Creates the JSON parser.",19,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",19,null],[11,"new","","Create a JSON Builder.",20,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",20,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",21,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",21,null],[11,"read_usize","","",21,null],[11,"read_u8","","",21,null],[11,"read_u16","","",21,null],[11,"read_u32","","",21,null],[11,"read_u64","","",21,null],[11,"read_isize","","",21,null],[11,"read_i8","","",21,null],[11,"read_i16","","",21,null],[11,"read_i32","","",21,null],[11,"read_i64","","",21,null],[11,"read_f32","","",21,null],[11,"read_f64","","",21,null],[11,"read_bool","","",21,null],[11,"read_char","","",21,null],[11,"read_str","","",21,null],[11,"read_enum","","",21,null],[11,"read_enum_variant","","",21,null],[11,"read_enum_variant_arg","","",21,null],[11,"read_enum_struct_variant","","",21,null],[11,"read_enum_struct_variant_field","","",21,null],[11,"read_struct","","",21,null],[11,"read_struct_field","","",21,null],[11,"read_tuple","","",21,null],[11,"read_tuple_arg","","",21,null],[11,"read_tuple_struct","","",21,null],[11,"read_tuple_struct_arg","","",21,null],[11,"read_option","","",21,null],[11,"read_seq","","",21,null],[11,"read_seq_elt","","",21,null],[11,"read_map","","",21,null],[11,"read_map_elt_key","","",21,null],[11,"read_map_elt_val","","",21,null],[11,"error","","",21,null],[11,"to_json","","",9,null],[11,"fmt","","Encodes a json value into a string",9,null],[11,"fmt","","Encodes a json value into a string",22,null],[11,"fmt","","Encodes a json value into a string",23,null],[11,"indent","","Set the indentation level for the emitted JSON",24,null],[11,"fmt","","Encodes a json value into a string",24,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Decoder","rustc_serialize","Trait for reading in an encoding for deserialization.",null,null],[16,"Error","","The error type for method results.",25,null],[10,"read_nil","","Read a nil value.",25,null],[10,"read_usize","","Read a usize value.",25,null],[10,"read_u64","","Read a u64 value.",25,null],[10,"read_u32","","Read a u32 value.",25,null],[10,"read_u16","","Read a u16 value.",25,null],[10,"read_u8","","Read a u8 value.",25,null],[10,"read_isize","","Read a isize value.",25,null],[10,"read_i64","","Read a i64 value.",25,null],[10,"read_i32","","Read a i32 value.",25,null],[10,"read_i16","","Read a i16 value.",25,null],[10,"read_i8","","Read a i8 value.",25,null],[10,"read_bool","","Read a bool value.",25,null],[10,"read_f64","","Read a f64 value.",25,null],[10,"read_f32","","Read a f32 value.",25,null],[10,"read_char","","Read a char value.",25,null],[10,"read_str","","Read a string value.",25,null],[10,"read_enum","","Read an enumeration value.",25,null],[10,"read_enum_variant","","Read an enumeration value.",25,null],[10,"read_enum_variant_arg","","Read an unnamed data item for an enumeration variant.",25,null],[10,"read_enum_struct_variant","","Read an enumeration value.",25,null],[10,"read_enum_struct_variant_field","","Read a named data item for an enumeration variant.",25,null],[10,"read_struct","","Read an struct value.",25,null],[10,"read_struct_field","","Read a field for a struct value.",25,null],[10,"read_tuple","","Read a tuple value.",25,null],[10,"read_tuple_arg","","Read a data item for a tuple.",25,null],[10,"read_tuple_struct","","Read a tuple struct value.",25,null],[10,"read_tuple_struct_arg","","Read a data item for a tuple struct.",25,null],[10,"read_option","","Read an optional value.",25,null],[10,"read_seq","","Read a sequence of values.",25,null],[10,"read_seq_elt","","Read an element in the sequence.",25,null],[10,"read_map","","Read an associative container (map).",25,null],[10,"read_map_elt_key","","Read the key for an entry in a map.",25,null],[10,"read_map_elt_val","","Read the value for an entry in a map.",25,null],[10,"error","","Record a decoding error.",25,null],[8,"Encoder","","Trait for writing out an encoding when serializing.",null,null],[16,"Error","","The error type for method results.",26,null],[10,"emit_nil","","Emit a nil value.",26,null],[10,"emit_usize","","Emit a usize value.",26,null],[10,"emit_u64","","Emit a u64 value.",26,null],[10,"emit_u32","","Emit a u32 value.",26,null],[10,"emit_u16","","Emit a u16 value.",26,null],[10,"emit_u8","","Emit a u8 value.",26,null],[10,"emit_isize","","Emit a isize value.",26,null],[10,"emit_i64","","Emit a i64 value.",26,null],[10,"emit_i32","","Emit a i32 value.",26,null],[10,"emit_i16","","Emit a i16 value.",26,null],[10,"emit_i8","","Emit a i8 value.",26,null],[10,"emit_bool","","Emit a bool value.",26,null],[10,"emit_f64","","Emit a f64 value.",26,null],[10,"emit_f32","","Emit a f32 value.",26,null],[10,"emit_char","","Emit a char value.",26,null],[10,"emit_str","","Emit a string value.",26,null],[10,"emit_enum","","Emit an enumeration value.",26,null],[10,"emit_enum_variant","","Emit a enumeration variant value with no or unnamed data.",26,null],[10,"emit_enum_variant_arg","","Emit an unnamed data item for an enumeration variant.",26,null],[10,"emit_enum_struct_variant","","Emit a enumeration variant value with no or named data.",26,null],[10,"emit_enum_struct_variant_field","","Emit a named data item for an enumeration variant.",26,null],[10,"emit_struct","","Emit a struct value.",26,null],[10,"emit_struct_field","","Emit a field item for a struct.",26,null],[10,"emit_tuple","","Emit a tuple value.",26,null],[10,"emit_tuple_arg","","Emit a data item for a tuple.",26,null],[10,"emit_tuple_struct","","Emit a tuple struct value.",26,null],[10,"emit_tuple_struct_arg","","Emit a data item for a tuple struct.",26,null],[10,"emit_option","","Emit an optional value.",26,null],[10,"emit_option_none","","Emit the `None` optional value.",26,null],[10,"emit_option_some","","Emit the `Some(x)` optional value.",26,null],[10,"emit_seq","","Emit a sequence of values.",26,null],[10,"emit_seq_elt","","Emit an element in a sequence.",26,null],[10,"emit_map","","Emit an associative container (map).",26,null],[10,"emit_map_elt_key","","Emit the key for an entry in a map.",26,null],[10,"emit_map_elt_val","","Emit the value for an entry in a map.",26,null],[8,"Decodable","","Trait for deserializing a type.",null,null],[10,"decode","","Deserialize a value using a `Decoder`.",27,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"Encodable","","Trait for serializing a type.",null,null],[10,"encode","","Serialize a value using an `Encoder`.",28,null],[8,"DecoderHelpers","","Trait with helper functions for implementing `Decodable`.",null,null],[10,"read_to_vec","","Read a sequence into a vector.",29,null],[8,"EncoderHelpers","","Trait with helper functions for implementing `Encodable`.",null,null],[10,"emit_from_vec","","Emit a vector as a sequence.",30,null]],"paths":[[3,"Config"],[4,"CharacterSet"],[4,"Newline"],[4,"FromBase64Error"],[8,"ToBase64"],[8,"FromBase64"],[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"],[4,"Json"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[4,"JsonEvent"],[4,"StackElement"],[8,"ToJson"],[3,"Encoder"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"Decoder"],[8,"Encoder"],[8,"Decodable"],[8,"Encodable"],[8,"DecoderHelpers"],[8,"EncoderHelpers"]]};
searchIndex["num_traits"] = {"doc":"Numeric traits for generic mathematics","items":[[3,"ParseFloatError","num_traits","",null,null],[12,"kind","","",0,null],[4,"FloatErrorKind","","",null,null],[13,"Empty","","",1,null],[13,"Invalid","","",1,null],[0,"identities","","",null,null],[5,"zero","num_traits::identities","Returns the additive identity, `0`.",null,{"inputs":[],"output":{"name":"t"}}],[5,"one","","Returns the multiplicative identity, `1`.",null,{"inputs":[],"output":{"name":"t"}}],[8,"Zero","","Defines an additive identity element for `Self`.",null,null],[10,"zero","","Returns the additive identity element of `Self`, `0`.",2,{"inputs":[],"output":{"name":"self"}}],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",2,null],[8,"One","","Defines a multiplicative identity element for `Self`.",null,null],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",3,{"inputs":[],"output":{"name":"self"}}],[0,"sign","num_traits","",null,null],[5,"abs","num_traits::sign","Computes the absolute value.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"abs_sub","","The positive difference of two numbers.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"signum","","Returns the sign of the number.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",null,null],[10,"abs","","Computes the absolute value.",4,null],[10,"abs_sub","","The positive difference of two numbers.",4,null],[10,"signum","","Returns the sign of the number.",4,null],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",4,null],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",4,null],[8,"Unsigned","","A trait for values which cannot be negative",null,null],[0,"ops","num_traits","",null,null],[0,"saturating","num_traits::ops","",null,null],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",null,null],[10,"saturating_add","","Saturating addition operator.\nReturns a+b, saturating at the numeric bounds instead of overflowing.",5,null],[10,"saturating_sub","","Saturating subtraction operator.\nReturns a-b, saturating at the numeric bounds instead of overflowing.",5,null],[0,"checked","num_traits::ops","",null,null],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on\noverflow.",null,null],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is\nreturned.",6,null],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",null,null],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens,\n`None` is returned.",7,null],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or\noverflow.",null,null],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow\nor overflow happens, `None` is returned.",8,null],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of\nwrapping around on underflow and overflow.",null,null],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by\nzero. If any of that happens, `None` is returned.",9,null],[0,"bounds","num_traits","",null,null],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",null,null],[10,"min_value","","returns the smallest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","returns the largest finite number this type can represent",10,{"inputs":[],"output":{"name":"self"}}],[0,"float","num_traits","",null,null],[8,"Float","num_traits::float","",null,null],[10,"nan","","Returns the `NaN` value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"infinity","","Returns the infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_infinity","","Returns the negative infinite value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"neg_zero","","Returns `-0.0`.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_value","","Returns the smallest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[11,"epsilon","","Returns epsilon, a small positive value.",11,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest finite value that this type can represent.",11,{"inputs":[],"output":{"name":"self"}}],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",11,null],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and\nfalse otherwise.",11,null],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",11,null],[10,"is_normal","","Returns `true` if the number is neither zero, infinite,\n[subnormal][subnormal], or `NaN`.",11,null],[10,"classify","","Returns the floating point category of the number. If only one property\nis going to be tested, it is generally faster to use the specific\npredicate instead.",11,null],[10,"floor","","Returns the largest integer less than or equal to a number.",11,null],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",11,null],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from\n`0.0`.",11,null],[10,"trunc","","Return the integer part of a number.",11,null],[10,"fract","","Returns the fractional part of a number.",11,null],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the\nnumber is `Float::nan()`.",11,null],[10,"signum","","Returns a number that represents the sign of `self`.",11,null],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0` and\n`Float::infinity()`.",11,null],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0` and\n`Float::neg_infinity()`.",11,null],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding\nerror. This produces a more accurate result with better performance than\na separate multiplication operation followed by an add.",11,null],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",11,null],[10,"powi","","Raise a number to an integer power.",11,null],[10,"powf","","Raise a number to a floating point power.",11,null],[10,"sqrt","","Take the square root of a number.",11,null],[10,"exp","","Returns `e^(self)`, (the exponential function).",11,null],[10,"exp2","","Returns `2^(self)`.",11,null],[10,"ln","","Returns the natural logarithm of the number.",11,null],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",11,null],[10,"log2","","Returns the base 2 logarithm of the number.",11,null],[10,"log10","","Returns the base 10 logarithm of the number.",11,null],[11,"to_degrees","","Converts radians to degrees.",11,null],[11,"to_radians","","Converts degrees to radians.",11,null],[10,"max","","Returns the maximum of the two numbers.",11,null],[10,"min","","Returns the minimum of the two numbers.",11,null],[10,"abs_sub","","The positive difference of two numbers.",11,null],[10,"cbrt","","Take the cubic root of a number.",11,null],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given\nlegs of length `x` and `y`.",11,null],[10,"sin","","Computes the sine of a number (in radians).",11,null],[10,"cos","","Computes the cosine of a number (in radians).",11,null],[10,"tan","","Computes the tangent of a number (in radians).",11,null],[10,"asin","","Computes the arcsine of a number. Return value is in radians in\nthe range [-pi/2, pi/2] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"acos","","Computes the arccosine of a number. Return value is in radians in\nthe range [0, pi] or NaN if the number is outside the range\n[-1, 1].",11,null],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the\nrange [-pi/2, pi/2];",11,null],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",11,null],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns\n`(sin(x), cos(x))`.",11,null],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the\nnumber is close to zero.",11,null],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if\nthe operations were performed separately.",11,null],[10,"sinh","","Hyperbolic sine function.",11,null],[10,"cosh","","Hyperbolic cosine function.",11,null],[10,"tanh","","Hyperbolic tangent function.",11,null],[10,"asinh","","Inverse hyperbolic sine function.",11,null],[10,"acosh","","Inverse hyperbolic cosine function.",11,null],[10,"atanh","","Inverse hyperbolic tangent function.",11,null],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively.\nThe original number can be recovered by `sign * mantissa * 2 ^ exponent`.\nThe floating point encoding is documented in the [Reference][floating-point].",11,null],[8,"FloatConst","","",null,null],[10,"E","","Return Euler’s number.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_PI","","Return `1.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_PI","","Return `2.0 / π`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_2","","Return `π / 2.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_3","","Return `π / 3.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_4","","Return `π / 4.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_6","","Return `π / 6.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"FRAC_PI_8","","Return `π / 8.0`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_10","","Return `ln(10.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LN_2","","Return `ln(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG10_E","","Return `log10(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"LOG2_E","","Return `log2(e)`.",12,{"inputs":[],"output":{"name":"self"}}],[10,"PI","","Return Archimedes’ constant.",12,{"inputs":[],"output":{"name":"self"}}],[10,"SQRT_2","","Return `sqrt(2.0)`.",12,{"inputs":[],"output":{"name":"self"}}],[0,"cast","num_traits","",null,null],[5,"cast","num_traits::cast","Cast from one machine scalar to another.",null,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[8,"ToPrimitive","","A generic trait for converting a value to a number.",null,null],[11,"to_isize","","Converts the value of `self` to an `isize`.",13,null],[11,"to_i8","","Converts the value of `self` to an `i8`.",13,null],[11,"to_i16","","Converts the value of `self` to an `i16`.",13,null],[11,"to_i32","","Converts the value of `self` to an `i32`.",13,null],[10,"to_i64","","Converts the value of `self` to an `i64`.",13,null],[11,"to_usize","","Converts the value of `self` to a `usize`.",13,null],[11,"to_u8","","Converts the value of `self` to an `u8`.",13,null],[11,"to_u16","","Converts the value of `self` to an `u16`.",13,null],[11,"to_u32","","Converts the value of `self` to an `u32`.",13,null],[10,"to_u64","","Converts the value of `self` to an `u64`.",13,null],[11,"to_f32","","Converts the value of `self` to an `f32`.",13,null],[11,"to_f64","","Converts the value of `self` to an `f64`.",13,null],[8,"FromPrimitive","","A generic trait for converting a number to a value.",null,null],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the\nvalue cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"isize"}],"output":{"name":"option"}}],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i8"}],"output":{"name":"option"}}],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i16"}],"output":{"name":"option"}}],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"usize"}],"output":{"name":"option"}}],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u8"}],"output":{"name":"option"}}],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f32"}],"output":{"name":"option"}}],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the\ntype cannot be represented by this value, the `None` is returned.",14,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[8,"NumCast","","An interface for casting between machine scalars.",null,null],[10,"from","","Creates a number from another value that can be converted into\na primitive via the `ToPrimitive` trait.",15,{"inputs":[{"name":"t"}],"output":{"name":"option"}}],[0,"int","num_traits","",null,null],[8,"PrimInt","num_traits::int","",null,null],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",16,null],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",16,null],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation\nof `self`.",16,null],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation\nof `self`.",16,null],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping\nthe truncated bits to the end of the resulting integer.",16,null],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping\nthe truncated bits to the beginning of the resulting integer.",16,null],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying\nthe &quot;sign bit&quot; in the most significant bits even for unsigned types.",16,null],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling\nzeros in the least significant bits.",16,null],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling\nzeros in the most significant bits.",16,null],[10,"swap_bytes","","Reverses the byte order of the integer.",16,null],[10,"from_be","","Convert an integer from big endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"from_le","","Convert an integer from little endian to the target&#39;s endianness.",16,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[10,"to_be","","Convert `self` to big endian from the target&#39;s endianness.",16,null],[10,"to_le","","Convert `self` to little endian from the target&#39;s endianness.",16,null],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",16,null],[0,"pow","num_traits","",null,null],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"t"}}],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",null,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"option"}}],[8,"Num","num_traits","The base trait for numeric types",null,null],[16,"FromStrRadixErr","","",17,null],[10,"from_str_radix","","Convert from a string and radix &lt;= 36.",17,{"inputs":[{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[11,"fmt","","",1,null],[11,"fmt","","",0,null]],"paths":[[3,"ParseFloatError"],[4,"FloatErrorKind"],[8,"Zero"],[8,"One"],[8,"Signed"],[8,"Saturating"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"]]};
searchIndex["dtoa"] = {"doc":"","items":[[5,"write","dtoa","",null,{"inputs":[{"name":"w"},{"name":"v"}],"output":{"name":"result"}}],[8,"Floating","","",null,null],[10,"write","","",0,null],[14,"diyfp","","",null,null],[14,"dtoa","","",null,null]],"paths":[[8,"Floating"]]};
searchIndex["httparse"] = {"doc":"# httparse","items":[[3,"InvalidChunkSize","httparse","An error in parsing a chunk size.",null,null],[3,"Request","","A parsed Request.",null,null],[12,"method","","The request method, such as `GET`.",0,null],[12,"path","","The request path, such as `/about-us`.",0,null],[12,"version","","The request version, such as `HTTP/1.1`.",0,null],[12,"headers","","The request headers.",0,null],[3,"Response","","A parsed Response.",null,null],[12,"version","","The response version, such as `HTTP/1.1`.",1,null],[12,"code","","The response code, such as `200`.",1,null],[12,"reason","","The response reason-phrase, such as `OK`.",1,null],[12,"headers","","The response headers.",1,null],[3,"Header","","Represents a parsed header.",null,null],[12,"name","","The name portion of a header.",2,null],[12,"value","","The value portion of a header.",2,null],[4,"Error","","An error in parsing.",null,null],[13,"HeaderName","","Invalid byte in header name.",3,null],[13,"HeaderValue","","Invalid byte in header value.",3,null],[13,"NewLine","","Invalid byte in new line.",3,null],[13,"Status","","Invalid byte in Response status.",3,null],[13,"Token","","Invalid byte where token is required.",3,null],[13,"TooManyHeaders","","Parsed more headers than provided buffer can contain.",3,null],[13,"Version","","Invalid byte in HTTP version.",3,null],[4,"Status","","The result of a successful parse pass.",null,null],[13,"Complete","","The completed result.",4,null],[13,"Partial","","A partial result.",4,null],[5,"parse_headers","","Parse a buffer of bytes as headers.",null,null],[5,"parse_chunk_size","","Parse a buffer of bytes as a chunk size.",null,null],[6,"Result","","A Result of any parsing action.",null,null],[17,"EMPTY_HEADER","","An empty header, useful for constructing a `Header` array to pass in for\nparsing.",null,null],[11,"clone","","",3,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"description","","",3,null],[11,"fmt","","",5,null],[11,"eq","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"fmt","","",4,null],[11,"is_complete","","Convenience method to check if status is complete.",4,null],[11,"is_partial","","Convenience method to check if status is partial.",4,null],[11,"unwrap","","Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.",4,null],[11,"new","","Creates a new Request, using a slice of headers you allocate.",0,null],[11,"parse","","Try to parse a buffer of bytes into the Request.",0,null],[11,"new","","Creates a new `Response` using a slice of `Header`s you have allocated.",1,null],[11,"parse","","Try to parse a buffer of bytes into this `Response`.",1,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"fmt","","",2,null]],"paths":[[3,"Request"],[3,"Response"],[3,"Header"],[4,"Error"],[4,"Status"],[3,"InvalidChunkSize"]]};
searchIndex["language_tags"] = {"doc":"Language tags can be used identify human languages, scripts e.g. Latin script, countries and\nother regions.","items":[[3,"LanguageTag","language_tags","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",0,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",0,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",0,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",0,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",0,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",0,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",0,null],[4,"Error","","Defines an Error type for langtags.",null,null],[13,"DuplicateExtension","","The same extension subtag is only allowed once in a tag before the private use part.",1,null],[13,"EmptyExtension","","If an extension subtag is present, it must not be empty.",1,null],[13,"EmptyPrivateUse","","If the `x` subtag is present, it must not be empty.",1,null],[13,"ForbiddenChar","","The langtag contains a char that is not A-Z, a-z, 0-9 or the dash.",1,null],[13,"InvalidSubtag","","A subtag fails to parse, it does not match any other subtags.",1,null],[13,"InvalidLanguage","","The given language subtag is invalid.",1,null],[13,"SubtagTooLong","","A subtag may be eight characters in length at maximum.",1,null],[13,"TooManyExtlangs","","At maximum three extlangs are allowed, but zero to one extlangs are preferred.",1,null],[6,"Result","","Result type used for this library.",null,null],[17,"GRANDFATHERED","","Contains all grandfathered tags.",null,null],[11,"fmt","","",1,null],[11,"eq","","",1,null],[11,"description","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"languagetag"}}],[11,"clone","","",0,null],[11,"matches","","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",0,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",0,null],[11,"canonicalize","","Returns the canonical version of the language tag.",0,null],[11,"eq","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[14,"langtag","","Utility for creating simple language tags.",null,null]],"paths":[[3,"LanguageTag"],[4,"Error"]]};
initSearch(searchIndex);
